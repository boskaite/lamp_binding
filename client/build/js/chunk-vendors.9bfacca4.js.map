{"version":3,"sources":["webpack:///./node_modules/axios/lib/core/Axios.js","webpack:///./node_modules/axios/lib/helpers/spread.js","webpack:///./node_modules/axios/lib/helpers/bind.js","webpack:///./node_modules/axios/lib/defaults.js","webpack:///./node_modules/axios/lib/core/createError.js","webpack:///./node_modules/axios/lib/cancel/isCancel.js","webpack:///./node_modules/axios/lib/helpers/buildURL.js","webpack:///./node_modules/axios/lib/core/enhanceError.js","webpack:///./node_modules/axios/lib/helpers/isURLSameOrigin.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/index.js","webpack:///./node_modules/node-libs-browser/mock/process.js","webpack:///./node_modules/axios/lib/core/settle.js","webpack:///./node_modules/axios/lib/core/mergeConfig.js","webpack:///./node_modules/axios/lib/core/dispatchRequest.js","webpack:///./node_modules/axios/lib/helpers/isAxiosError.js","webpack:///./node_modules/vue-router/dist/vue-router.esm-bundler.js","webpack:///./node_modules/@vue/reactivity/dist/reactivity.esm-bundler.js","webpack:///./node_modules/@vue/runtime-core/dist/runtime-core.esm-bundler.js","webpack:///./node_modules/@vue/runtime-dom/dist/runtime-dom.esm-bundler.js","webpack:///./node_modules/axios/lib/cancel/Cancel.js","webpack:///./node_modules/axios/lib/helpers/cookies.js","webpack:///./node_modules/axios/lib/core/buildFullPath.js","webpack:///./node_modules/axios/lib/cancel/CancelToken.js","webpack:///./node_modules/@vue/shared/dist/shared.esm-bundler.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/env.js","webpack:///./node_modules/axios/lib/adapters/xhr.js","webpack:///./node_modules/@vue/devtools-api/lib/esm/const.js","webpack:///./node_modules/axios/index.js","webpack:///./node_modules/axios/lib/helpers/parseHeaders.js","webpack:///./node_modules/axios/lib/core/transformData.js","webpack:///./node_modules/axios/lib/utils.js","webpack:///./node_modules/axios/lib/helpers/normalizeHeaderName.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/axios/lib/axios.js","webpack:///./node_modules/axios/lib/helpers/isAbsoluteURL.js","webpack:///./node_modules/path-browserify/index.js","webpack:///./node_modules/axios/lib/helpers/combineURLs.js","webpack:///./node_modules/axios/lib/core/InterceptorManager.js"],"names":["utils","buildURL","InterceptorManager","dispatchRequest","mergeConfig","Axios","instanceConfig","this","defaults","interceptors","request","response","prototype","config","arguments","url","method","toLowerCase","chain","undefined","promise","Promise","resolve","forEach","interceptor","unshift","fulfilled","rejected","push","length","then","shift","getUri","params","paramsSerializer","replace","data","module","exports","callback","arr","apply","fn","thisArg","args","Array","i","normalizeHeaderName","DEFAULT_CONTENT_TYPE","setContentTypeIfUnset","headers","value","isUndefined","getDefaultAdapter","adapter","XMLHttpRequest","process","Object","toString","call","transformRequest","isFormData","isArrayBuffer","isBuffer","isStream","isFile","isBlob","isArrayBufferView","buffer","isURLSearchParams","isObject","JSON","stringify","transformResponse","parse","e","timeout","xsrfCookieName","xsrfHeaderName","maxContentLength","maxBodyLength","validateStatus","status","common","merge","enhanceError","message","code","error","Error","__CANCEL__","encode","val","encodeURIComponent","serializedParams","parts","key","isArray","v","isDate","toISOString","join","hashmarkIndex","indexOf","slice","isAxiosError","toJSON","name","description","number","fileName","lineNumber","columnNumber","stack","isStandardBrowserEnv","originURL","msie","test","navigator","userAgent","urlParsingNode","document","createElement","resolveURL","href","setAttribute","protocol","host","search","hash","hostname","port","pathname","charAt","window","location","requestURL","parsed","isString","setupDevtoolsPlugin","pluginDescriptor","setupFn","hook","emit","target","list","__VUE_DEVTOOLS_PLUGINS__","nextTick","setTimeout","platform","arch","execPath","title","pid","browser","env","argv","binding","path","cwd","chdir","dir","exit","kill","umask","dlopen","uptime","memoryUsage","uvCounters","features","createError","reject","config1","config2","valueFromConfig2Keys","mergeDeepPropertiesKeys","defaultToConfig2Keys","directMergeKeys","getMergedValue","source","isPlainObject","mergeDeepProperties","prop","axiosKeys","concat","otherKeys","keys","filter","transformData","isCancel","throwIfCancellationRequested","cancelToken","throwIfRequested","reason","payload","hasSymbol","Symbol","toStringTag","PolySymbol","matchedRouteKey","viewDepthKey","routerKey","routeLocationKey","routerViewLocationKey","isBrowser","isESModule","obj","__esModule","assign","applyToParams","newParams","map","noop","TRAILING_SLASH_RE","removeTrailingSlash","parseURL","parseQuery","currentLocation","query","searchString","searchPos","hashPos","resolveRelativePath","fullPath","stringifyURL","stringifyQuery","stripBase","base","startsWith","isSameRouteLocation","a","b","aLastIndex","matched","bLastIndex","isSameRouteRecord","isSameRouteLocationParams","aliasOf","isSameRouteLocationParamsValue","isEquivalentArray","every","to","from","fromSegments","split","toSegments","toPosition","segment","position","NavigationType","NavigationDirection","normalizeBase","baseEl","querySelector","getAttribute","BEFORE_HASH_RE","createHref","getElementPosition","el","offset","docRect","documentElement","getBoundingClientRect","elRect","behavior","left","top","computeScrollPosition","pageXOffset","pageYOffset","scrollToPosition","scrollToOptions","positionEl","isIdSelector","getElementById","style","scrollTo","getScrollKey","delta","history","state","scrollPositions","Map","saveScrollPosition","scrollPosition","set","getSavedScrollPosition","scroll","get","delete","createBaseLocation","createCurrentLocation","slicePos","includes","pathFromHash","useHistoryListeners","historyState","listeners","teardowns","pauseState","popStateHandler","fromState","listener","type","pop","direction","forward","back","unknown","pauseListeners","listen","teardown","index","splice","beforeUnloadListener","replaceState","destroy","removeEventListener","addEventListener","buildState","current","replaced","computeScroll","useHistoryStateNavigation","changeLocation","hashIndex","err","console","currentState","createWebHistory","historyNavigation","historyListeners","go","triggerListeners","routerHistory","bind","defineProperty","enumerable","isRouteLocation","route","isRouteName","START_LOCATION_NORMALIZED","meta","redirectedFrom","NavigationFailureSymbol","NavigationFailureType","createRouterError","isNavigationFailure","BASE_PARAM_PATTERN","BASE_PATH_PARSER_OPTIONS","sensitive","strict","start","end","REGEX_CHARS_RE","tokensToParser","segments","extraOptions","options","score","pattern","segmentScores","tokenIndex","token","subSegmentScore","repeatable","optional","regexp","re","RegExp","subPattern","match","avoidDuplicatedSlash","endsWith","param","text","compareScoreArray","diff","comparePathParserScore","aScore","bScore","comp","ROOT_TOKEN","VALID_PARAM_RE","tokenizePath","crash","previousState","tokens","finalizeSegment","char","customRe","consumeBuffer","addCharToBuffer","createRouteRecordMatcher","record","parent","parser","matcher","children","alias","createRouterMatcher","routes","globalOptions","matchers","matcherMap","getRecordMatcher","addRoute","originalRecord","isRootAdd","mainNormalizedRecord","normalizeRouteRecord","mergeOptions","normalizedRecords","aliases","components","originalMatcher","normalizedRecord","parentPath","connectingSlash","isAliasRecord","removeRoute","insertMatcher","matcherRef","getRoutes","paramsFromLocation","k","find","m","parentMatcher","mergeMetaFields","redirect","beforeEnter","props","normalizeRecordProps","instances","leaveGuards","Set","updateGuards","enterCallbacks","default","component","propsObject","reduce","partialOptions","HASH_RE","AMPERSAND_RE","SLASH_RE","EQUAL_RE","IM_RE","PLUS_RE","ENC_BRACKET_OPEN_RE","ENC_BRACKET_CLOSE_RE","ENC_CARET_RE","ENC_BACKTICK_RE","ENC_CURLY_OPEN_RE","ENC_PIPE_RE","ENC_CURLY_CLOSE_RE","ENC_SPACE_RE","commonEncode","encodeURI","encodeHash","encodeQueryValue","encodeQueryKey","encodePath","encodeParam","decode","decodeURIComponent","hasLeadingIM","searchParams","searchParam","eqPos","currentValue","values","normalizeQuery","normalizedQuery","useCallbacks","handlers","add","handler","reset","guardToPromiseFn","guard","enterCallbackArray","next","valid","guardReturn","guardCall","catch","extractComponentsGuards","guardType","guards","rawComponent","isRouteComponent","__vccOpts","componentPromise","resolved","resolvedComponent","useLink","router","currentRoute","activeRecordIndex","routeMatched","currentMatched","findIndex","parentRecordPath","getOriginalPath","isActive","includesParams","isExactActive","navigate","guardEvent","RouterLinkImpl","String","required","Boolean","activeClass","exactActiveClass","custom","ariaCurrentValue","slots","link","elClass","getLinkClass","linkActiveClass","linkExactActiveClass","onClick","class","RouterLink","metaKey","altKey","ctrlKey","shiftKey","defaultPrevented","button","currentTarget","preventDefault","outer","inner","innerValue","outerValue","some","propClass","globalClass","defaultClass","RouterViewImpl","inheritAttrs","attrs","injectedRoute","routeToDisplay","depth","matchedRouteRef","viewRef","instance","oldInstance","oldName","size","flush","matchedRoute","ViewComponent","currentName","normalizeSlot","Component","routePropsOption","routeProps","onVnodeUnmounted","vnode","isUnmounted","ref","slot","slotContent","RouterView","createRouter","parseQuery$1","stringifyQuery$1","beforeGuards","beforeResolveGuards","afterGuards","pendingLocation","scrollBehavior","scrollRestoration","normalizeParams","paramValue","encodeParams","decodeParams","parentOrRoute","recordMatcher","routeMatcher","hasRoute","rawLocation","locationNormalized","matcherLocation","locationAsObject","checkCanceledNavigation","pushWithRedirect","handleRedirectRecord","lastMatched","newTargetLocation","targetLocation","force","shouldRedirect","toLocation","failure","handleScroll","triggerError","finalizeNavigation","triggerAfterEach","checkCanceledNavigationAndReject","leavingRecords","updatingRecords","enteringRecords","extractChangingRecords","reverse","canceledNavigationCheck","runGuardQueue","isPush","isFirstNavigation","markAsReady","removeHistoryListener","setupListeners","_from","info","ready","readyHandlers","errorHandlers","isReady","started","installedApps","beforeEach","beforeResolve","afterEach","onError","app","globalProperties","$router","reactiveRoute","provide","unmountApp","unmount","len","Math","max","recordFrom","recordTo","targetMap","WeakMap","effectStack","activeEffect","ITERATE_KEY","MAP_KEY_ITERATE_KEY","isEffect","_isEffect","raw","effect","createReactiveEffect","lazy","stop","active","onStop","uid","enableTracking","resetTracking","id","allowRecurse","deps","shouldTrack","trackStack","pauseTracking","last","track","depsMap","dep","has","trigger","newValue","oldValue","oldTarget","effects","effectsToAdd","run","scheduler","isNonTrackableKeys","builtInSymbols","getOwnPropertyNames","createGetter","shallowGet","readonlyGet","arrayInstrumentations","createArrayInstrumentations","instrumentations","toRaw","l","res","isReadonly","shallow","receiver","shallowReadonlyMap","readonlyMap","shallowReactiveMap","reactiveMap","targetIsArray","Reflect","isRef","shouldUnwrap","readonly","reactive","createSetter","shallowSet","hadKey","Number","result","deleteProperty","ownKeys","mutableHandlers","readonlyHandlers","shallowReactiveHandlers","toReactive","toReadonly","toShallow","getProto","getPrototypeOf","get$1","isShallow","rawTarget","rawKey","wrap","has$1","proto","set$1","deleteEntry","clear","hadItems","createForEach","observed","createIterableMethod","targetIsMap","isPair","iterator","isKeyOnly","innerIterator","done","createReadonlyMethod","createInstrumentations","mutableInstrumentations","shallowInstrumentations","readonlyInstrumentations","shallowReadonlyInstrumentations","iteratorMethods","createInstrumentationGetter","mutableCollectionHandlers","shallowCollectionHandlers","readonlyCollectionHandlers","targetTypeMap","rawType","getTargetType","isExtensible","createReactiveObject","shallowReactive","baseHandlers","collectionHandlers","proxyMap","existingProxy","targetType","proxy","Proxy","isReactive","isProxy","markRaw","convert","r","__v_isRef","createRef","shallowRef","_rawValue","_shallow","_value","newVal","rawValue","unref","shallowUnwrapHandlers","proxyRefs","objectWithRefs","ComputedRefImpl","getter","_setter","_dirty","self","getterOrOptions","setter","callWithErrorHandling","handleError","callWithAsyncErrorHandling","throwInDev","contextVNode","cur","exposedInstance","errorInfo","errorCapturedHooks","ec","appErrorHandler","appContext","errorHandler","logError","isFlushing","isFlushPending","queue","flushIndex","pendingPreFlushCbs","activePreFlushCbs","preFlushIndex","pendingPostFlushCbs","activePostFlushCbs","postFlushIndex","resolvedPromise","currentFlushPromise","currentPreFlushParentJob","p","findInsertionIndex","job","jobId","getId","middle","middleJobId","queueJob","pos","queueFlush","flushJobs","invalidateJob","queueCb","cb","activeQueue","pendingQueue","queuePreFlushCb","queuePostFlushCb","flushPreFlushCbs","seen","parentJob","flushPostFlushCbs","deduped","sort","Infinity","create","event","rawArgs","isModelListener","modelArg","modifiersKey","trim","handlerName","onceHandler","emitted","normalizeEmitsOptions","asMixin","cache","emitsCache","cached","emits","normalized","hasExtends","extendEmits","normalizedFromExtend","mixins","extends","isEmitListener","currentRenderingInstance","currentScopeId","setCurrentRenderingInstance","prev","__scopeId","pushScopeId","popScopeId","withScopeId","_id","withCtx","ctx","isNonScopedSlot","_n","renderFnWithContext","_d","setBlockTracking","prevInstance","_c","renderComponentRoot","withProxy","propsOptions","render","renderCache","setupState","fallthroughAttrs","shapeFlag","proxyToUse","normalizeVNode","getFunctionalFallthrough","root","filterModelListeners","cloneVNode","dirs","transition","blockStack","createVNode","Comment$1","shouldUpdateComponent","prevVNode","nextVNode","optimized","prevProps","prevChildren","nextProps","nextChildren","patchFlag","emitsOptions","$stable","hasPropsChanged","dynamicProps","nextKeys","updateHOCHostEl","subTree","isSuspense","__isSuspense","queueEffectWithSuspense","suspense","pendingBranch","currentInstance","provides","parentProvides","inject","defaultValue","treatDefaultAsFactory","INITIAL_WATCHER_VALUE","watch","doWatch","immediate","deep","onTrack","onTrigger","cleanup","forceTrigger","isMultiSource","s","traverse","onInvalidate","baseGetter","runner","queuePostRenderEffect","isMounted","recordInstanceBoundEffect","instanceWatch","publicThis","createPathGetter","useTransitionState","isLeaving","isUnmounting","leavingVNodes","onMounted","onBeforeUnmount","TransitionHookValidator","Function","BaseTransitionImpl","mode","appear","persisted","onBeforeEnter","onEnter","onAfterEnter","onEnterCancelled","onBeforeLeave","onLeave","onAfterLeave","onLeaveCancelled","onBeforeAppear","onAppear","onAfterAppear","onAppearCancelled","getCurrentInstance","prevTransitionKey","getTransitionRawChildren","rawProps","child","emptyPlaceholder","innerChild","getKeepAliveChild","enterHooks","resolveTransitionHooks","setTransitionHooks","oldChild","oldInnerChild","transitionKeyChanged","getTransitionKey","isSameVNodeType","leavingHooks","afterLeave","update","delayLeave","earlyRemove","delayedLeave","leavingVNodesCache","getLeavingNodesForType","_leaveCb","BaseTransition","callHook","hooks","leavingVNode","afterHook","cancelHook","called","_enterCb","cancelled","remove","isKeepAlive","ssContent","clone","ssFallback","keepComment","ret","keyedFragmentCount","Fragment","defineComponent","setup","isAsyncWrapper","__asyncLoader","__isKeepAlive","matches","onActivated","registerKeepAliveHook","onDeactivated","wrappedHook","__wdc","isDeactivated","injectHook","injectToKeepAliveRoot","keepAliveRoot","injected","onUnmounted","resetShapeFlag","getInnerChild","prepend","__weh","setCurrentInstance","createHook","lifecycle","isInSSRComponentSetup","onBeforeMount","onBeforeUpdate","onUpdated","onServerPrefetch","onRenderTriggered","onRenderTracked","onErrorCaptured","shouldCacheAccess","applyOptions","resolveMergedOptions","beforeCreate","dataOptions","computed","computedOptions","methods","watchOptions","provideOptions","injectOptions","created","beforeMount","mounted","beforeUpdate","updated","activated","deactivated","beforeDestroy","beforeUnmount","destroyed","unmounted","renderTracked","renderTriggered","errorCaptured","serverPrefetch","expose","directives","filters","checkDuplicateProperties","resolveInjections","methodHandler","opt","c","configurable","createWatcher","registerLifecycleHook","register","_hook","exposed","normalizeInject","h","extendsOptions","globalMixins","optionsCache","optionMergeStrategies","strats","strat","internalOptionMergeStrats","mergeDataFn","mergeObjectOptions","mergeAsArray","mergeWatchOptions","mergeInject","merged","initProps","isStateful","isSSR","InternalObjectKey","propsDefaults","setFullProps","updateProps","rawPrevProps","rawCurrentProps","hasAttrsChanged","kebabKey","resolvePropValue","propsToUpdate","camelizedKey","needCastKeys","rawCastValues","camelKey","castValues","isAbsent","hasDefault","normalizePropsOptions","propsCache","extendProps","normalizedKey","validatePropName","booleanIndex","getTypeIndex","stringIndex","getType","ctor","isSameType","expectedTypes","t","isInternalKey","normalizeSlotValue","rawSlot","normalizeObjectSlots","rawSlots","_ctx","normalizeVNodeSlots","initSlots","_","updateSlots","needDeletionCheck","deletionComparisonTarget","invokeDirectiveHook","bindings","oldBindings","createAppContext","isNativeTag","performance","warnHandler","compilerOptions","createAppAPI","hydrate","rootComponent","rootProps","context","installedPlugins","_uid","_component","_props","_container","_context","_instance","version","plugin","install","mixin","directive","rootContainer","isHydrate","isSVG","__vue_app__","initFeatureFlags","prodEffectOptions","setRef","rawRef","oldRawRef","parentSuspense","isUnmount","refValue","getExposeProxy","owner","oldRef","refs","doSet","createRenderer","baseCreateRenderer","createHydrationFns","insert","hostInsert","hostRemove","patchProp","hostPatchProp","forcePatchProp","hostForcePatchProp","hostCreateElement","createText","hostCreateText","createComment","hostCreateComment","setText","hostSetText","setElementText","hostSetElementText","parentNode","hostParentNode","nextSibling","hostNextSibling","setScopeId","hostSetScopeId","cloneNode","hostCloneNode","insertStaticContent","hostInsertStaticContent","patch","n1","n2","container","anchor","parentComponent","slotScopeIds","getNextHostNode","dynamicChildren","Text","processText","processCommentNode","Static","mountStaticNode","processFragment","processElement","processComponent","internals","nodes","staticCache","moveStaticNode","removeStaticNode","mountElement","patchElement","vnodeHook","is","mountChildren","unmountChildren","onVnodeBeforeMount","invokeVNodeHook","scopeId","needCallTransitionHooks","onVnodeMounted","enter","parentVNode","cloneIfMounted","oldProps","newProps","onVnodeBeforeUpdate","patchProps","areChildrenSVG","patchBlockChildren","patchChildren","onVnodeUpdated","oldChildren","newChildren","fallbackContainer","oldVNode","newVNode","fragmentStartAnchor","fragmentEndAnchor","fragmentSlotScopeIds","traverseStaticChildren","activate","mountComponent","updateComponent","initialVNode","createComponentInstance","renderer","setupComponent","asyncDep","registerDep","setupRenderEffect","placeholder","asyncResolved","updateComponentPreRender","bu","u","originNext","nextTree","prevTree","bm","hydrateNode","hydrateSubTree","scopedInitialVNode","c1","prevShapeFlag","c2","patchKeyedChildren","patchUnkeyedChildren","oldLength","newLength","commonLength","min","nextChild","parentAnchor","l2","e1","e2","nextPos","s1","s2","keyToNewIndexMap","j","patched","toBePatched","moved","maxNewIndexSoFar","newIndexToOldIndexMap","prevChild","newIndex","increasingNewIndexSequence","getSequence","nextIndex","move","moveType","needTransition","leave","performLeave","doRemove","deactivate","shouldInvokeDirs","onVnodeBeforeUnmount","unmountComponent","removeFragment","performRemove","bum","um","suspenseId","pendingId","_vnode","mt","mc","pc","pbc","n","o","createApp","ch1","ch2","arrI","isTeleport","__isTeleport","COMPONENTS","resolveComponent","maybeSelfReference","resolveAsset","NULL_DYNAMIC_COMPONENT","warnMissing","selfName","getComponentName","registry","currentBlock","openBlock","disableTracking","closeBlock","isBlockTreeEnabled","createBlock","isVNode","__v_isVNode","normalizeKey","normalizeRef","_createVNode","isBlockNode","cloned","normalizeChildren","isClassComponent","klass","__v_skip","targetAnchor","normalize","extraProps","mergeRef","mergedProps","mergeProps","staticCount","createTextVNode","flag","slotFlag","toMerge","existing","incoming","getPublicInstance","isStatefulComponent","publicPropertiesMap","$","$el","$data","$props","$attrs","$slots","$refs","$parent","$root","$emit","$options","$forceUpdate","$nextTick","$watch","PublicInstanceProxyHandlers","accessCache","normalizedProps","publicGetter","cssModule","__cssModules","RuntimeCompiledPublicInstanceProxyHandlers","unscopables","emptyAppContext","uid$1","exposeProxy","setupContext","bc","da","rtg","rtc","sp","compile","setupResult","setupStatefulComponent","createSetupContext","unsetInstance","resolvedResult","handleSetupResult","finishComponentSetup","skipOptions","template","isCustomElement","delimiters","componentCompilerOptions","finalCompilerOptions","_rc","displayName","propsOrChildren","svgNS","doc","nodeOps","insertBefore","removeChild","tag","createElementNS","multiple","createTextNode","node","nodeValue","textContent","selector","content","first","before","previousSibling","lastChild","insertionPoint","usingTempInsertionPoint","Element","insertAdjacentHTML","firstChild","patchClass","transitionClasses","_vtc","className","patchStyle","display","cssText","setStyle","removeAttribute","importantRE","setProperty","prefixed","autoPrefix","prefixes","prefixCache","rawName","xlinkNS","patchAttr","removeAttributeNS","setAttributeNS","isBoolean","patchDOMProp","tagName","_getNow","Date","now","skipTimestampCheck","createEvent","timeStamp","ffMatch","cachedNow","getNow","patchEvent","prevValue","nextValue","invokers","_vei","existingInvoker","parseName","invoker","createInvoker","optionsModifierRE","initialValue","attached","patchStopImmediatePropagation","originalStop","stopImmediatePropagation","_stopped","nativeOnRE","shouldSetAsProp","_trueValue","_falseValue","TRANSITION","ANIMATION","Transition","resolveTransitionProps","DOMTransitionPropsValidators","css","duration","enterFromClass","enterActiveClass","enterToClass","appearFromClass","appearActiveClass","appearToClass","leaveFromClass","leaveActiveClass","leaveToClass","hasExplicitCallback","baseProps","durations","normalizeDuration","enterDuration","leaveDuration","finishEnter","isAppear","removeTransitionClass","finishLeave","makeEnterHook","nextFrame","addTransitionClass","whenTransitionEnds","forceReflow","NumberOf","cls","classList","requestAnimationFrame","endId","expectedType","explicitTimeout","_endId","resolveIfNotStale","propCount","getTransitionInfo","endEvent","ended","onEnd","styles","getComputedStyle","getStyleProperties","transitionDelays","transitionDurations","transitionTimeout","getTimeout","animationDelays","animationDurations","animationTimeout","hasTransform","delays","d","toMs","body","offsetHeight","rendererOptions","ensureRenderer","mount","containerOrSelector","normalizeContainer","innerHTML","SVGElement","Cancel","write","expires","domain","secure","cookie","isNumber","toGMTString","read","isAbsoluteURL","combineURLs","baseURL","requestedURL","CancelToken","executor","TypeError","resolvePromise","cancel","makeMap","str","expectsLowerCase","GLOBALS_WHITE_LISTED","isGloballyWhitelisted","specialBooleanAttrs","isSpecialBooleanAttr","normalizeStyle","item","parseStringStyle","listDelimiterRE","propertyDelimiterRE","tmp","normalizeClass","HTML_TAGS","SVG_TAGS","isHTMLTag","isSVGTag","looseCompareArrays","equal","looseEqual","aValidType","bValidType","getTime","aKeysCount","bKeysCount","aHasKey","hasOwnProperty","bHasKey","looseIndexOf","toDisplayString","replacer","_key","isMap","entries","isSet","EMPTY_OBJ","EMPTY_ARR","NOOP","NO","onRE","isOn","extend","hasOwn","toTypeString","isFunction","isSymbol","isPromise","objectToString","toRawType","isIntegerKey","parseInt","isReservedProp","cacheStringFunction","hit","camelizeRE","camelize","toUpperCase","hyphenateRE","hyphenate","capitalize","toHandlerKey","hasChanged","invokeArrayFns","fns","arg","def","toNumber","parseFloat","isNaN","getDevtoolsGlobalHook","getTarget","__VUE_DEVTOOLS_GLOBAL_HOOK__","global","settle","cookies","buildFullPath","parseHeaders","isURLSameOrigin","requestData","requestHeaders","auth","username","password","unescape","Authorization","btoa","open","onreadystatechange","readyState","responseURL","responseHeaders","getAllResponseHeaders","responseData","responseType","responseText","statusText","onabort","onerror","ontimeout","timeoutErrorMessage","xsrfValue","withCredentials","setRequestHeader","onDownloadProgress","onUploadProgress","upload","abort","send","HOOK_SETUP","ignoreDuplicateOf","line","substr","constructor","FormData","ArrayBuffer","isView","pipe","URLSearchParams","product","assignValue","stripBOM","charCodeAt","normalizedName","g","createInstance","defaultConfig","axios","all","promises","spread","normalizeArray","allowAboveRoot","up","basename","matchedSlash","xs","f","resolvedPath","resolvedAbsolute","isAbsolute","trailingSlash","paths","relative","fromParts","toParts","samePartsLength","outputParts","sep","delimiter","dirname","hasRoot","ext","extname","startDot","startPart","preDotState","relativeURL","use","eject"],"mappings":"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","file":"js/chunk-vendors.9bfacca4.js","sourcesContent":["'use strict';\n\nvar utils = require('./../utils');\nvar buildURL = require('../helpers/buildURL');\nvar InterceptorManager = require('./InterceptorManager');\nvar dispatchRequest = require('./dispatchRequest');\nvar mergeConfig = require('./mergeConfig');\n\n/**\n * Create a new instance of Axios\n *\n * @param {Object} instanceConfig The default config for the instance\n */\nfunction Axios(instanceConfig) {\n  this.defaults = instanceConfig;\n  this.interceptors = {\n    request: new InterceptorManager(),\n    response: new InterceptorManager()\n  };\n}\n\n/**\n * Dispatch a request\n *\n * @param {Object} config The config specific for this request (merged with this.defaults)\n */\nAxios.prototype.request = function request(config) {\n  /*eslint no-param-reassign:0*/\n  // Allow for axios('example/url'[, config]) a la fetch API\n  if (typeof config === 'string') {\n    config = arguments[1] || {};\n    config.url = arguments[0];\n  } else {\n    config = config || {};\n  }\n\n  config = mergeConfig(this.defaults, config);\n\n  // Set config.method\n  if (config.method) {\n    config.method = config.method.toLowerCase();\n  } else if (this.defaults.method) {\n    config.method = this.defaults.method.toLowerCase();\n  } else {\n    config.method = 'get';\n  }\n\n  // Hook up interceptors middleware\n  var chain = [dispatchRequest, undefined];\n  var promise = Promise.resolve(config);\n\n  this.interceptors.request.forEach(function unshiftRequestInterceptors(interceptor) {\n    chain.unshift(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  this.interceptors.response.forEach(function pushResponseInterceptors(interceptor) {\n    chain.push(interceptor.fulfilled, interceptor.rejected);\n  });\n\n  while (chain.length) {\n    promise = promise.then(chain.shift(), chain.shift());\n  }\n\n  return promise;\n};\n\nAxios.prototype.getUri = function getUri(config) {\n  config = mergeConfig(this.defaults, config);\n  return buildURL(config.url, config.params, config.paramsSerializer).replace(/^\\?/, '');\n};\n\n// Provide aliases for supported request methods\nutils.forEach(['delete', 'get', 'head', 'options'], function forEachMethodNoData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: (config || {}).data\n    }));\n  };\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  /*eslint func-names:0*/\n  Axios.prototype[method] = function(url, data, config) {\n    return this.request(mergeConfig(config || {}, {\n      method: method,\n      url: url,\n      data: data\n    }));\n  };\n});\n\nmodule.exports = Axios;\n","'use strict';\n\n/**\n * Syntactic sugar for invoking a function and expanding an array for arguments.\n *\n * Common use case would be to use `Function.prototype.apply`.\n *\n *  ```js\n *  function f(x, y, z) {}\n *  var args = [1, 2, 3];\n *  f.apply(null, args);\n *  ```\n *\n * With `spread` this example can be re-written.\n *\n *  ```js\n *  spread(function(x, y, z) {})([1, 2, 3]);\n *  ```\n *\n * @param {Function} callback\n * @returns {Function}\n */\nmodule.exports = function spread(callback) {\n  return function wrap(arr) {\n    return callback.apply(null, arr);\n  };\n};\n","'use strict';\n\nmodule.exports = function bind(fn, thisArg) {\n  return function wrap() {\n    var args = new Array(arguments.length);\n    for (var i = 0; i < args.length; i++) {\n      args[i] = arguments[i];\n    }\n    return fn.apply(thisArg, args);\n  };\n};\n","'use strict';\n\nvar utils = require('./utils');\nvar normalizeHeaderName = require('./helpers/normalizeHeaderName');\n\nvar DEFAULT_CONTENT_TYPE = {\n  'Content-Type': 'application/x-www-form-urlencoded'\n};\n\nfunction setContentTypeIfUnset(headers, value) {\n  if (!utils.isUndefined(headers) && utils.isUndefined(headers['Content-Type'])) {\n    headers['Content-Type'] = value;\n  }\n}\n\nfunction getDefaultAdapter() {\n  var adapter;\n  if (typeof XMLHttpRequest !== 'undefined') {\n    // For browsers use XHR adapter\n    adapter = require('./adapters/xhr');\n  } else if (typeof process !== 'undefined' && Object.prototype.toString.call(process) === '[object process]') {\n    // For node use HTTP adapter\n    adapter = require('./adapters/http');\n  }\n  return adapter;\n}\n\nvar defaults = {\n  adapter: getDefaultAdapter(),\n\n  transformRequest: [function transformRequest(data, headers) {\n    normalizeHeaderName(headers, 'Accept');\n    normalizeHeaderName(headers, 'Content-Type');\n    if (utils.isFormData(data) ||\n      utils.isArrayBuffer(data) ||\n      utils.isBuffer(data) ||\n      utils.isStream(data) ||\n      utils.isFile(data) ||\n      utils.isBlob(data)\n    ) {\n      return data;\n    }\n    if (utils.isArrayBufferView(data)) {\n      return data.buffer;\n    }\n    if (utils.isURLSearchParams(data)) {\n      setContentTypeIfUnset(headers, 'application/x-www-form-urlencoded;charset=utf-8');\n      return data.toString();\n    }\n    if (utils.isObject(data)) {\n      setContentTypeIfUnset(headers, 'application/json;charset=utf-8');\n      return JSON.stringify(data);\n    }\n    return data;\n  }],\n\n  transformResponse: [function transformResponse(data) {\n    /*eslint no-param-reassign:0*/\n    if (typeof data === 'string') {\n      try {\n        data = JSON.parse(data);\n      } catch (e) { /* Ignore */ }\n    }\n    return data;\n  }],\n\n  /**\n   * A timeout in milliseconds to abort a request. If set to 0 (default) a\n   * timeout is not created.\n   */\n  timeout: 0,\n\n  xsrfCookieName: 'XSRF-TOKEN',\n  xsrfHeaderName: 'X-XSRF-TOKEN',\n\n  maxContentLength: -1,\n  maxBodyLength: -1,\n\n  validateStatus: function validateStatus(status) {\n    return status >= 200 && status < 300;\n  }\n};\n\ndefaults.headers = {\n  common: {\n    'Accept': 'application/json, text/plain, */*'\n  }\n};\n\nutils.forEach(['delete', 'get', 'head'], function forEachMethodNoData(method) {\n  defaults.headers[method] = {};\n});\n\nutils.forEach(['post', 'put', 'patch'], function forEachMethodWithData(method) {\n  defaults.headers[method] = utils.merge(DEFAULT_CONTENT_TYPE);\n});\n\nmodule.exports = defaults;\n","'use strict';\n\nvar enhanceError = require('./enhanceError');\n\n/**\n * Create an Error with the specified message, config, error code, request and response.\n *\n * @param {string} message The error message.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The created error.\n */\nmodule.exports = function createError(message, config, code, request, response) {\n  var error = new Error(message);\n  return enhanceError(error, config, code, request, response);\n};\n","'use strict';\n\nmodule.exports = function isCancel(value) {\n  return !!(value && value.__CANCEL__);\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction encode(val) {\n  return encodeURIComponent(val).\n    replace(/%3A/gi, ':').\n    replace(/%24/g, '$').\n    replace(/%2C/gi, ',').\n    replace(/%20/g, '+').\n    replace(/%5B/gi, '[').\n    replace(/%5D/gi, ']');\n}\n\n/**\n * Build a URL by appending params to the end\n *\n * @param {string} url The base of the url (e.g., http://www.google.com)\n * @param {object} [params] The params to be appended\n * @returns {string} The formatted url\n */\nmodule.exports = function buildURL(url, params, paramsSerializer) {\n  /*eslint no-param-reassign:0*/\n  if (!params) {\n    return url;\n  }\n\n  var serializedParams;\n  if (paramsSerializer) {\n    serializedParams = paramsSerializer(params);\n  } else if (utils.isURLSearchParams(params)) {\n    serializedParams = params.toString();\n  } else {\n    var parts = [];\n\n    utils.forEach(params, function serialize(val, key) {\n      if (val === null || typeof val === 'undefined') {\n        return;\n      }\n\n      if (utils.isArray(val)) {\n        key = key + '[]';\n      } else {\n        val = [val];\n      }\n\n      utils.forEach(val, function parseValue(v) {\n        if (utils.isDate(v)) {\n          v = v.toISOString();\n        } else if (utils.isObject(v)) {\n          v = JSON.stringify(v);\n        }\n        parts.push(encode(key) + '=' + encode(v));\n      });\n    });\n\n    serializedParams = parts.join('&');\n  }\n\n  if (serializedParams) {\n    var hashmarkIndex = url.indexOf('#');\n    if (hashmarkIndex !== -1) {\n      url = url.slice(0, hashmarkIndex);\n    }\n\n    url += (url.indexOf('?') === -1 ? '?' : '&') + serializedParams;\n  }\n\n  return url;\n};\n","'use strict';\n\n/**\n * Update an Error with the specified config, error code, and response.\n *\n * @param {Error} error The error to update.\n * @param {Object} config The config.\n * @param {string} [code] The error code (for example, 'ECONNABORTED').\n * @param {Object} [request] The request.\n * @param {Object} [response] The response.\n * @returns {Error} The error.\n */\nmodule.exports = function enhanceError(error, config, code, request, response) {\n  error.config = config;\n  if (code) {\n    error.code = code;\n  }\n\n  error.request = request;\n  error.response = response;\n  error.isAxiosError = true;\n\n  error.toJSON = function toJSON() {\n    return {\n      // Standard\n      message: this.message,\n      name: this.name,\n      // Microsoft\n      description: this.description,\n      number: this.number,\n      // Mozilla\n      fileName: this.fileName,\n      lineNumber: this.lineNumber,\n      columnNumber: this.columnNumber,\n      stack: this.stack,\n      // Axios\n      config: this.config,\n      code: this.code\n    };\n  };\n  return error;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs have full support of the APIs needed to test\n  // whether the request URL is of the same origin as current location.\n    (function standardBrowserEnv() {\n      var msie = /(msie|trident)/i.test(navigator.userAgent);\n      var urlParsingNode = document.createElement('a');\n      var originURL;\n\n      /**\n    * Parse a URL to discover it's components\n    *\n    * @param {String} url The URL to be parsed\n    * @returns {Object}\n    */\n      function resolveURL(url) {\n        var href = url;\n\n        if (msie) {\n        // IE needs attribute set twice to normalize properties\n          urlParsingNode.setAttribute('href', href);\n          href = urlParsingNode.href;\n        }\n\n        urlParsingNode.setAttribute('href', href);\n\n        // urlParsingNode provides the UrlUtils interface - http://url.spec.whatwg.org/#urlutils\n        return {\n          href: urlParsingNode.href,\n          protocol: urlParsingNode.protocol ? urlParsingNode.protocol.replace(/:$/, '') : '',\n          host: urlParsingNode.host,\n          search: urlParsingNode.search ? urlParsingNode.search.replace(/^\\?/, '') : '',\n          hash: urlParsingNode.hash ? urlParsingNode.hash.replace(/^#/, '') : '',\n          hostname: urlParsingNode.hostname,\n          port: urlParsingNode.port,\n          pathname: (urlParsingNode.pathname.charAt(0) === '/') ?\n            urlParsingNode.pathname :\n            '/' + urlParsingNode.pathname\n        };\n      }\n\n      originURL = resolveURL(window.location.href);\n\n      /**\n    * Determine if a URL shares the same origin as the current location\n    *\n    * @param {String} requestURL The URL to test\n    * @returns {boolean} True if URL shares the same origin, otherwise false\n    */\n      return function isURLSameOrigin(requestURL) {\n        var parsed = (utils.isString(requestURL)) ? resolveURL(requestURL) : requestURL;\n        return (parsed.protocol === originURL.protocol &&\n            parsed.host === originURL.host);\n      };\n    })() :\n\n  // Non standard browser envs (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return function isURLSameOrigin() {\n        return true;\n      };\n    })()\n);\n","import { getTarget, getDevtoolsGlobalHook } from './env';\nimport { HOOK_SETUP } from './const';\nexport * from './api';\nexport function setupDevtoolsPlugin(pluginDescriptor, setupFn) {\n    const hook = getDevtoolsGlobalHook();\n    if (hook) {\n        hook.emit(HOOK_SETUP, pluginDescriptor, setupFn);\n    }\n    else {\n        const target = getTarget();\n        const list = target.__VUE_DEVTOOLS_PLUGINS__ = target.__VUE_DEVTOOLS_PLUGINS__ || [];\n        list.push({\n            pluginDescriptor,\n            setupFn\n        });\n    }\n}\n","exports.nextTick = function nextTick(fn) {\n    var args = Array.prototype.slice.call(arguments);\n    args.shift();\n    setTimeout(function () {\n        fn.apply(null, args);\n    }, 0);\n};\n\nexports.platform = exports.arch = \nexports.execPath = exports.title = 'browser';\nexports.pid = 1;\nexports.browser = true;\nexports.env = {};\nexports.argv = [];\n\nexports.binding = function (name) {\n\tthrow new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    exports.cwd = function () { return cwd };\n    exports.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\nexports.exit = exports.kill = \nexports.umask = exports.dlopen = \nexports.uptime = exports.memoryUsage = \nexports.uvCounters = function() {};\nexports.features = {};\n","'use strict';\n\nvar createError = require('./createError');\n\n/**\n * Resolve or reject a Promise based on response status.\n *\n * @param {Function} resolve A function that resolves the promise.\n * @param {Function} reject A function that rejects the promise.\n * @param {object} response The response.\n */\nmodule.exports = function settle(resolve, reject, response) {\n  var validateStatus = response.config.validateStatus;\n  if (!response.status || !validateStatus || validateStatus(response.status)) {\n    resolve(response);\n  } else {\n    reject(createError(\n      'Request failed with status code ' + response.status,\n      response.config,\n      null,\n      response.request,\n      response\n    ));\n  }\n};\n","'use strict';\n\nvar utils = require('../utils');\n\n/**\n * Config-specific merge-function which creates a new config-object\n * by merging two configuration objects together.\n *\n * @param {Object} config1\n * @param {Object} config2\n * @returns {Object} New object resulting from merging config2 to config1\n */\nmodule.exports = function mergeConfig(config1, config2) {\n  // eslint-disable-next-line no-param-reassign\n  config2 = config2 || {};\n  var config = {};\n\n  var valueFromConfig2Keys = ['url', 'method', 'data'];\n  var mergeDeepPropertiesKeys = ['headers', 'auth', 'proxy', 'params'];\n  var defaultToConfig2Keys = [\n    'baseURL', 'transformRequest', 'transformResponse', 'paramsSerializer',\n    'timeout', 'timeoutMessage', 'withCredentials', 'adapter', 'responseType', 'xsrfCookieName',\n    'xsrfHeaderName', 'onUploadProgress', 'onDownloadProgress', 'decompress',\n    'maxContentLength', 'maxBodyLength', 'maxRedirects', 'transport', 'httpAgent',\n    'httpsAgent', 'cancelToken', 'socketPath', 'responseEncoding'\n  ];\n  var directMergeKeys = ['validateStatus'];\n\n  function getMergedValue(target, source) {\n    if (utils.isPlainObject(target) && utils.isPlainObject(source)) {\n      return utils.merge(target, source);\n    } else if (utils.isPlainObject(source)) {\n      return utils.merge({}, source);\n    } else if (utils.isArray(source)) {\n      return source.slice();\n    }\n    return source;\n  }\n\n  function mergeDeepProperties(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  }\n\n  utils.forEach(valueFromConfig2Keys, function valueFromConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    }\n  });\n\n  utils.forEach(mergeDeepPropertiesKeys, mergeDeepProperties);\n\n  utils.forEach(defaultToConfig2Keys, function defaultToConfig2(prop) {\n    if (!utils.isUndefined(config2[prop])) {\n      config[prop] = getMergedValue(undefined, config2[prop]);\n    } else if (!utils.isUndefined(config1[prop])) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  utils.forEach(directMergeKeys, function merge(prop) {\n    if (prop in config2) {\n      config[prop] = getMergedValue(config1[prop], config2[prop]);\n    } else if (prop in config1) {\n      config[prop] = getMergedValue(undefined, config1[prop]);\n    }\n  });\n\n  var axiosKeys = valueFromConfig2Keys\n    .concat(mergeDeepPropertiesKeys)\n    .concat(defaultToConfig2Keys)\n    .concat(directMergeKeys);\n\n  var otherKeys = Object\n    .keys(config1)\n    .concat(Object.keys(config2))\n    .filter(function filterAxiosKeys(key) {\n      return axiosKeys.indexOf(key) === -1;\n    });\n\n  utils.forEach(otherKeys, mergeDeepProperties);\n\n  return config;\n};\n","'use strict';\n\nvar utils = require('./../utils');\nvar transformData = require('./transformData');\nvar isCancel = require('../cancel/isCancel');\nvar defaults = require('../defaults');\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nfunction throwIfCancellationRequested(config) {\n  if (config.cancelToken) {\n    config.cancelToken.throwIfRequested();\n  }\n}\n\n/**\n * Dispatch a request to the server using the configured adapter.\n *\n * @param {object} config The config that is to be used for the request\n * @returns {Promise} The Promise to be fulfilled\n */\nmodule.exports = function dispatchRequest(config) {\n  throwIfCancellationRequested(config);\n\n  // Ensure headers exist\n  config.headers = config.headers || {};\n\n  // Transform request data\n  config.data = transformData(\n    config.data,\n    config.headers,\n    config.transformRequest\n  );\n\n  // Flatten headers\n  config.headers = utils.merge(\n    config.headers.common || {},\n    config.headers[config.method] || {},\n    config.headers\n  );\n\n  utils.forEach(\n    ['delete', 'get', 'head', 'post', 'put', 'patch', 'common'],\n    function cleanHeaderConfig(method) {\n      delete config.headers[method];\n    }\n  );\n\n  var adapter = config.adapter || defaults.adapter;\n\n  return adapter(config).then(function onAdapterResolution(response) {\n    throwIfCancellationRequested(config);\n\n    // Transform response data\n    response.data = transformData(\n      response.data,\n      response.headers,\n      config.transformResponse\n    );\n\n    return response;\n  }, function onAdapterRejection(reason) {\n    if (!isCancel(reason)) {\n      throwIfCancellationRequested(config);\n\n      // Transform response data\n      if (reason && reason.response) {\n        reason.response.data = transformData(\n          reason.response.data,\n          reason.response.headers,\n          config.transformResponse\n        );\n      }\n    }\n\n    return Promise.reject(reason);\n  });\n};\n","'use strict';\n\n/**\n * Determines whether the payload is an error thrown by Axios\n *\n * @param {*} payload The value to test\n * @returns {boolean} True if the payload is an error thrown by Axios, otherwise false\n */\nmodule.exports = function isAxiosError(payload) {\n  return (typeof payload === 'object') && (payload.isAxiosError === true);\n};\n","/*!\n  * vue-router v4.0.10\n  * (c) 2021 Eduardo San Martin Morote\n  * @license MIT\n  */\nimport { getCurrentInstance, inject, onUnmounted, onDeactivated, onActivated, computed, unref, watchEffect, defineComponent, reactive, h, provide, ref, watch, shallowRef, nextTick } from 'vue';\nimport { setupDevtoolsPlugin } from '@vue/devtools-api';\n\nconst hasSymbol = typeof Symbol === 'function' && typeof Symbol.toStringTag === 'symbol';\r\nconst PolySymbol = (name) => \r\n// vr = vue router\r\nhasSymbol\r\n    ? Symbol((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' + name : name)\r\n    : ((process.env.NODE_ENV !== 'production') ? '[vue-router]: ' : '_vr_') + name;\r\n// rvlm = Router View Location Matched\r\n/**\r\n * RouteRecord being rendered by the closest ancestor Router View. Used for\r\n * `onBeforeRouteUpdate` and `onBeforeRouteLeave`. rvlm stands for Router View\r\n * Location Matched\r\n *\r\n * @internal\r\n */\r\nconst matchedRouteKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location matched' : 'rvlm');\r\n/**\r\n * Allows overriding the router view depth to control which component in\r\n * `matched` is rendered. rvd stands for Router View Depth\r\n *\r\n * @internal\r\n */\r\nconst viewDepthKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view depth' : 'rvd');\r\n/**\r\n * Allows overriding the router instance returned by `useRouter` in tests. r\r\n * stands for router\r\n *\r\n * @internal\r\n */\r\nconst routerKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router' : 'r');\r\n/**\r\n * Allows overriding the current route returned by `useRoute` in tests. rl\r\n * stands for route location\r\n *\r\n * @internal\r\n */\r\nconst routeLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'route location' : 'rl');\r\n/**\r\n * Allows overriding the current route used by router-view. Internally this is\r\n * used when the `route` prop is passed.\r\n *\r\n * @internal\r\n */\r\nconst routerViewLocationKey = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'router view location' : 'rvl');\n\nconst isBrowser = typeof window !== 'undefined';\n\nfunction isESModule(obj) {\r\n    return obj.__esModule || (hasSymbol && obj[Symbol.toStringTag] === 'Module');\r\n}\r\nconst assign = Object.assign;\r\nfunction applyToParams(fn, params) {\r\n    const newParams = {};\r\n    for (const key in params) {\r\n        const value = params[key];\r\n        newParams[key] = Array.isArray(value) ? value.map(fn) : fn(value);\r\n    }\r\n    return newParams;\r\n}\r\nlet noop = () => { };\n\nfunction warn(msg) {\r\n    // avoid using ...args as it breaks in older Edge builds\r\n    const args = Array.from(arguments).slice(1);\r\n    console.warn.apply(console, ['[Vue Router warn]: ' + msg].concat(args));\r\n}\n\nconst TRAILING_SLASH_RE = /\\/$/;\r\nconst removeTrailingSlash = (path) => path.replace(TRAILING_SLASH_RE, '');\r\n/**\r\n * Transforms an URI into a normalized history location\r\n *\r\n * @param parseQuery\r\n * @param location - URI to normalize\r\n * @param currentLocation - current absolute location. Allows resolving relative\r\n * paths. Must start with `/`. Defaults to `/`\r\n * @returns a normalized history location\r\n */\r\nfunction parseURL(parseQuery, location, currentLocation = '/') {\r\n    let path, query = {}, searchString = '', hash = '';\r\n    // Could use URL and URLSearchParams but IE 11 doesn't support it\r\n    const searchPos = location.indexOf('?');\r\n    const hashPos = location.indexOf('#', searchPos > -1 ? searchPos : 0);\r\n    if (searchPos > -1) {\r\n        path = location.slice(0, searchPos);\r\n        searchString = location.slice(searchPos + 1, hashPos > -1 ? hashPos : location.length);\r\n        query = parseQuery(searchString);\r\n    }\r\n    if (hashPos > -1) {\r\n        path = path || location.slice(0, hashPos);\r\n        // keep the # character\r\n        hash = location.slice(hashPos, location.length);\r\n    }\r\n    // no search and no query\r\n    path = resolveRelativePath(path != null ? path : location, currentLocation);\r\n    // empty path means a relative query or hash `?foo=f`, `#thing`\r\n    return {\r\n        fullPath: path + (searchString && '?') + searchString + hash,\r\n        path,\r\n        query,\r\n        hash,\r\n    };\r\n}\r\n/**\r\n * Stringifies a URL object\r\n *\r\n * @param stringifyQuery\r\n * @param location\r\n */\r\nfunction stringifyURL(stringifyQuery, location) {\r\n    let query = location.query ? stringifyQuery(location.query) : '';\r\n    return location.path + (query && '?') + query + (location.hash || '');\r\n}\r\n/**\r\n * Strips off the base from the beginning of a location.pathname in a non\r\n * case-sensitive way.\r\n *\r\n * @param pathname - location.pathname\r\n * @param base - base to strip off\r\n */\r\nfunction stripBase(pathname, base) {\r\n    // no base or base is not found at the beginning\r\n    if (!base || !pathname.toLowerCase().startsWith(base.toLowerCase()))\r\n        return pathname;\r\n    return pathname.slice(base.length) || '/';\r\n}\r\n/**\r\n * Checks if two RouteLocation are equal. This means that both locations are\r\n * pointing towards the same {@link RouteRecord} and that all `params`, `query`\r\n * parameters and `hash` are the same\r\n *\r\n * @param a - first {@link RouteLocation}\r\n * @param b - second {@link RouteLocation}\r\n */\r\nfunction isSameRouteLocation(stringifyQuery, a, b) {\r\n    let aLastIndex = a.matched.length - 1;\r\n    let bLastIndex = b.matched.length - 1;\r\n    return (aLastIndex > -1 &&\r\n        aLastIndex === bLastIndex &&\r\n        isSameRouteRecord(a.matched[aLastIndex], b.matched[bLastIndex]) &&\r\n        isSameRouteLocationParams(a.params, b.params) &&\r\n        stringifyQuery(a.query) === stringifyQuery(b.query) &&\r\n        a.hash === b.hash);\r\n}\r\n/**\r\n * Check if two `RouteRecords` are equal. Takes into account aliases: they are\r\n * considered equal to the `RouteRecord` they are aliasing.\r\n *\r\n * @param a - first {@link RouteRecord}\r\n * @param b - second {@link RouteRecord}\r\n */\r\nfunction isSameRouteRecord(a, b) {\r\n    // since the original record has an undefined value for aliasOf\r\n    // but all aliases point to the original record, this will always compare\r\n    // the original record\r\n    return (a.aliasOf || a) === (b.aliasOf || b);\r\n}\r\nfunction isSameRouteLocationParams(a, b) {\r\n    if (Object.keys(a).length !== Object.keys(b).length)\r\n        return false;\r\n    for (let key in a) {\r\n        if (!isSameRouteLocationParamsValue(a[key], b[key]))\r\n            return false;\r\n    }\r\n    return true;\r\n}\r\nfunction isSameRouteLocationParamsValue(a, b) {\r\n    return Array.isArray(a)\r\n        ? isEquivalentArray(a, b)\r\n        : Array.isArray(b)\r\n            ? isEquivalentArray(b, a)\r\n            : a === b;\r\n}\r\n/**\r\n * Check if two arrays are the same or if an array with one single entry is the\r\n * same as another primitive value. Used to check query and parameters\r\n *\r\n * @param a - array of values\r\n * @param b - array of values or a single value\r\n */\r\nfunction isEquivalentArray(a, b) {\r\n    return Array.isArray(b)\r\n        ? a.length === b.length && a.every((value, i) => value === b[i])\r\n        : a.length === 1 && a[0] === b;\r\n}\r\n/**\r\n * Resolves a relative path that starts with `.`.\r\n *\r\n * @param to - path location we are resolving\r\n * @param from - currentLocation.path, should start with `/`\r\n */\r\nfunction resolveRelativePath(to, from) {\r\n    if (to.startsWith('/'))\r\n        return to;\r\n    if ((process.env.NODE_ENV !== 'production') && !from.startsWith('/')) {\r\n        warn(`Cannot resolve a relative location without an absolute path. Trying to resolve \"${to}\" from \"${from}\". It should look like \"/${from}\".`);\r\n        return to;\r\n    }\r\n    if (!to)\r\n        return from;\r\n    const fromSegments = from.split('/');\r\n    const toSegments = to.split('/');\r\n    let position = fromSegments.length - 1;\r\n    let toPosition;\r\n    let segment;\r\n    for (toPosition = 0; toPosition < toSegments.length; toPosition++) {\r\n        segment = toSegments[toPosition];\r\n        // can't go below zero\r\n        if (position === 1 || segment === '.')\r\n            continue;\r\n        if (segment === '..')\r\n            position--;\r\n        // found something that is not relative path\r\n        else\r\n            break;\r\n    }\r\n    return (fromSegments.slice(0, position).join('/') +\r\n        '/' +\r\n        toSegments\r\n            .slice(toPosition - (toPosition === toSegments.length ? 1 : 0))\r\n            .join('/'));\r\n}\n\nvar NavigationType;\r\n(function (NavigationType) {\r\n    NavigationType[\"pop\"] = \"pop\";\r\n    NavigationType[\"push\"] = \"push\";\r\n})(NavigationType || (NavigationType = {}));\r\nvar NavigationDirection;\r\n(function (NavigationDirection) {\r\n    NavigationDirection[\"back\"] = \"back\";\r\n    NavigationDirection[\"forward\"] = \"forward\";\r\n    NavigationDirection[\"unknown\"] = \"\";\r\n})(NavigationDirection || (NavigationDirection = {}));\r\n/**\r\n * Starting location for Histories\r\n */\r\nconst START = '';\r\n// Generic utils\r\n/**\r\n * Normalizes a base by removing any trailing slash and reading the base tag if\r\n * present.\r\n *\r\n * @param base - base to normalize\r\n */\r\nfunction normalizeBase(base) {\r\n    if (!base) {\r\n        if (isBrowser) {\r\n            // respect <base> tag\r\n            const baseEl = document.querySelector('base');\r\n            base = (baseEl && baseEl.getAttribute('href')) || '/';\r\n            // strip full URL origin\r\n            base = base.replace(/^\\w+:\\/\\/[^\\/]+/, '');\r\n        }\r\n        else {\r\n            base = '/';\r\n        }\r\n    }\r\n    // ensure leading slash when it was removed by the regex above avoid leading\r\n    // slash with hash because the file could be read from the disk like file://\r\n    // and the leading slash would cause problems\r\n    if (base[0] !== '/' && base[0] !== '#')\r\n        base = '/' + base;\r\n    // remove the trailing slash so all other method can just do `base + fullPath`\r\n    // to build an href\r\n    return removeTrailingSlash(base);\r\n}\r\n// remove any character before the hash\r\nconst BEFORE_HASH_RE = /^[^#]+#/;\r\nfunction createHref(base, location) {\r\n    return base.replace(BEFORE_HASH_RE, '#') + location;\r\n}\n\nfunction getElementPosition(el, offset) {\r\n    const docRect = document.documentElement.getBoundingClientRect();\r\n    const elRect = el.getBoundingClientRect();\r\n    return {\r\n        behavior: offset.behavior,\r\n        left: elRect.left - docRect.left - (offset.left || 0),\r\n        top: elRect.top - docRect.top - (offset.top || 0),\r\n    };\r\n}\r\nconst computeScrollPosition = () => ({\r\n    left: window.pageXOffset,\r\n    top: window.pageYOffset,\r\n});\r\nfunction scrollToPosition(position) {\r\n    let scrollToOptions;\r\n    if ('el' in position) {\r\n        let positionEl = position.el;\r\n        const isIdSelector = typeof positionEl === 'string' && positionEl.startsWith('#');\r\n        /**\r\n         * `id`s can accept pretty much any characters, including CSS combinators\r\n         * like `>` or `~`. It's still possible to retrieve elements using\r\n         * `document.getElementById('~')` but it needs to be escaped when using\r\n         * `document.querySelector('#\\\\~')` for it to be valid. The only\r\n         * requirements for `id`s are them to be unique on the page and to not be\r\n         * empty (`id=\"\"`). Because of that, when passing an id selector, it should\r\n         * be properly escaped for it to work with `querySelector`. We could check\r\n         * for the id selector to be simple (no CSS combinators `+ >~`) but that\r\n         * would make things inconsistent since they are valid characters for an\r\n         * `id` but would need to be escaped when using `querySelector`, breaking\r\n         * their usage and ending up in no selector returned. Selectors need to be\r\n         * escaped:\r\n         *\r\n         * - `#1-thing` becomes `#\\31 -thing`\r\n         * - `#with~symbols` becomes `#with\\\\~symbols`\r\n         *\r\n         * - More information about  the topic can be found at\r\n         *   https://mathiasbynens.be/notes/html5-id-class.\r\n         * - Practical example: https://mathiasbynens.be/demo/html5-id\r\n         */\r\n        if ((process.env.NODE_ENV !== 'production') && typeof position.el === 'string') {\r\n            if (!isIdSelector || !document.getElementById(position.el.slice(1))) {\r\n                try {\r\n                    let foundEl = document.querySelector(position.el);\r\n                    if (isIdSelector && foundEl) {\r\n                        warn(`The selector \"${position.el}\" should be passed as \"el: document.querySelector('${position.el}')\" because it starts with \"#\".`);\r\n                        // return to avoid other warnings\r\n                        return;\r\n                    }\r\n                }\r\n                catch (err) {\r\n                    warn(`The selector \"${position.el}\" is invalid. If you are using an id selector, make sure to escape it. You can find more information about escaping characters in selectors at https://mathiasbynens.be/notes/css-escapes or use CSS.escape (https://developer.mozilla.org/en-US/docs/Web/API/CSS/escape).`);\r\n                    // return to avoid other warnings\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        const el = typeof positionEl === 'string'\r\n            ? isIdSelector\r\n                ? document.getElementById(positionEl.slice(1))\r\n                : document.querySelector(positionEl)\r\n            : positionEl;\r\n        if (!el) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Couldn't find element using selector \"${position.el}\" returned by scrollBehavior.`);\r\n            return;\r\n        }\r\n        scrollToOptions = getElementPosition(el, position);\r\n    }\r\n    else {\r\n        scrollToOptions = position;\r\n    }\r\n    if ('scrollBehavior' in document.documentElement.style)\r\n        window.scrollTo(scrollToOptions);\r\n    else {\r\n        window.scrollTo(scrollToOptions.left != null ? scrollToOptions.left : window.pageXOffset, scrollToOptions.top != null ? scrollToOptions.top : window.pageYOffset);\r\n    }\r\n}\r\nfunction getScrollKey(path, delta) {\r\n    const position = history.state ? history.state.position - delta : -1;\r\n    return position + path;\r\n}\r\nconst scrollPositions = new Map();\r\nfunction saveScrollPosition(key, scrollPosition) {\r\n    scrollPositions.set(key, scrollPosition);\r\n}\r\nfunction getSavedScrollPosition(key) {\r\n    const scroll = scrollPositions.get(key);\r\n    // consume it so it's not used again\r\n    scrollPositions.delete(key);\r\n    return scroll;\r\n}\r\n// TODO: RFC about how to save scroll position\r\n/**\r\n * ScrollBehavior instance used by the router to compute and restore the scroll\r\n * position when navigating.\r\n */\r\n// export interface ScrollHandler<ScrollPositionEntry extends HistoryStateValue, ScrollPosition extends ScrollPositionEntry> {\r\n//   // returns a scroll position that can be saved in history\r\n//   compute(): ScrollPositionEntry\r\n//   // can take an extended ScrollPositionEntry\r\n//   scroll(position: ScrollPosition): void\r\n// }\r\n// export const scrollHandler: ScrollHandler<ScrollPosition> = {\r\n//   compute: computeScroll,\r\n//   scroll: scrollToPosition,\r\n// }\n\nlet createBaseLocation = () => location.protocol + '//' + location.host;\r\n/**\r\n * Creates a normalized history location from a window.location object\r\n * @param location -\r\n */\r\nfunction createCurrentLocation(base, location) {\r\n    const { pathname, search, hash } = location;\r\n    // allows hash bases like #, /#, #/, #!, #!/, /#!/, or even /folder#end\r\n    const hashPos = base.indexOf('#');\r\n    if (hashPos > -1) {\r\n        let slicePos = hash.includes(base.slice(hashPos))\r\n            ? base.slice(hashPos).length\r\n            : 1;\r\n        let pathFromHash = hash.slice(slicePos);\r\n        // prepend the starting slash to hash so the url starts with /#\r\n        if (pathFromHash[0] !== '/')\r\n            pathFromHash = '/' + pathFromHash;\r\n        return stripBase(pathFromHash, '');\r\n    }\r\n    const path = stripBase(pathname, base);\r\n    return path + search + hash;\r\n}\r\nfunction useHistoryListeners(base, historyState, currentLocation, replace) {\r\n    let listeners = [];\r\n    let teardowns = [];\r\n    // TODO: should it be a stack? a Dict. Check if the popstate listener\r\n    // can trigger twice\r\n    let pauseState = null;\r\n    const popStateHandler = ({ state, }) => {\r\n        const to = createCurrentLocation(base, location);\r\n        const from = currentLocation.value;\r\n        const fromState = historyState.value;\r\n        let delta = 0;\r\n        if (state) {\r\n            currentLocation.value = to;\r\n            historyState.value = state;\r\n            // ignore the popstate and reset the pauseState\r\n            if (pauseState && pauseState === from) {\r\n                pauseState = null;\r\n                return;\r\n            }\r\n            delta = fromState ? state.position - fromState.position : 0;\r\n        }\r\n        else {\r\n            replace(to);\r\n        }\r\n        // console.log({ deltaFromCurrent })\r\n        // Here we could also revert the navigation by calling history.go(-delta)\r\n        // this listener will have to be adapted to not trigger again and to wait for the url\r\n        // to be updated before triggering the listeners. Some kind of validation function would also\r\n        // need to be passed to the listeners so the navigation can be accepted\r\n        // call all listeners\r\n        listeners.forEach(listener => {\r\n            listener(currentLocation.value, from, {\r\n                delta,\r\n                type: NavigationType.pop,\r\n                direction: delta\r\n                    ? delta > 0\r\n                        ? NavigationDirection.forward\r\n                        : NavigationDirection.back\r\n                    : NavigationDirection.unknown,\r\n            });\r\n        });\r\n    };\r\n    function pauseListeners() {\r\n        pauseState = currentLocation.value;\r\n    }\r\n    function listen(callback) {\r\n        // setup the listener and prepare teardown callbacks\r\n        listeners.push(callback);\r\n        const teardown = () => {\r\n            const index = listeners.indexOf(callback);\r\n            if (index > -1)\r\n                listeners.splice(index, 1);\r\n        };\r\n        teardowns.push(teardown);\r\n        return teardown;\r\n    }\r\n    function beforeUnloadListener() {\r\n        const { history } = window;\r\n        if (!history.state)\r\n            return;\r\n        history.replaceState(assign({}, history.state, { scroll: computeScrollPosition() }), '');\r\n    }\r\n    function destroy() {\r\n        for (const teardown of teardowns)\r\n            teardown();\r\n        teardowns = [];\r\n        window.removeEventListener('popstate', popStateHandler);\r\n        window.removeEventListener('beforeunload', beforeUnloadListener);\r\n    }\r\n    // setup the listeners and prepare teardown callbacks\r\n    window.addEventListener('popstate', popStateHandler);\r\n    window.addEventListener('beforeunload', beforeUnloadListener);\r\n    return {\r\n        pauseListeners,\r\n        listen,\r\n        destroy,\r\n    };\r\n}\r\n/**\r\n * Creates a state object\r\n */\r\nfunction buildState(back, current, forward, replaced = false, computeScroll = false) {\r\n    return {\r\n        back,\r\n        current,\r\n        forward,\r\n        replaced,\r\n        position: window.history.length,\r\n        scroll: computeScroll ? computeScrollPosition() : null,\r\n    };\r\n}\r\nfunction useHistoryStateNavigation(base) {\r\n    const { history, location } = window;\r\n    // private variables\r\n    let currentLocation = {\r\n        value: createCurrentLocation(base, location),\r\n    };\r\n    let historyState = { value: history.state };\r\n    // build current history entry as this is a fresh navigation\r\n    if (!historyState.value) {\r\n        changeLocation(currentLocation.value, {\r\n            back: null,\r\n            current: currentLocation.value,\r\n            forward: null,\r\n            // the length is off by one, we need to decrease it\r\n            position: history.length - 1,\r\n            replaced: true,\r\n            // don't add a scroll as the user may have an anchor and we want\r\n            // scrollBehavior to be triggered without a saved position\r\n            scroll: null,\r\n        }, true);\r\n    }\r\n    function changeLocation(to, state, replace) {\r\n        /**\r\n         * if a base tag is provided and we are on a normal domain, we have to\r\n         * respect the provided `base` attribute because pushState() will use it and\r\n         * potentially erase anything before the `#` like at\r\n         * https://github.com/vuejs/vue-router-next/issues/685 where a base of\r\n         * `/folder/#` but a base of `/` would erase the `/folder/` section. If\r\n         * there is no host, the `<base>` tag makes no sense and if there isn't a\r\n         * base tag we can just use everything after the `#`.\r\n         */\r\n        const hashIndex = base.indexOf('#');\r\n        const url = hashIndex > -1\r\n            ? (location.host && document.querySelector('base')\r\n                ? base\r\n                : base.slice(hashIndex)) + to\r\n            : createBaseLocation() + base + to;\r\n        try {\r\n            // BROWSER QUIRK\r\n            // NOTE: Safari throws a SecurityError when calling this function 100 times in 30 seconds\r\n            history[replace ? 'replaceState' : 'pushState'](state, '', url);\r\n            historyState.value = state;\r\n        }\r\n        catch (err) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('Error with push/replace State', err);\r\n            }\r\n            else {\r\n                console.error(err);\r\n            }\r\n            // Force the navigation, this also resets the call count\r\n            location[replace ? 'replace' : 'assign'](url);\r\n        }\r\n    }\r\n    function replace(to, data) {\r\n        const state = assign({}, history.state, buildState(historyState.value.back, \r\n        // keep back and forward entries but override current position\r\n        to, historyState.value.forward, true), data, { position: historyState.value.position });\r\n        changeLocation(to, state, true);\r\n        currentLocation.value = to;\r\n    }\r\n    function push(to, data) {\r\n        // Add to current entry the information of where we are going\r\n        // as well as saving the current position\r\n        const currentState = assign({}, \r\n        // use current history state to gracefully handle a wrong call to\r\n        // history.replaceState\r\n        // https://github.com/vuejs/vue-router-next/issues/366\r\n        historyState.value, history.state, {\r\n            forward: to,\r\n            scroll: computeScrollPosition(),\r\n        });\r\n        if ((process.env.NODE_ENV !== 'production') && !history.state) {\r\n            warn(`history.state seems to have been manually replaced without preserving the necessary values. Make sure to preserve existing history state if you are manually calling history.replaceState:\\n\\n` +\r\n                `history.replaceState(history.state, '', url)\\n\\n` +\r\n                `You can find more information at https://next.router.vuejs.org/guide/migration/#usage-of-history-state.`);\r\n        }\r\n        changeLocation(currentState.current, currentState, true);\r\n        const state = assign({}, buildState(currentLocation.value, to, null), { position: currentState.position + 1 }, data);\r\n        changeLocation(to, state, false);\r\n        currentLocation.value = to;\r\n    }\r\n    return {\r\n        location: currentLocation,\r\n        state: historyState,\r\n        push,\r\n        replace,\r\n    };\r\n}\r\n/**\r\n * Creates an HTML5 history. Most common history for single page applications.\r\n *\r\n * @param base -\r\n */\r\nfunction createWebHistory(base) {\r\n    base = normalizeBase(base);\r\n    const historyNavigation = useHistoryStateNavigation(base);\r\n    const historyListeners = useHistoryListeners(base, historyNavigation.state, historyNavigation.location, historyNavigation.replace);\r\n    function go(delta, triggerListeners = true) {\r\n        if (!triggerListeners)\r\n            historyListeners.pauseListeners();\r\n        history.go(delta);\r\n    }\r\n    const routerHistory = assign({\r\n        // it's overridden right after\r\n        location: '',\r\n        base,\r\n        go,\r\n        createHref: createHref.bind(null, base),\r\n    }, historyNavigation, historyListeners);\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.location.value,\r\n    });\r\n    Object.defineProperty(routerHistory, 'state', {\r\n        enumerable: true,\r\n        get: () => historyNavigation.state.value,\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a in-memory based history. The main purpose of this history is to handle SSR. It starts in a special location that is nowhere.\r\n * It's up to the user to replace that location with the starter location by either calling `router.push` or `router.replace`.\r\n *\r\n * @param base - Base applied to all urls, defaults to '/'\r\n * @returns a history object that can be passed to the router constructor\r\n */\r\nfunction createMemoryHistory(base = '') {\r\n    let listeners = [];\r\n    let queue = [START];\r\n    let position = 0;\r\n    function setLocation(location) {\r\n        position++;\r\n        if (position === queue.length) {\r\n            // we are at the end, we can simply append a new entry\r\n            queue.push(location);\r\n        }\r\n        else {\r\n            // we are in the middle, we remove everything from here in the queue\r\n            queue.splice(position);\r\n            queue.push(location);\r\n        }\r\n    }\r\n    function triggerListeners(to, from, { direction, delta }) {\r\n        const info = {\r\n            direction,\r\n            delta,\r\n            type: NavigationType.pop,\r\n        };\r\n        for (let callback of listeners) {\r\n            callback(to, from, info);\r\n        }\r\n    }\r\n    const routerHistory = {\r\n        // rewritten by Object.defineProperty\r\n        location: START,\r\n        // TODO: should be kept in queue\r\n        state: {},\r\n        base,\r\n        createHref: createHref.bind(null, base),\r\n        replace(to) {\r\n            // remove current entry and decrement position\r\n            queue.splice(position--, 1);\r\n            setLocation(to);\r\n        },\r\n        push(to, data) {\r\n            setLocation(to);\r\n        },\r\n        listen(callback) {\r\n            listeners.push(callback);\r\n            return () => {\r\n                const index = listeners.indexOf(callback);\r\n                if (index > -1)\r\n                    listeners.splice(index, 1);\r\n            };\r\n        },\r\n        destroy() {\r\n            listeners = [];\r\n            queue = [START];\r\n            position = 0;\r\n        },\r\n        go(delta, shouldTrigger = true) {\r\n            const from = this.location;\r\n            const direction = \r\n            // we are considering delta === 0 going forward, but in abstract mode\r\n            // using 0 for the delta doesn't make sense like it does in html5 where\r\n            // it reloads the page\r\n            delta < 0 ? NavigationDirection.back : NavigationDirection.forward;\r\n            position = Math.max(0, Math.min(position + delta, queue.length - 1));\r\n            if (shouldTrigger) {\r\n                triggerListeners(this.location, from, {\r\n                    direction,\r\n                    delta,\r\n                });\r\n            }\r\n        },\r\n    };\r\n    Object.defineProperty(routerHistory, 'location', {\r\n        enumerable: true,\r\n        get: () => queue[position],\r\n    });\r\n    return routerHistory;\r\n}\n\n/**\r\n * Creates a hash history. Useful for web applications with no host (e.g.\r\n * `file://`) or when configuring a server to handle any URL is not possible.\r\n *\r\n * @param base - optional base to provide. Defaults to `location.pathname +\r\n * location.search` If there is a `<base>` tag in the `head`, its value will be\r\n * ignored in favor of this parameter **but note it affects all the\r\n * history.pushState() calls**, meaning that if you use a `<base>` tag, it's\r\n * `href` value **has to match this parameter** (ignoring anything after the\r\n * `#`).\r\n *\r\n * @example\r\n * ```js\r\n * // at https://example.com/folder\r\n * createWebHashHistory() // gives a url of `https://example.com/folder#`\r\n * createWebHashHistory('/folder/') // gives a url of `https://example.com/folder/#`\r\n * // if the `#` is provided in the base, it won't be added by `createWebHashHistory`\r\n * createWebHashHistory('/folder/#/app/') // gives a url of `https://example.com/folder/#/app/`\r\n * // you should avoid doing this because it changes the original url and breaks copying urls\r\n * createWebHashHistory('/other-folder/') // gives a url of `https://example.com/other-folder/#`\r\n *\r\n * // at file:///usr/etc/folder/index.html\r\n * // for locations with no `host`, the base is ignored\r\n * createWebHashHistory('/iAmIgnored') // gives a url of `file:///usr/etc/folder/index.html#`\r\n * ```\r\n */\r\nfunction createWebHashHistory(base) {\r\n    // Make sure this implementation is fine in terms of encoding, specially for IE11\r\n    // for `file://`, directly use the pathname and ignore the base\r\n    // location.pathname contains an initial `/` even at the root: `https://example.com`\r\n    base = location.host ? base || location.pathname + location.search : '';\r\n    // allow the user to provide a `#` in the middle: `/base/#/app`\r\n    if (!base.includes('#'))\r\n        base += '#';\r\n    if ((process.env.NODE_ENV !== 'production') && !base.endsWith('#/') && !base.endsWith('#')) {\r\n        warn(`A hash base must end with a \"#\":\\n\"${base}\" should be \"${base.replace(/#.*$/, '#')}\".`);\r\n    }\r\n    return createWebHistory(base);\r\n}\n\nfunction isRouteLocation(route) {\r\n    return typeof route === 'string' || (route && typeof route === 'object');\r\n}\r\nfunction isRouteName(name) {\r\n    return typeof name === 'string' || typeof name === 'symbol';\r\n}\n\n/**\r\n * Initial route location where the router is. Can be used in navigation guards\r\n * to differentiate the initial navigation.\r\n *\r\n * @example\r\n * ```js\r\n * import { START_LOCATION } from 'vue-router'\r\n *\r\n * router.beforeEach((to, from) => {\r\n *   if (from === START_LOCATION) {\r\n *     // initial navigation\r\n *   }\r\n * })\r\n * ```\r\n */\r\nconst START_LOCATION_NORMALIZED = {\r\n    path: '/',\r\n    name: undefined,\r\n    params: {},\r\n    query: {},\r\n    hash: '',\r\n    fullPath: '/',\r\n    matched: [],\r\n    meta: {},\r\n    redirectedFrom: undefined,\r\n};\n\nconst NavigationFailureSymbol = /*#__PURE__*/ PolySymbol((process.env.NODE_ENV !== 'production') ? 'navigation failure' : 'nf');\r\n/**\r\n * Enumeration with all possible types for navigation failures. Can be passed to\r\n * {@link isNavigationFailure} to check for specific failures.\r\n */\r\nvar NavigationFailureType;\r\n(function (NavigationFailureType) {\r\n    /**\r\n     * An aborted navigation is a navigation that failed because a navigation\r\n     * guard returned `false` or called `next(false)`\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"aborted\"] = 4] = \"aborted\";\r\n    /**\r\n     * A cancelled navigation is a navigation that failed because a more recent\r\n     * navigation finished started (not necessarily finished).\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"cancelled\"] = 8] = \"cancelled\";\r\n    /**\r\n     * A duplicated navigation is a navigation that failed because it was\r\n     * initiated while already being at the exact same location.\r\n     */\r\n    NavigationFailureType[NavigationFailureType[\"duplicated\"] = 16] = \"duplicated\";\r\n})(NavigationFailureType || (NavigationFailureType = {}));\r\n// DEV only debug messages\r\nconst ErrorTypeMessages = {\r\n    [1 /* MATCHER_NOT_FOUND */]({ location, currentLocation }) {\r\n        return `No match for\\n ${JSON.stringify(location)}${currentLocation\r\n            ? '\\nwhile being at\\n' + JSON.stringify(currentLocation)\r\n            : ''}`;\r\n    },\r\n    [2 /* NAVIGATION_GUARD_REDIRECT */]({ from, to, }) {\r\n        return `Redirected from \"${from.fullPath}\" to \"${stringifyRoute(to)}\" via a navigation guard.`;\r\n    },\r\n    [4 /* NAVIGATION_ABORTED */]({ from, to }) {\r\n        return `Navigation aborted from \"${from.fullPath}\" to \"${to.fullPath}\" via a navigation guard.`;\r\n    },\r\n    [8 /* NAVIGATION_CANCELLED */]({ from, to }) {\r\n        return `Navigation cancelled from \"${from.fullPath}\" to \"${to.fullPath}\" with a new navigation.`;\r\n    },\r\n    [16 /* NAVIGATION_DUPLICATED */]({ from, to }) {\r\n        return `Avoided redundant navigation to current location: \"${from.fullPath}\".`;\r\n    },\r\n};\r\nfunction createRouterError(type, params) {\r\n    // keep full error messages in cjs versions\r\n    if ((process.env.NODE_ENV !== 'production') || !true) {\r\n        return assign(new Error(ErrorTypeMessages[type](params)), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n    else {\r\n        return assign(new Error(), {\r\n            type,\r\n            [NavigationFailureSymbol]: true,\r\n        }, params);\r\n    }\r\n}\r\nfunction isNavigationFailure(error, type) {\r\n    return (error instanceof Error &&\r\n        NavigationFailureSymbol in error &&\r\n        (type == null || !!(error.type & type)));\r\n}\r\nconst propertiesToLog = ['params', 'query', 'hash'];\r\nfunction stringifyRoute(to) {\r\n    if (typeof to === 'string')\r\n        return to;\r\n    if ('path' in to)\r\n        return to.path;\r\n    const location = {};\r\n    for (const key of propertiesToLog) {\r\n        if (key in to)\r\n            location[key] = to[key];\r\n    }\r\n    return JSON.stringify(location, null, 2);\r\n}\n\n// default pattern for a param: non greedy everything but /\r\nconst BASE_PARAM_PATTERN = '[^/]+?';\r\nconst BASE_PATH_PARSER_OPTIONS = {\r\n    sensitive: false,\r\n    strict: false,\r\n    start: true,\r\n    end: true,\r\n};\r\n// Special Regex characters that must be escaped in static tokens\r\nconst REGEX_CHARS_RE = /[.+*?^${}()[\\]/\\\\]/g;\r\n/**\r\n * Creates a path parser from an array of Segments (a segment is an array of Tokens)\r\n *\r\n * @param segments - array of segments returned by tokenizePath\r\n * @param extraOptions - optional options for the regexp\r\n * @returns a PathParser\r\n */\r\nfunction tokensToParser(segments, extraOptions) {\r\n    const options = assign({}, BASE_PATH_PARSER_OPTIONS, extraOptions);\r\n    // the amount of scores is the same as the length of segments except for the root segment \"/\"\r\n    let score = [];\r\n    // the regexp as a string\r\n    let pattern = options.start ? '^' : '';\r\n    // extracted keys\r\n    const keys = [];\r\n    for (const segment of segments) {\r\n        // the root segment needs special treatment\r\n        const segmentScores = segment.length ? [] : [90 /* Root */];\r\n        // allow trailing slash\r\n        if (options.strict && !segment.length)\r\n            pattern += '/';\r\n        for (let tokenIndex = 0; tokenIndex < segment.length; tokenIndex++) {\r\n            const token = segment[tokenIndex];\r\n            // resets the score if we are inside a sub segment /:a-other-:b\r\n            let subSegmentScore = 40 /* Segment */ +\r\n                (options.sensitive ? 0.25 /* BonusCaseSensitive */ : 0);\r\n            if (token.type === 0 /* Static */) {\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    pattern += '/';\r\n                pattern += token.value.replace(REGEX_CHARS_RE, '\\\\$&');\r\n                subSegmentScore += 40 /* Static */;\r\n            }\r\n            else if (token.type === 1 /* Param */) {\r\n                const { value, repeatable, optional, regexp } = token;\r\n                keys.push({\r\n                    name: value,\r\n                    repeatable,\r\n                    optional,\r\n                });\r\n                const re = regexp ? regexp : BASE_PARAM_PATTERN;\r\n                // the user provided a custom regexp /:id(\\\\d+)\r\n                if (re !== BASE_PARAM_PATTERN) {\r\n                    subSegmentScore += 10 /* BonusCustomRegExp */;\r\n                    // make sure the regexp is valid before using it\r\n                    try {\r\n                        new RegExp(`(${re})`);\r\n                    }\r\n                    catch (err) {\r\n                        throw new Error(`Invalid custom RegExp for param \"${value}\" (${re}): ` +\r\n                            err.message);\r\n                    }\r\n                }\r\n                // when we repeat we must take care of the repeating leading slash\r\n                let subPattern = repeatable ? `((?:${re})(?:/(?:${re}))*)` : `(${re})`;\r\n                // prepend the slash if we are starting a new segment\r\n                if (!tokenIndex)\r\n                    subPattern =\r\n                        // avoid an optional / if there are more segments e.g. /:p?-static\r\n                        // or /:p?-:p2\r\n                        optional && segment.length < 2\r\n                            ? `(?:/${subPattern})`\r\n                            : '/' + subPattern;\r\n                if (optional)\r\n                    subPattern += '?';\r\n                pattern += subPattern;\r\n                subSegmentScore += 20 /* Dynamic */;\r\n                if (optional)\r\n                    subSegmentScore += -8 /* BonusOptional */;\r\n                if (repeatable)\r\n                    subSegmentScore += -20 /* BonusRepeatable */;\r\n                if (re === '.*')\r\n                    subSegmentScore += -50 /* BonusWildcard */;\r\n            }\r\n            segmentScores.push(subSegmentScore);\r\n        }\r\n        // an empty array like /home/ -> [[{home}], []]\r\n        // if (!segment.length) pattern += '/'\r\n        score.push(segmentScores);\r\n    }\r\n    // only apply the strict bonus to the last score\r\n    if (options.strict && options.end) {\r\n        const i = score.length - 1;\r\n        score[i][score[i].length - 1] += 0.7000000000000001 /* BonusStrict */;\r\n    }\r\n    // TODO: dev only warn double trailing slash\r\n    if (!options.strict)\r\n        pattern += '/?';\r\n    if (options.end)\r\n        pattern += '$';\r\n    // allow paths like /dynamic to only match dynamic or dynamic/... but not dynamic_something_else\r\n    else if (options.strict)\r\n        pattern += '(?:/|$)';\r\n    const re = new RegExp(pattern, options.sensitive ? '' : 'i');\r\n    function parse(path) {\r\n        const match = path.match(re);\r\n        const params = {};\r\n        if (!match)\r\n            return null;\r\n        for (let i = 1; i < match.length; i++) {\r\n            const value = match[i] || '';\r\n            const key = keys[i - 1];\r\n            params[key.name] = value && key.repeatable ? value.split('/') : value;\r\n        }\r\n        return params;\r\n    }\r\n    function stringify(params) {\r\n        let path = '';\r\n        // for optional parameters to allow to be empty\r\n        let avoidDuplicatedSlash = false;\r\n        for (const segment of segments) {\r\n            if (!avoidDuplicatedSlash || !path.endsWith('/'))\r\n                path += '/';\r\n            avoidDuplicatedSlash = false;\r\n            for (const token of segment) {\r\n                if (token.type === 0 /* Static */) {\r\n                    path += token.value;\r\n                }\r\n                else if (token.type === 1 /* Param */) {\r\n                    const { value, repeatable, optional } = token;\r\n                    const param = value in params ? params[value] : '';\r\n                    if (Array.isArray(param) && !repeatable)\r\n                        throw new Error(`Provided param \"${value}\" is an array but it is not repeatable (* or + modifiers)`);\r\n                    const text = Array.isArray(param) ? param.join('/') : param;\r\n                    if (!text) {\r\n                        if (optional) {\r\n                            // if we have more than one optional param like /:a?-static we\r\n                            // don't need to care about the optional param\r\n                            if (segment.length < 2) {\r\n                                // remove the last slash as we could be at the end\r\n                                if (path.endsWith('/'))\r\n                                    path = path.slice(0, -1);\r\n                                // do not append a slash on the next iteration\r\n                                else\r\n                                    avoidDuplicatedSlash = true;\r\n                            }\r\n                        }\r\n                        else\r\n                            throw new Error(`Missing required param \"${value}\"`);\r\n                    }\r\n                    path += text;\r\n                }\r\n            }\r\n        }\r\n        return path;\r\n    }\r\n    return {\r\n        re,\r\n        score,\r\n        keys,\r\n        parse,\r\n        stringify,\r\n    };\r\n}\r\n/**\r\n * Compares an array of numbers as used in PathParser.score and returns a\r\n * number. This function can be used to `sort` an array\r\n * @param a - first array of numbers\r\n * @param b - second array of numbers\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n * should be sorted first\r\n */\r\nfunction compareScoreArray(a, b) {\r\n    let i = 0;\r\n    while (i < a.length && i < b.length) {\r\n        const diff = b[i] - a[i];\r\n        // only keep going if diff === 0\r\n        if (diff)\r\n            return diff;\r\n        i++;\r\n    }\r\n    // if the last subsegment was Static, the shorter segments should be sorted first\r\n    // otherwise sort the longest segment first\r\n    if (a.length < b.length) {\r\n        return a.length === 1 && a[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? -1\r\n            : 1;\r\n    }\r\n    else if (a.length > b.length) {\r\n        return b.length === 1 && b[0] === 40 /* Static */ + 40 /* Segment */\r\n            ? 1\r\n            : -1;\r\n    }\r\n    return 0;\r\n}\r\n/**\r\n * Compare function that can be used with `sort` to sort an array of PathParser\r\n * @param a - first PathParser\r\n * @param b - second PathParser\r\n * @returns 0 if both are equal, < 0 if a should be sorted first, > 0 if b\r\n */\r\nfunction comparePathParserScore(a, b) {\r\n    let i = 0;\r\n    const aScore = a.score;\r\n    const bScore = b.score;\r\n    while (i < aScore.length && i < bScore.length) {\r\n        const comp = compareScoreArray(aScore[i], bScore[i]);\r\n        // do not return if both are equal\r\n        if (comp)\r\n            return comp;\r\n        i++;\r\n    }\r\n    // if a and b share the same score entries but b has more, sort b first\r\n    return bScore.length - aScore.length;\r\n    // this is the ternary version\r\n    // return aScore.length < bScore.length\r\n    //   ? 1\r\n    //   : aScore.length > bScore.length\r\n    //   ? -1\r\n    //   : 0\r\n}\n\nconst ROOT_TOKEN = {\r\n    type: 0 /* Static */,\r\n    value: '',\r\n};\r\nconst VALID_PARAM_RE = /[a-zA-Z0-9_]/;\r\n// After some profiling, the cache seems to be unnecessary because tokenizePath\r\n// (the slowest part of adding a route) is very fast\r\n// const tokenCache = new Map<string, Token[][]>()\r\nfunction tokenizePath(path) {\r\n    if (!path)\r\n        return [[]];\r\n    if (path === '/')\r\n        return [[ROOT_TOKEN]];\r\n    if (!path.startsWith('/')) {\r\n        throw new Error((process.env.NODE_ENV !== 'production')\r\n            ? `Route paths should start with a \"/\": \"${path}\" should be \"/${path}\".`\r\n            : `Invalid path \"${path}\"`);\r\n    }\r\n    // if (tokenCache.has(path)) return tokenCache.get(path)!\r\n    function crash(message) {\r\n        throw new Error(`ERR (${state})/\"${buffer}\": ${message}`);\r\n    }\r\n    let state = 0 /* Static */;\r\n    let previousState = state;\r\n    const tokens = [];\r\n    // the segment will always be valid because we get into the initial state\r\n    // with the leading /\r\n    let segment;\r\n    function finalizeSegment() {\r\n        if (segment)\r\n            tokens.push(segment);\r\n        segment = [];\r\n    }\r\n    // index on the path\r\n    let i = 0;\r\n    // char at index\r\n    let char;\r\n    // buffer of the value read\r\n    let buffer = '';\r\n    // custom regexp for a param\r\n    let customRe = '';\r\n    function consumeBuffer() {\r\n        if (!buffer)\r\n            return;\r\n        if (state === 0 /* Static */) {\r\n            segment.push({\r\n                type: 0 /* Static */,\r\n                value: buffer,\r\n            });\r\n        }\r\n        else if (state === 1 /* Param */ ||\r\n            state === 2 /* ParamRegExp */ ||\r\n            state === 3 /* ParamRegExpEnd */) {\r\n            if (segment.length > 1 && (char === '*' || char === '+'))\r\n                crash(`A repeatable param (${buffer}) must be alone in its segment. eg: '/:ids+.`);\r\n            segment.push({\r\n                type: 1 /* Param */,\r\n                value: buffer,\r\n                regexp: customRe,\r\n                repeatable: char === '*' || char === '+',\r\n                optional: char === '*' || char === '?',\r\n            });\r\n        }\r\n        else {\r\n            crash('Invalid state to consume buffer');\r\n        }\r\n        buffer = '';\r\n    }\r\n    function addCharToBuffer() {\r\n        buffer += char;\r\n    }\r\n    while (i < path.length) {\r\n        char = path[i++];\r\n        if (char === '\\\\' && state !== 2 /* ParamRegExp */) {\r\n            previousState = state;\r\n            state = 4 /* EscapeNext */;\r\n            continue;\r\n        }\r\n        switch (state) {\r\n            case 0 /* Static */:\r\n                if (char === '/') {\r\n                    if (buffer) {\r\n                        consumeBuffer();\r\n                    }\r\n                    finalizeSegment();\r\n                }\r\n                else if (char === ':') {\r\n                    consumeBuffer();\r\n                    state = 1 /* Param */;\r\n                }\r\n                else {\r\n                    addCharToBuffer();\r\n                }\r\n                break;\r\n            case 4 /* EscapeNext */:\r\n                addCharToBuffer();\r\n                state = previousState;\r\n                break;\r\n            case 1 /* Param */:\r\n                if (char === '(') {\r\n                    state = 2 /* ParamRegExp */;\r\n                }\r\n                else if (VALID_PARAM_RE.test(char)) {\r\n                    addCharToBuffer();\r\n                }\r\n                else {\r\n                    consumeBuffer();\r\n                    state = 0 /* Static */;\r\n                    // go back one character if we were not modifying\r\n                    if (char !== '*' && char !== '?' && char !== '+')\r\n                        i--;\r\n                }\r\n                break;\r\n            case 2 /* ParamRegExp */:\r\n                // TODO: is it worth handling nested regexp? like :p(?:prefix_([^/]+)_suffix)\r\n                // it already works by escaping the closing )\r\n                // https://paths.esm.dev/?p=AAMeJbiAwQEcDKbAoAAkP60PG2R6QAvgNaA6AFACM2ABuQBB#\r\n                // is this really something people need since you can also write\r\n                // /prefix_:p()_suffix\r\n                if (char === ')') {\r\n                    // handle the escaped )\r\n                    if (customRe[customRe.length - 1] == '\\\\')\r\n                        customRe = customRe.slice(0, -1) + char;\r\n                    else\r\n                        state = 3 /* ParamRegExpEnd */;\r\n                }\r\n                else {\r\n                    customRe += char;\r\n                }\r\n                break;\r\n            case 3 /* ParamRegExpEnd */:\r\n                // same as finalizing a param\r\n                consumeBuffer();\r\n                state = 0 /* Static */;\r\n                // go back one character if we were not modifying\r\n                if (char !== '*' && char !== '?' && char !== '+')\r\n                    i--;\r\n                customRe = '';\r\n                break;\r\n            default:\r\n                crash('Unknown state');\r\n                break;\r\n        }\r\n    }\r\n    if (state === 2 /* ParamRegExp */)\r\n        crash(`Unfinished custom RegExp for param \"${buffer}\"`);\r\n    consumeBuffer();\r\n    finalizeSegment();\r\n    // tokenCache.set(path, tokens)\r\n    return tokens;\r\n}\n\nfunction createRouteRecordMatcher(record, parent, options) {\r\n    const parser = tokensToParser(tokenizePath(record.path), options);\r\n    // warn against params with the same name\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const existingKeys = new Set();\r\n        for (const key of parser.keys) {\r\n            if (existingKeys.has(key.name))\r\n                warn(`Found duplicated params with name \"${key.name}\" for path \"${record.path}\". Only the last one will be available on \"$route.params\".`);\r\n            existingKeys.add(key.name);\r\n        }\r\n    }\r\n    const matcher = assign(parser, {\r\n        record,\r\n        parent,\r\n        // these needs to be populated by the parent\r\n        children: [],\r\n        alias: [],\r\n    });\r\n    if (parent) {\r\n        // both are aliases or both are not aliases\r\n        // we don't want to mix them because the order is used when\r\n        // passing originalRecord in Matcher.addRoute\r\n        if (!matcher.record.aliasOf === !parent.record.aliasOf)\r\n            parent.children.push(matcher);\r\n    }\r\n    return matcher;\r\n}\n\n/**\r\n * Creates a Router Matcher.\r\n *\r\n * @internal\r\n * @param routes - array of initial routes\r\n * @param globalOptions - global route options\r\n */\r\nfunction createRouterMatcher(routes, globalOptions) {\r\n    // normalized ordered array of matchers\r\n    const matchers = [];\r\n    const matcherMap = new Map();\r\n    globalOptions = mergeOptions({ strict: false, end: true, sensitive: false }, globalOptions);\r\n    function getRecordMatcher(name) {\r\n        return matcherMap.get(name);\r\n    }\r\n    function addRoute(record, parent, originalRecord) {\r\n        // used later on to remove by name\r\n        let isRootAdd = !originalRecord;\r\n        let mainNormalizedRecord = normalizeRouteRecord(record);\r\n        // we might be the child of an alias\r\n        mainNormalizedRecord.aliasOf = originalRecord && originalRecord.record;\r\n        const options = mergeOptions(globalOptions, record);\r\n        // generate an array of records to correctly handle aliases\r\n        const normalizedRecords = [\r\n            mainNormalizedRecord,\r\n        ];\r\n        if ('alias' in record) {\r\n            const aliases = typeof record.alias === 'string' ? [record.alias] : record.alias;\r\n            for (const alias of aliases) {\r\n                normalizedRecords.push(assign({}, mainNormalizedRecord, {\r\n                    // this allows us to hold a copy of the `components` option\r\n                    // so that async components cache is hold on the original record\r\n                    components: originalRecord\r\n                        ? originalRecord.record.components\r\n                        : mainNormalizedRecord.components,\r\n                    path: alias,\r\n                    // we might be the child of an alias\r\n                    aliasOf: originalRecord\r\n                        ? originalRecord.record\r\n                        : mainNormalizedRecord,\r\n                    // the aliases are always of the same kind as the original since they\r\n                    // are defined on the same record\r\n                }));\r\n            }\r\n        }\r\n        let matcher;\r\n        let originalMatcher;\r\n        for (const normalizedRecord of normalizedRecords) {\r\n            let { path } = normalizedRecord;\r\n            // Build up the path for nested routes if the child isn't an absolute\r\n            // route. Only add the / delimiter if the child path isn't empty and if the\r\n            // parent path doesn't have a trailing slash\r\n            if (parent && path[0] !== '/') {\r\n                let parentPath = parent.record.path;\r\n                let connectingSlash = parentPath[parentPath.length - 1] === '/' ? '' : '/';\r\n                normalizedRecord.path =\r\n                    parent.record.path + (path && connectingSlash + path);\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') && normalizedRecord.path === '*') {\r\n                throw new Error('Catch all routes (\"*\") must now be defined using a param with a custom regexp.\\n' +\r\n                    'See more at https://next.router.vuejs.org/guide/migration/#removed-star-or-catch-all-routes.');\r\n            }\r\n            // create the object before hand so it can be passed to children\r\n            matcher = createRouteRecordMatcher(normalizedRecord, parent, options);\r\n            if ((process.env.NODE_ENV !== 'production') && parent && path[0] === '/')\r\n                checkMissingParamsInAbsolutePath(matcher, parent);\r\n            // if we are an alias we must tell the original record that we exist\r\n            // so we can be removed\r\n            if (originalRecord) {\r\n                originalRecord.alias.push(matcher);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkSameParams(originalRecord, matcher);\r\n                }\r\n            }\r\n            else {\r\n                // otherwise, the first record is the original and others are aliases\r\n                originalMatcher = originalMatcher || matcher;\r\n                if (originalMatcher !== matcher)\r\n                    originalMatcher.alias.push(matcher);\r\n                // remove the route if named and only for the top record (avoid in nested calls)\r\n                // this works because the original record is the first one\r\n                if (isRootAdd && record.name && !isAliasRecord(matcher))\r\n                    removeRoute(record.name);\r\n            }\r\n            if ('children' in mainNormalizedRecord) {\r\n                let children = mainNormalizedRecord.children;\r\n                for (let i = 0; i < children.length; i++) {\r\n                    addRoute(children[i], matcher, originalRecord && originalRecord.children[i]);\r\n                }\r\n            }\r\n            // if there was no original record, then the first one was not an alias and all\r\n            // other alias (if any) need to reference this record when adding children\r\n            originalRecord = originalRecord || matcher;\r\n            // TODO: add normalized records for more flexibility\r\n            // if (parent && isAliasRecord(originalRecord)) {\r\n            //   parent.children.push(originalRecord)\r\n            // }\r\n            insertMatcher(matcher);\r\n        }\r\n        return originalMatcher\r\n            ? () => {\r\n                // since other matchers are aliases, they should be removed by the original matcher\r\n                removeRoute(originalMatcher);\r\n            }\r\n            : noop;\r\n    }\r\n    function removeRoute(matcherRef) {\r\n        if (isRouteName(matcherRef)) {\r\n            const matcher = matcherMap.get(matcherRef);\r\n            if (matcher) {\r\n                matcherMap.delete(matcherRef);\r\n                matchers.splice(matchers.indexOf(matcher), 1);\r\n                matcher.children.forEach(removeRoute);\r\n                matcher.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n        else {\r\n            let index = matchers.indexOf(matcherRef);\r\n            if (index > -1) {\r\n                matchers.splice(index, 1);\r\n                if (matcherRef.record.name)\r\n                    matcherMap.delete(matcherRef.record.name);\r\n                matcherRef.children.forEach(removeRoute);\r\n                matcherRef.alias.forEach(removeRoute);\r\n            }\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matchers;\r\n    }\r\n    function insertMatcher(matcher) {\r\n        let i = 0;\r\n        // console.log('i is', { i })\r\n        while (i < matchers.length &&\r\n            comparePathParserScore(matcher, matchers[i]) >= 0)\r\n            i++;\r\n        // console.log('END i is', { i })\r\n        // while (i < matchers.length && matcher.score <= matchers[i].score) i++\r\n        matchers.splice(i, 0, matcher);\r\n        // only add the original record to the name map\r\n        if (matcher.record.name && !isAliasRecord(matcher))\r\n            matcherMap.set(matcher.record.name, matcher);\r\n    }\r\n    function resolve(location, currentLocation) {\r\n        let matcher;\r\n        let params = {};\r\n        let path;\r\n        let name;\r\n        if ('name' in location && location.name) {\r\n            matcher = matcherMap.get(location.name);\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                });\r\n            name = matcher.record.name;\r\n            params = assign(\r\n            // paramsFromLocation is a new object\r\n            paramsFromLocation(currentLocation.params, \r\n            // only keep params that exist in the resolved location\r\n            // TODO: only keep optional params coming from a parent record\r\n            matcher.keys.filter(k => !k.optional).map(k => k.name)), location.params);\r\n            // throws if cannot be stringified\r\n            path = matcher.stringify(params);\r\n        }\r\n        else if ('path' in location) {\r\n            // no need to resolve the path with the matcher as it was provided\r\n            // this also allows the user to control the encoding\r\n            path = location.path;\r\n            if ((process.env.NODE_ENV !== 'production') && !path.startsWith('/')) {\r\n                warn(`The Matcher cannot resolve relative paths but received \"${path}\". Unless you directly called \\`matcher.resolve(\"${path}\")\\`, this is probably a bug in vue-router. Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-router-next.`);\r\n            }\r\n            matcher = matchers.find(m => m.re.test(path));\r\n            // matcher should have a value after the loop\r\n            if (matcher) {\r\n                // TODO: dev warning of unused params if provided\r\n                // we know the matcher works because we tested the regexp\r\n                params = matcher.parse(path);\r\n                name = matcher.record.name;\r\n            }\r\n            // location is a relative path\r\n        }\r\n        else {\r\n            // match by name or path of current route\r\n            matcher = currentLocation.name\r\n                ? matcherMap.get(currentLocation.name)\r\n                : matchers.find(m => m.re.test(currentLocation.path));\r\n            if (!matcher)\r\n                throw createRouterError(1 /* MATCHER_NOT_FOUND */, {\r\n                    location,\r\n                    currentLocation,\r\n                });\r\n            name = matcher.record.name;\r\n            // since we are navigating to the same location, we don't need to pick the\r\n            // params like when `name` is provided\r\n            params = assign({}, currentLocation.params, location.params);\r\n            path = matcher.stringify(params);\r\n        }\r\n        const matched = [];\r\n        let parentMatcher = matcher;\r\n        while (parentMatcher) {\r\n            // reversed order so parents are at the beginning\r\n            matched.unshift(parentMatcher.record);\r\n            parentMatcher = parentMatcher.parent;\r\n        }\r\n        return {\r\n            name,\r\n            path,\r\n            params,\r\n            matched,\r\n            meta: mergeMetaFields(matched),\r\n        };\r\n    }\r\n    // add initial routes\r\n    routes.forEach(route => addRoute(route));\r\n    return { addRoute, resolve, removeRoute, getRoutes, getRecordMatcher };\r\n}\r\nfunction paramsFromLocation(params, keys) {\r\n    let newParams = {};\r\n    for (let key of keys) {\r\n        if (key in params)\r\n            newParams[key] = params[key];\r\n    }\r\n    return newParams;\r\n}\r\n/**\r\n * Normalizes a RouteRecordRaw. Creates a copy\r\n *\r\n * @param record\r\n * @returns the normalized version\r\n */\r\nfunction normalizeRouteRecord(record) {\r\n    return {\r\n        path: record.path,\r\n        redirect: record.redirect,\r\n        name: record.name,\r\n        meta: record.meta || {},\r\n        aliasOf: undefined,\r\n        beforeEnter: record.beforeEnter,\r\n        props: normalizeRecordProps(record),\r\n        children: record.children || [],\r\n        instances: {},\r\n        leaveGuards: new Set(),\r\n        updateGuards: new Set(),\r\n        enterCallbacks: {},\r\n        components: 'components' in record\r\n            ? record.components || {}\r\n            : { default: record.component },\r\n    };\r\n}\r\n/**\r\n * Normalize the optional `props` in a record to always be an object similar to\r\n * components. Also accept a boolean for components.\r\n * @param record\r\n */\r\nfunction normalizeRecordProps(record) {\r\n    const propsObject = {};\r\n    // props does not exist on redirect records but we can set false directly\r\n    const props = record.props || false;\r\n    if ('component' in record) {\r\n        propsObject.default = props;\r\n    }\r\n    else {\r\n        // NOTE: we could also allow a function to be applied to every component.\r\n        // Would need user feedback for use cases\r\n        for (let name in record.components)\r\n            propsObject[name] = typeof props === 'boolean' ? props : props[name];\r\n    }\r\n    return propsObject;\r\n}\r\n/**\r\n * Checks if a record or any of its parent is an alias\r\n * @param record\r\n */\r\nfunction isAliasRecord(record) {\r\n    while (record) {\r\n        if (record.record.aliasOf)\r\n            return true;\r\n        record = record.parent;\r\n    }\r\n    return false;\r\n}\r\n/**\r\n * Merge meta fields of an array of records\r\n *\r\n * @param matched - array of matched records\r\n */\r\nfunction mergeMetaFields(matched) {\r\n    return matched.reduce((meta, record) => assign(meta, record.meta), {});\r\n}\r\nfunction mergeOptions(defaults, partialOptions) {\r\n    let options = {};\r\n    for (let key in defaults) {\r\n        options[key] =\r\n            key in partialOptions ? partialOptions[key] : defaults[key];\r\n    }\r\n    return options;\r\n}\r\nfunction isSameParam(a, b) {\r\n    return (a.name === b.name &&\r\n        a.optional === b.optional &&\r\n        a.repeatable === b.repeatable);\r\n}\r\n/**\r\n * Check if a path and its alias have the same required params\r\n *\r\n * @param a - original record\r\n * @param b - alias record\r\n */\r\nfunction checkSameParams(a, b) {\r\n    for (let key of a.keys) {\r\n        if (!key.optional && !b.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n    for (let key of b.keys) {\r\n        if (!key.optional && !a.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Alias \"${b.record.path}\" and the original record: \"${a.record.path}\" should have the exact same param named \"${key.name}\"`);\r\n    }\r\n}\r\nfunction checkMissingParamsInAbsolutePath(record, parent) {\r\n    for (let key of parent.keys) {\r\n        if (!record.keys.find(isSameParam.bind(null, key)))\r\n            return warn(`Absolute path \"${record.record.path}\" should have the exact same param named \"${key.name}\" as its parent \"${parent.record.path}\".`);\r\n    }\r\n}\n\n/**\r\n * Encoding Rules ␣ = Space Path: ␣ \" < > # ? { } Query: ␣ \" < > # & = Hash: ␣ \"\r\n * < > `\r\n *\r\n * On top of that, the RFC3986 (https://tools.ietf.org/html/rfc3986#section-2.2)\r\n * defines some extra characters to be encoded. Most browsers do not encode them\r\n * in encodeURI https://github.com/whatwg/url/issues/369, so it may be safer to\r\n * also encode `!'()*`. Leaving unencoded only ASCII alphanumeric(`a-zA-Z0-9`)\r\n * plus `-._~`. This extra safety should be applied to query by patching the\r\n * string returned by encodeURIComponent encodeURI also encodes `[\\]^`. `\\`\r\n * should be encoded to avoid ambiguity. Browsers (IE, FF, C) transform a `\\`\r\n * into a `/` if directly typed in. The _backtick_ (`````) should also be\r\n * encoded everywhere because some browsers like FF encode it when directly\r\n * written while others don't. Safari and IE don't encode ``\"<>{}``` in hash.\r\n */\r\n// const EXTRA_RESERVED_RE = /[!'()*]/g\r\n// const encodeReservedReplacer = (c: string) => '%' + c.charCodeAt(0).toString(16)\r\nconst HASH_RE = /#/g; // %23\r\nconst AMPERSAND_RE = /&/g; // %26\r\nconst SLASH_RE = /\\//g; // %2F\r\nconst EQUAL_RE = /=/g; // %3D\r\nconst IM_RE = /\\?/g; // %3F\r\nconst PLUS_RE = /\\+/g; // %2B\r\n/**\r\n * NOTE: It's not clear to me if we should encode the + symbol in queries, it\r\n * seems to be less flexible than not doing so and I can't find out the legacy\r\n * systems requiring this for regular requests like text/html. In the standard,\r\n * the encoding of the plus character is only mentioned for\r\n * application/x-www-form-urlencoded\r\n * (https://url.spec.whatwg.org/#urlencoded-parsing) and most browsers seems lo\r\n * leave the plus character as is in queries. To be more flexible, we allow the\r\n * plus character on the query but it can also be manually encoded by the user.\r\n *\r\n * Resources:\r\n * - https://url.spec.whatwg.org/#urlencoded-parsing\r\n * - https://stackoverflow.com/questions/1634271/url-encoding-the-space-character-or-20\r\n */\r\nconst ENC_BRACKET_OPEN_RE = /%5B/g; // [\r\nconst ENC_BRACKET_CLOSE_RE = /%5D/g; // ]\r\nconst ENC_CARET_RE = /%5E/g; // ^\r\nconst ENC_BACKTICK_RE = /%60/g; // `\r\nconst ENC_CURLY_OPEN_RE = /%7B/g; // {\r\nconst ENC_PIPE_RE = /%7C/g; // |\r\nconst ENC_CURLY_CLOSE_RE = /%7D/g; // }\r\nconst ENC_SPACE_RE = /%20/g; // }\r\n/**\r\n * Encode characters that need to be encoded on the path, search and hash\r\n * sections of the URL.\r\n *\r\n * @internal\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction commonEncode(text) {\r\n    return encodeURI('' + text)\r\n        .replace(ENC_PIPE_RE, '|')\r\n        .replace(ENC_BRACKET_OPEN_RE, '[')\r\n        .replace(ENC_BRACKET_CLOSE_RE, ']');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the hash section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeHash(text) {\r\n    return commonEncode(text)\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^');\r\n}\r\n/**\r\n * Encode characters that need to be encoded query values on the query\r\n * section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeQueryValue(text) {\r\n    return (commonEncode(text)\r\n        // Encode the space as +, encode the + to differentiate it from the space\r\n        .replace(PLUS_RE, '%2B')\r\n        .replace(ENC_SPACE_RE, '+')\r\n        .replace(HASH_RE, '%23')\r\n        .replace(AMPERSAND_RE, '%26')\r\n        .replace(ENC_BACKTICK_RE, '`')\r\n        .replace(ENC_CURLY_OPEN_RE, '{')\r\n        .replace(ENC_CURLY_CLOSE_RE, '}')\r\n        .replace(ENC_CARET_RE, '^'));\r\n}\r\n/**\r\n * Like `encodeQueryValue` but also encodes the `=` character.\r\n *\r\n * @param text - string to encode\r\n */\r\nfunction encodeQueryKey(text) {\r\n    return encodeQueryValue(text).replace(EQUAL_RE, '%3D');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodePath(text) {\r\n    return commonEncode(text).replace(HASH_RE, '%23').replace(IM_RE, '%3F');\r\n}\r\n/**\r\n * Encode characters that need to be encoded on the path section of the URL as a\r\n * param. This function encodes everything {@link encodePath} does plus the\r\n * slash (`/`) character.\r\n *\r\n * @param text - string to encode\r\n * @returns encoded string\r\n */\r\nfunction encodeParam(text) {\r\n    return encodePath(text).replace(SLASH_RE, '%2F');\r\n}\r\n/**\r\n * Decode text using `decodeURIComponent`. Returns the original text if it\r\n * fails.\r\n *\r\n * @param text - string to decode\r\n * @returns decoded string\r\n */\r\nfunction decode(text) {\r\n    try {\r\n        return decodeURIComponent('' + text);\r\n    }\r\n    catch (err) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`Error decoding \"${text}\". Using original value`);\r\n    }\r\n    return '' + text;\r\n}\n\n/**\r\n * Transforms a queryString into a {@link LocationQuery} object. Accept both, a\r\n * version with the leading `?` and without Should work as URLSearchParams\r\n\n * @internal\r\n *\r\n * @param search - search string to parse\r\n * @returns a query object\r\n */\r\nfunction parseQuery(search) {\r\n    const query = {};\r\n    // avoid creating an object with an empty key and empty value\r\n    // because of split('&')\r\n    if (search === '' || search === '?')\r\n        return query;\r\n    const hasLeadingIM = search[0] === '?';\r\n    const searchParams = (hasLeadingIM ? search.slice(1) : search).split('&');\r\n    for (let i = 0; i < searchParams.length; ++i) {\r\n        // pre decode the + into space\r\n        const searchParam = searchParams[i].replace(PLUS_RE, ' ');\r\n        // allow the = character\r\n        let eqPos = searchParam.indexOf('=');\r\n        let key = decode(eqPos < 0 ? searchParam : searchParam.slice(0, eqPos));\r\n        let value = eqPos < 0 ? null : decode(searchParam.slice(eqPos + 1));\r\n        if (key in query) {\r\n            // an extra variable for ts types\r\n            let currentValue = query[key];\r\n            if (!Array.isArray(currentValue)) {\r\n                currentValue = query[key] = [currentValue];\r\n            }\r\n            currentValue.push(value);\r\n        }\r\n        else {\r\n            query[key] = value;\r\n        }\r\n    }\r\n    return query;\r\n}\r\n/**\r\n * Stringifies a {@link LocationQueryRaw} object. Like `URLSearchParams`, it\r\n * doesn't prepend a `?`\r\n *\r\n * @internal\r\n *\r\n * @param query - query object to stringify\r\n * @returns string version of the query without the leading `?`\r\n */\r\nfunction stringifyQuery(query) {\r\n    let search = '';\r\n    for (let key in query) {\r\n        const value = query[key];\r\n        key = encodeQueryKey(key);\r\n        if (value == null) {\r\n            // only null adds the value\r\n            if (value !== undefined) {\r\n                search += (search.length ? '&' : '') + key;\r\n            }\r\n            continue;\r\n        }\r\n        // keep null values\r\n        let values = Array.isArray(value)\r\n            ? value.map(v => v && encodeQueryValue(v))\r\n            : [value && encodeQueryValue(value)];\r\n        values.forEach(value => {\r\n            // skip undefined values in arrays as if they were not present\r\n            // smaller code than using filter\r\n            if (value !== undefined) {\r\n                // only append & with non-empty search\r\n                search += (search.length ? '&' : '') + key;\r\n                if (value != null)\r\n                    search += '=' + value;\r\n            }\r\n        });\r\n    }\r\n    return search;\r\n}\r\n/**\r\n * Transforms a {@link LocationQueryRaw} into a {@link LocationQuery} by casting\r\n * numbers into strings, removing keys with an undefined value and replacing\r\n * undefined with null in arrays\r\n *\r\n * @param query - query object to normalize\r\n * @returns a normalized query object\r\n */\r\nfunction normalizeQuery(query) {\r\n    const normalizedQuery = {};\r\n    for (let key in query) {\r\n        let value = query[key];\r\n        if (value !== undefined) {\r\n            normalizedQuery[key] = Array.isArray(value)\r\n                ? value.map(v => (v == null ? null : '' + v))\r\n                : value == null\r\n                    ? value\r\n                    : '' + value;\r\n        }\r\n    }\r\n    return normalizedQuery;\r\n}\n\n/**\r\n * Create a list of callbacks that can be reset. Used to create before and after navigation guards list\r\n */\r\nfunction useCallbacks() {\r\n    let handlers = [];\r\n    function add(handler) {\r\n        handlers.push(handler);\r\n        return () => {\r\n            const i = handlers.indexOf(handler);\r\n            if (i > -1)\r\n                handlers.splice(i, 1);\r\n        };\r\n    }\r\n    function reset() {\r\n        handlers = [];\r\n    }\r\n    return {\r\n        add,\r\n        list: () => handlers,\r\n        reset,\r\n    };\r\n}\n\nfunction registerGuard(record, name, guard) {\r\n    const removeFromList = () => {\r\n        record[name].delete(guard);\r\n    };\r\n    onUnmounted(removeFromList);\r\n    onDeactivated(removeFromList);\r\n    onActivated(() => {\r\n        record[name].add(guard);\r\n    });\r\n    record[name].add(guard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the component for the current\r\n * location is about to be left. Similar to {@link beforeRouteLeave} but can be\r\n * used in any component. The guard is removed when the component is unmounted.\r\n *\r\n * @param leaveGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteLeave(leaveGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteLeave() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'leaveGuards', leaveGuard);\r\n}\r\n/**\r\n * Add a navigation guard that triggers whenever the current location is about\r\n * to be updated. Similar to {@link beforeRouteUpdate} but can be used in any\r\n * component. The guard is removed when the component is unmounted.\r\n *\r\n * @param updateGuard - {@link NavigationGuard}\r\n */\r\nfunction onBeforeRouteUpdate(updateGuard) {\r\n    if ((process.env.NODE_ENV !== 'production') && !getCurrentInstance()) {\r\n        warn('getCurrentInstance() returned null. onBeforeRouteUpdate() must be called at the top of a setup function');\r\n        return;\r\n    }\r\n    const activeRecord = inject(matchedRouteKey, {}).value;\r\n    if (!activeRecord) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn('No active route record was found. Are you missing a <router-view> component?');\r\n        return;\r\n    }\r\n    registerGuard(activeRecord, 'updateGuards', updateGuard);\r\n}\r\nfunction guardToPromiseFn(guard, to, from, record, name) {\r\n    // keep a reference to the enterCallbackArray to prevent pushing callbacks if a new navigation took place\r\n    const enterCallbackArray = record &&\r\n        // name is defined if record is because of the function overload\r\n        (record.enterCallbacks[name] = record.enterCallbacks[name] || []);\r\n    return () => new Promise((resolve, reject) => {\r\n        const next = (valid) => {\r\n            if (valid === false)\r\n                reject(createRouterError(4 /* NAVIGATION_ABORTED */, {\r\n                    from,\r\n                    to,\r\n                }));\r\n            else if (valid instanceof Error) {\r\n                reject(valid);\r\n            }\r\n            else if (isRouteLocation(valid)) {\r\n                reject(createRouterError(2 /* NAVIGATION_GUARD_REDIRECT */, {\r\n                    from: to,\r\n                    to: valid,\r\n                }));\r\n            }\r\n            else {\r\n                if (enterCallbackArray &&\r\n                    // since enterCallbackArray is truthy, both record and name also are\r\n                    record.enterCallbacks[name] === enterCallbackArray &&\r\n                    typeof valid === 'function')\r\n                    enterCallbackArray.push(valid);\r\n                resolve();\r\n            }\r\n        };\r\n        // wrapping with Promise.resolve allows it to work with both async and sync guards\r\n        const guardReturn = guard.call(record && record.instances[name], to, from, (process.env.NODE_ENV !== 'production') ? canOnlyBeCalledOnce(next, to, from) : next);\r\n        let guardCall = Promise.resolve(guardReturn);\r\n        if (guard.length < 3)\r\n            guardCall = guardCall.then(next);\r\n        if ((process.env.NODE_ENV !== 'production') && guard.length > 2) {\r\n            const message = `The \"next\" callback was never called inside of ${guard.name ? '\"' + guard.name + '\"' : ''}:\\n${guard.toString()}\\n. If you are returning a value instead of calling \"next\", make sure to remove the \"next\" parameter from your function.`;\r\n            if (typeof guardReturn === 'object' && 'then' in guardReturn) {\r\n                guardCall = guardCall.then(resolvedValue => {\r\n                    // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                    if (!next._called) {\r\n                        warn(message);\r\n                        return Promise.reject(new Error('Invalid navigation guard'));\r\n                    }\r\n                    return resolvedValue;\r\n                });\r\n                // TODO: test me!\r\n            }\r\n            else if (guardReturn !== undefined) {\r\n                // @ts-expect-error: _called is added at canOnlyBeCalledOnce\r\n                if (!next._called) {\r\n                    warn(message);\r\n                    reject(new Error('Invalid navigation guard'));\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n        guardCall.catch(err => reject(err));\r\n    });\r\n}\r\nfunction canOnlyBeCalledOnce(next, to, from) {\r\n    let called = 0;\r\n    return function () {\r\n        if (called++ === 1)\r\n            warn(`The \"next\" callback was called more than once in one navigation guard when going from \"${from.fullPath}\" to \"${to.fullPath}\". It should be called exactly one time in each navigation guard. This will fail in production.`);\r\n        // @ts-expect-error: we put it in the original one because it's easier to check\r\n        next._called = true;\r\n        if (called === 1)\r\n            next.apply(null, arguments);\r\n    };\r\n}\r\nfunction extractComponentsGuards(matched, guardType, to, from) {\r\n    const guards = [];\r\n    for (const record of matched) {\r\n        for (const name in record.components) {\r\n            let rawComponent = record.components[name];\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!rawComponent ||\r\n                    (typeof rawComponent !== 'object' &&\r\n                        typeof rawComponent !== 'function')) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is not` +\r\n                        ` a valid component. Received \"${String(rawComponent)}\".`);\r\n                    // throw to ensure we stop here but warn to ensure the message isn't\r\n                    // missed by the user\r\n                    throw new Error('Invalid route component');\r\n                }\r\n                else if ('then' in rawComponent) {\r\n                    // warn if user wrote import('/component.vue') instead of () =>\r\n                    // import('./component.vue')\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a ` +\r\n                        `Promise instead of a function that returns a Promise. Did you ` +\r\n                        `write \"import('./MyPage.vue')\" instead of ` +\r\n                        `\"() => import('./MyPage.vue')\" ? This will break in ` +\r\n                        `production if not fixed.`);\r\n                    let promise = rawComponent;\r\n                    rawComponent = () => promise;\r\n                }\r\n                else if (rawComponent.__asyncLoader &&\r\n                    // warn only once per component\r\n                    !rawComponent.__warnedDefineAsync) {\r\n                    rawComponent.__warnedDefineAsync = true;\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is defined ` +\r\n                        `using \"defineAsyncComponent()\". ` +\r\n                        `Write \"() => import('./MyPage.vue')\" instead of ` +\r\n                        `\"defineAsyncComponent(() => import('./MyPage.vue'))\".`);\r\n                }\r\n            }\r\n            // skip update and leave guards if the route component is not mounted\r\n            if (guardType !== 'beforeRouteEnter' && !record.instances[name])\r\n                continue;\r\n            if (isRouteComponent(rawComponent)) {\r\n                // __vccOpts is added by vue-class-component and contain the regular options\r\n                let options = rawComponent.__vccOpts || rawComponent;\r\n                const guard = options[guardType];\r\n                guard && guards.push(guardToPromiseFn(guard, to, from, record, name));\r\n            }\r\n            else {\r\n                // start requesting the chunk already\r\n                let componentPromise = rawComponent();\r\n                if ((process.env.NODE_ENV !== 'production') && !('catch' in componentPromise)) {\r\n                    warn(`Component \"${name}\" in record with path \"${record.path}\" is a function that does not return a Promise. If you were passing a functional component, make sure to add a \"displayName\" to the component. This will break in production if not fixed.`);\r\n                    componentPromise = Promise.resolve(componentPromise);\r\n                }\r\n                guards.push(() => componentPromise.then(resolved => {\r\n                    if (!resolved)\r\n                        return Promise.reject(new Error(`Couldn't resolve component \"${name}\" at \"${record.path}\"`));\r\n                    const resolvedComponent = isESModule(resolved)\r\n                        ? resolved.default\r\n                        : resolved;\r\n                    // replace the function with the resolved component\r\n                    record.components[name] = resolvedComponent;\r\n                    // __vccOpts is added by vue-class-component and contain the regular options\r\n                    let options = resolvedComponent.__vccOpts || resolvedComponent;\r\n                    const guard = options[guardType];\r\n                    return guard && guardToPromiseFn(guard, to, from, record, name)();\r\n                }));\r\n            }\r\n        }\r\n    }\r\n    return guards;\r\n}\r\n/**\r\n * Allows differentiating lazy components from functional components and vue-class-component\r\n * @param component\r\n */\r\nfunction isRouteComponent(component) {\r\n    return (typeof component === 'object' ||\r\n        'displayName' in component ||\r\n        'props' in component ||\r\n        '__vccOpts' in component);\r\n}\n\n// TODO: we could allow currentRoute as a prop to expose `isActive` and\r\n// `isExactActive` behavior should go through an RFC\r\nfunction useLink(props) {\r\n    const router = inject(routerKey);\r\n    const currentRoute = inject(routeLocationKey);\r\n    const route = computed(() => router.resolve(unref(props.to)));\r\n    const activeRecordIndex = computed(() => {\r\n        let { matched } = route.value;\r\n        let { length } = matched;\r\n        const routeMatched = matched[length - 1];\r\n        let currentMatched = currentRoute.matched;\r\n        if (!routeMatched || !currentMatched.length)\r\n            return -1;\r\n        let index = currentMatched.findIndex(isSameRouteRecord.bind(null, routeMatched));\r\n        if (index > -1)\r\n            return index;\r\n        // possible parent record\r\n        let parentRecordPath = getOriginalPath(matched[length - 2]);\r\n        return (\r\n        // we are dealing with nested routes\r\n        length > 1 &&\r\n            // if the parent and matched route have the same path, this link is\r\n            // referring to the empty child. Or we currently are on a different\r\n            // child of the same parent\r\n            getOriginalPath(routeMatched) === parentRecordPath &&\r\n            // avoid comparing the child with its parent\r\n            currentMatched[currentMatched.length - 1].path !== parentRecordPath\r\n            ? currentMatched.findIndex(isSameRouteRecord.bind(null, matched[length - 2]))\r\n            : index);\r\n    });\r\n    const isActive = computed(() => activeRecordIndex.value > -1 &&\r\n        includesParams(currentRoute.params, route.value.params));\r\n    const isExactActive = computed(() => activeRecordIndex.value > -1 &&\r\n        activeRecordIndex.value === currentRoute.matched.length - 1 &&\r\n        isSameRouteLocationParams(currentRoute.params, route.value.params));\r\n    function navigate(e = {}) {\r\n        if (guardEvent(e)) {\r\n            return router[unref(props.replace) ? 'replace' : 'push'](unref(props.to)\r\n            // avoid uncaught errors are they are logged anyway\r\n            ).catch(noop);\r\n        }\r\n        return Promise.resolve();\r\n    }\r\n    // devtools only\r\n    if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n        const instance = getCurrentInstance();\r\n        if (instance) {\r\n            const linkContextDevtools = {\r\n                route: route.value,\r\n                isActive: isActive.value,\r\n                isExactActive: isExactActive.value,\r\n            };\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools = instance.__vrl_devtools || [];\r\n            // @ts-expect-error: this is internal\r\n            instance.__vrl_devtools.push(linkContextDevtools);\r\n            watchEffect(() => {\r\n                linkContextDevtools.route = route.value;\r\n                linkContextDevtools.isActive = isActive.value;\r\n                linkContextDevtools.isExactActive = isExactActive.value;\r\n            }, { flush: 'post' });\r\n        }\r\n    }\r\n    return {\r\n        route,\r\n        href: computed(() => route.value.href),\r\n        isActive,\r\n        isExactActive,\r\n        navigate,\r\n    };\r\n}\r\nconst RouterLinkImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterLink',\r\n    props: {\r\n        to: {\r\n            type: [String, Object],\r\n            required: true,\r\n        },\r\n        replace: Boolean,\r\n        activeClass: String,\r\n        // inactiveClass: String,\r\n        exactActiveClass: String,\r\n        custom: Boolean,\r\n        ariaCurrentValue: {\r\n            type: String,\r\n            default: 'page',\r\n        },\r\n    },\r\n    useLink,\r\n    setup(props, { slots }) {\r\n        const link = reactive(useLink(props));\r\n        const { options } = inject(routerKey);\r\n        const elClass = computed(() => ({\r\n            [getLinkClass(props.activeClass, options.linkActiveClass, 'router-link-active')]: link.isActive,\r\n            // [getLinkClass(\r\n            //   props.inactiveClass,\r\n            //   options.linkInactiveClass,\r\n            //   'router-link-inactive'\r\n            // )]: !link.isExactActive,\r\n            [getLinkClass(props.exactActiveClass, options.linkExactActiveClass, 'router-link-exact-active')]: link.isExactActive,\r\n        }));\r\n        return () => {\r\n            const children = slots.default && slots.default(link);\r\n            return props.custom\r\n                ? children\r\n                : h('a', {\r\n                    'aria-current': link.isExactActive\r\n                        ? props.ariaCurrentValue\r\n                        : null,\r\n                    href: link.href,\r\n                    // this would override user added attrs but Vue will still add\r\n                    // the listener so we end up triggering both\r\n                    onClick: link.navigate,\r\n                    class: elClass.value,\r\n                }, children);\r\n        };\r\n    },\r\n});\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to render a link that triggers a navigation on click.\r\n */\r\nconst RouterLink = RouterLinkImpl;\r\nfunction guardEvent(e) {\r\n    // don't redirect with control keys\r\n    if (e.metaKey || e.altKey || e.ctrlKey || e.shiftKey)\r\n        return;\r\n    // don't redirect when preventDefault called\r\n    if (e.defaultPrevented)\r\n        return;\r\n    // don't redirect on right click\r\n    if (e.button !== undefined && e.button !== 0)\r\n        return;\r\n    // don't redirect if `target=\"_blank\"`\r\n    // @ts-expect-error getAttribute does exist\r\n    if (e.currentTarget && e.currentTarget.getAttribute) {\r\n        // @ts-expect-error getAttribute exists\r\n        const target = e.currentTarget.getAttribute('target');\r\n        if (/\\b_blank\\b/i.test(target))\r\n            return;\r\n    }\r\n    // this may be a Weex event which doesn't have this method\r\n    if (e.preventDefault)\r\n        e.preventDefault();\r\n    return true;\r\n}\r\nfunction includesParams(outer, inner) {\r\n    for (let key in inner) {\r\n        let innerValue = inner[key];\r\n        let outerValue = outer[key];\r\n        if (typeof innerValue === 'string') {\r\n            if (innerValue !== outerValue)\r\n                return false;\r\n        }\r\n        else {\r\n            if (!Array.isArray(outerValue) ||\r\n                outerValue.length !== innerValue.length ||\r\n                innerValue.some((value, i) => value !== outerValue[i]))\r\n                return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n/**\r\n * Get the original path value of a record by following its aliasOf\r\n * @param record\r\n */\r\nfunction getOriginalPath(record) {\r\n    return record ? (record.aliasOf ? record.aliasOf.path : record.path) : '';\r\n}\r\n/**\r\n * Utility class to get the active class based on defaults.\r\n * @param propClass\r\n * @param globalClass\r\n * @param defaultClass\r\n */\r\nconst getLinkClass = (propClass, globalClass, defaultClass) => propClass != null\r\n    ? propClass\r\n    : globalClass != null\r\n        ? globalClass\r\n        : defaultClass;\n\nconst RouterViewImpl = /*#__PURE__*/ defineComponent({\r\n    name: 'RouterView',\r\n    // #674 we manually inherit them\r\n    inheritAttrs: false,\r\n    props: {\r\n        name: {\r\n            type: String,\r\n            default: 'default',\r\n        },\r\n        route: Object,\r\n    },\r\n    setup(props, { attrs, slots }) {\r\n        (process.env.NODE_ENV !== 'production') && warnDeprecatedUsage();\r\n        const injectedRoute = inject(routerViewLocationKey);\r\n        const routeToDisplay = computed(() => props.route || injectedRoute.value);\r\n        const depth = inject(viewDepthKey, 0);\r\n        const matchedRouteRef = computed(() => routeToDisplay.value.matched[depth]);\r\n        provide(viewDepthKey, depth + 1);\r\n        provide(matchedRouteKey, matchedRouteRef);\r\n        provide(routerViewLocationKey, routeToDisplay);\r\n        const viewRef = ref();\r\n        // watch at the same time the component instance, the route record we are\r\n        // rendering, and the name\r\n        watch(() => [viewRef.value, matchedRouteRef.value, props.name], ([instance, to, name], [oldInstance, from, oldName]) => {\r\n            // copy reused instances\r\n            if (to) {\r\n                // this will update the instance for new instances as well as reused\r\n                // instances when navigating to a new route\r\n                to.instances[name] = instance;\r\n                // the component instance is reused for a different route or name so\r\n                // we copy any saved update or leave guards. With async setup, the\r\n                // mounting component will mount before the matchedRoute changes,\r\n                // making instance === oldInstance, so we check if guards have been\r\n                // added before. This works because we remove guards when\r\n                // unmounting/deactivating components\r\n                if (from && from !== to && instance && instance === oldInstance) {\r\n                    if (!to.leaveGuards.size) {\r\n                        to.leaveGuards = from.leaveGuards;\r\n                    }\r\n                    if (!to.updateGuards.size) {\r\n                        to.updateGuards = from.updateGuards;\r\n                    }\r\n                }\r\n            }\r\n            // trigger beforeRouteEnter next callbacks\r\n            if (instance &&\r\n                to &&\r\n                // if there is no instance but to and from are the same this might be\r\n                // the first visit\r\n                (!from || !isSameRouteRecord(to, from) || !oldInstance)) {\r\n                (to.enterCallbacks[name] || []).forEach(callback => callback(instance));\r\n            }\r\n        }, { flush: 'post' });\r\n        return () => {\r\n            const route = routeToDisplay.value;\r\n            const matchedRoute = matchedRouteRef.value;\r\n            const ViewComponent = matchedRoute && matchedRoute.components[props.name];\r\n            // we need the value at the time we render because when we unmount, we\r\n            // navigated to a different location so the value is different\r\n            const currentName = props.name;\r\n            if (!ViewComponent) {\r\n                return normalizeSlot(slots.default, { Component: ViewComponent, route });\r\n            }\r\n            // props from route configuration\r\n            const routePropsOption = matchedRoute.props[props.name];\r\n            const routeProps = routePropsOption\r\n                ? routePropsOption === true\r\n                    ? route.params\r\n                    : typeof routePropsOption === 'function'\r\n                        ? routePropsOption(route)\r\n                        : routePropsOption\r\n                : null;\r\n            const onVnodeUnmounted = vnode => {\r\n                // remove the instance reference to prevent leak\r\n                if (vnode.component.isUnmounted) {\r\n                    matchedRoute.instances[currentName] = null;\r\n                }\r\n            };\r\n            const component = h(ViewComponent, assign({}, routeProps, attrs, {\r\n                onVnodeUnmounted,\r\n                ref: viewRef,\r\n            }));\r\n            return (\r\n            // pass the vnode to the slot as a prop.\r\n            // h and <component :is=\"...\"> both accept vnodes\r\n            normalizeSlot(slots.default, { Component: component, route }) ||\r\n                component);\r\n        };\r\n    },\r\n});\r\nfunction normalizeSlot(slot, data) {\r\n    if (!slot)\r\n        return null;\r\n    const slotContent = slot(data);\r\n    return slotContent.length === 1 ? slotContent[0] : slotContent;\r\n}\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\n/**\r\n * Component to display the current route the user is at.\r\n */\r\nconst RouterView = RouterViewImpl;\r\n// warn against deprecated usage with <transition> & <keep-alive>\r\n// due to functional component being no longer eager in Vue 3\r\nfunction warnDeprecatedUsage() {\r\n    const instance = getCurrentInstance();\r\n    const parentName = instance.parent && instance.parent.type.name;\r\n    if (parentName &&\r\n        (parentName === 'KeepAlive' || parentName.includes('Transition'))) {\r\n        const comp = parentName === 'KeepAlive' ? 'keep-alive' : 'transition';\r\n        warn(`<router-view> can no longer be used directly inside <transition> or <keep-alive>.\\n` +\r\n            `Use slot props instead:\\n\\n` +\r\n            `<router-view v-slot=\"{ Component }\">\\n` +\r\n            `  <${comp}>\\n` +\r\n            `    <component :is=\"Component\" />\\n` +\r\n            `  </${comp}>\\n` +\r\n            `</router-view>`);\r\n    }\r\n}\n\nfunction formatRouteLocation(routeLocation, tooltip) {\r\n    const copy = assign({}, routeLocation, {\r\n        // remove variables that can contain vue instances\r\n        matched: routeLocation.matched.map(matched => omit(matched, ['instances', 'children', 'aliasOf'])),\r\n    });\r\n    return {\r\n        _custom: {\r\n            type: null,\r\n            readOnly: true,\r\n            display: routeLocation.fullPath,\r\n            tooltip,\r\n            value: copy,\r\n        },\r\n    };\r\n}\r\nfunction formatDisplay(display) {\r\n    return {\r\n        _custom: {\r\n            display,\r\n        },\r\n    };\r\n}\r\n// to support multiple router instances\r\nlet routerId = 0;\r\nfunction addDevtools(app, router, matcher) {\r\n    // Take over router.beforeEach and afterEach\r\n    // make sure we are not registering the devtool twice\r\n    if (router.__hasDevtools)\r\n        return;\r\n    router.__hasDevtools = true;\r\n    // increment to support multiple router instances\r\n    const id = routerId++;\r\n    setupDevtoolsPlugin({\r\n        id: 'org.vuejs.router' + (id ? '.' + id : ''),\r\n        label: 'Vue Router',\r\n        packageName: 'vue-router',\r\n        homepage: 'https://next.router.vuejs.org/',\r\n        logo: 'https://vuejs.org/images/icons/favicon-96x96.png',\r\n        componentStateTypes: ['Routing'],\r\n        app,\r\n    }, api => {\r\n        // display state added by the router\r\n        api.on.inspectComponent((payload, ctx) => {\r\n            if (payload.instanceData) {\r\n                payload.instanceData.state.push({\r\n                    type: 'Routing',\r\n                    key: '$route',\r\n                    editable: false,\r\n                    value: formatRouteLocation(router.currentRoute.value, 'Current Route'),\r\n                });\r\n            }\r\n        });\r\n        // mark router-link as active\r\n        api.on.visitComponentTree(({ treeNode: node, componentInstance }) => {\r\n            // if multiple useLink are used\r\n            if (Array.isArray(componentInstance.__vrl_devtools)) {\r\n                componentInstance.__devtoolsApi = api;\r\n                componentInstance.__vrl_devtools.forEach(devtoolsData => {\r\n                    let backgroundColor = ORANGE_400;\r\n                    let tooltip = '';\r\n                    if (devtoolsData.isExactActive) {\r\n                        backgroundColor = LIME_500;\r\n                        tooltip = 'This is exactly active';\r\n                    }\r\n                    else if (devtoolsData.isActive) {\r\n                        backgroundColor = BLUE_600;\r\n                        tooltip = 'This link is active';\r\n                    }\r\n                    node.tags.push({\r\n                        label: devtoolsData.route.path,\r\n                        textColor: 0,\r\n                        tooltip,\r\n                        backgroundColor,\r\n                    });\r\n                });\r\n            }\r\n        });\r\n        watch(router.currentRoute, () => {\r\n            // refresh active state\r\n            refreshRoutesView();\r\n            api.notifyComponentUpdate();\r\n            api.sendInspectorTree(routerInspectorId);\r\n            api.sendInspectorState(routerInspectorId);\r\n        });\r\n        const navigationsLayerId = 'router:navigations:' + id;\r\n        api.addTimelineLayer({\r\n            id: navigationsLayerId,\r\n            label: `Router${id ? ' ' + id : ''} Navigations`,\r\n            color: 0x40a8c4,\r\n        });\r\n        // const errorsLayerId = 'router:errors'\r\n        // api.addTimelineLayer({\r\n        //   id: errorsLayerId,\r\n        //   label: 'Router Errors',\r\n        //   color: 0xea5455,\r\n        // })\r\n        router.onError((error, to) => {\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'Error during Navigation',\r\n                    subtitle: to.fullPath,\r\n                    logType: 'error',\r\n                    time: Date.now(),\r\n                    data: { error },\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        // attached to `meta` and used to group events\r\n        let navigationId = 0;\r\n        router.beforeEach((to, from) => {\r\n            const data = {\r\n                guard: formatDisplay('beforeEach'),\r\n                from: formatRouteLocation(from, 'Current Location during this navigation'),\r\n                to: formatRouteLocation(to, 'Target location'),\r\n            };\r\n            // Used to group navigations together, hide from devtools\r\n            Object.defineProperty(to.meta, '__navigationId', {\r\n                value: navigationId++,\r\n            });\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    time: Date.now(),\r\n                    title: 'Start of navigation',\r\n                    subtitle: to.fullPath,\r\n                    data,\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        router.afterEach((to, from, failure) => {\r\n            const data = {\r\n                guard: formatDisplay('afterEach'),\r\n            };\r\n            if (failure) {\r\n                data.failure = {\r\n                    _custom: {\r\n                        type: Error,\r\n                        readOnly: true,\r\n                        display: failure ? failure.message : '',\r\n                        tooltip: 'Navigation Failure',\r\n                        value: failure,\r\n                    },\r\n                };\r\n                data.status = formatDisplay('❌');\r\n            }\r\n            else {\r\n                data.status = formatDisplay('✅');\r\n            }\r\n            // we set here to have the right order\r\n            data.from = formatRouteLocation(from, 'Current Location during this navigation');\r\n            data.to = formatRouteLocation(to, 'Target location');\r\n            api.addTimelineEvent({\r\n                layerId: navigationsLayerId,\r\n                event: {\r\n                    title: 'End of navigation',\r\n                    subtitle: to.fullPath,\r\n                    time: Date.now(),\r\n                    data,\r\n                    logType: failure ? 'warning' : 'default',\r\n                    groupId: to.meta.__navigationId,\r\n                },\r\n            });\r\n        });\r\n        /**\r\n         * Inspector of Existing routes\r\n         */\r\n        const routerInspectorId = 'router-inspector:' + id;\r\n        api.addInspector({\r\n            id: routerInspectorId,\r\n            label: 'Routes' + (id ? ' ' + id : ''),\r\n            icon: 'book',\r\n            treeFilterPlaceholder: 'Search routes',\r\n        });\r\n        function refreshRoutesView() {\r\n            // the routes view isn't active\r\n            if (!activeRoutesPayload)\r\n                return;\r\n            const payload = activeRoutesPayload;\r\n            // children routes will appear as nested\r\n            let routes = matcher.getRoutes().filter(route => !route.parent);\r\n            // reset match state to false\r\n            routes.forEach(resetMatchStateOnRouteRecord);\r\n            // apply a match state if there is a payload\r\n            if (payload.filter) {\r\n                routes = routes.filter(route => \r\n                // save matches state based on the payload\r\n                isRouteMatching(route, payload.filter.toLowerCase()));\r\n            }\r\n            // mark active routes\r\n            routes.forEach(route => markRouteRecordActive(route, router.currentRoute.value));\r\n            payload.rootNodes = routes.map(formatRouteRecordForInspector);\r\n        }\r\n        let activeRoutesPayload;\r\n        api.on.getInspectorTree(payload => {\r\n            activeRoutesPayload = payload;\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                refreshRoutesView();\r\n            }\r\n        });\r\n        /**\r\n         * Display information about the currently selected route record\r\n         */\r\n        api.on.getInspectorState(payload => {\r\n            if (payload.app === app && payload.inspectorId === routerInspectorId) {\r\n                const routes = matcher.getRoutes();\r\n                const route = routes.find(route => route.record.__vd_id === payload.nodeId);\r\n                if (route) {\r\n                    payload.state = {\r\n                        options: formatRouteRecordMatcherForStateInspector(route),\r\n                    };\r\n                }\r\n            }\r\n        });\r\n        api.sendInspectorTree(routerInspectorId);\r\n        api.sendInspectorState(routerInspectorId);\r\n    });\r\n}\r\nfunction modifierForKey(key) {\r\n    if (key.optional) {\r\n        return key.repeatable ? '*' : '?';\r\n    }\r\n    else {\r\n        return key.repeatable ? '+' : '';\r\n    }\r\n}\r\nfunction formatRouteRecordMatcherForStateInspector(route) {\r\n    const { record } = route;\r\n    const fields = [\r\n        { editable: false, key: 'path', value: record.path },\r\n    ];\r\n    if (record.name != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'name',\r\n            value: record.name,\r\n        });\r\n    }\r\n    fields.push({ editable: false, key: 'regexp', value: route.re });\r\n    if (route.keys.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'keys',\r\n            value: {\r\n                _custom: {\r\n                    type: null,\r\n                    readOnly: true,\r\n                    display: route.keys\r\n                        .map(key => `${key.name}${modifierForKey(key)}`)\r\n                        .join(' '),\r\n                    tooltip: 'Param keys',\r\n                    value: route.keys,\r\n                },\r\n            },\r\n        });\r\n    }\r\n    if (record.redirect != null) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'redirect',\r\n            value: record.redirect,\r\n        });\r\n    }\r\n    if (route.alias.length) {\r\n        fields.push({\r\n            editable: false,\r\n            key: 'aliases',\r\n            value: route.alias.map(alias => alias.record.path),\r\n        });\r\n    }\r\n    fields.push({\r\n        key: 'score',\r\n        editable: false,\r\n        value: {\r\n            _custom: {\r\n                type: null,\r\n                readOnly: true,\r\n                display: route.score.map(score => score.join(', ')).join(' | '),\r\n                tooltip: 'Score used to sort routes',\r\n                value: route.score,\r\n            },\r\n        },\r\n    });\r\n    return fields;\r\n}\r\n/**\r\n * Extracted from tailwind palette\r\n */\r\nconst PINK_500 = 0xec4899;\r\nconst BLUE_600 = 0x2563eb;\r\nconst LIME_500 = 0x84cc16;\r\nconst CYAN_400 = 0x22d3ee;\r\nconst ORANGE_400 = 0xfb923c;\r\n// const GRAY_100 = 0xf4f4f5\r\nconst DARK = 0x666666;\r\nfunction formatRouteRecordForInspector(route) {\r\n    const tags = [];\r\n    const { record } = route;\r\n    if (record.name != null) {\r\n        tags.push({\r\n            label: String(record.name),\r\n            textColor: 0,\r\n            backgroundColor: CYAN_400,\r\n        });\r\n    }\r\n    if (record.aliasOf) {\r\n        tags.push({\r\n            label: 'alias',\r\n            textColor: 0,\r\n            backgroundColor: ORANGE_400,\r\n        });\r\n    }\r\n    if (route.__vd_match) {\r\n        tags.push({\r\n            label: 'matches',\r\n            textColor: 0,\r\n            backgroundColor: PINK_500,\r\n        });\r\n    }\r\n    if (route.__vd_exactActive) {\r\n        tags.push({\r\n            label: 'exact',\r\n            textColor: 0,\r\n            backgroundColor: LIME_500,\r\n        });\r\n    }\r\n    if (route.__vd_active) {\r\n        tags.push({\r\n            label: 'active',\r\n            textColor: 0,\r\n            backgroundColor: BLUE_600,\r\n        });\r\n    }\r\n    if (record.redirect) {\r\n        tags.push({\r\n            label: 'redirect: ' +\r\n                (typeof record.redirect === 'string' ? record.redirect : 'Object'),\r\n            textColor: 0xffffff,\r\n            backgroundColor: DARK,\r\n        });\r\n    }\r\n    // add an id to be able to select it. Using the `path` is not possible because\r\n    // empty path children would collide with their parents\r\n    let id = record.__vd_id;\r\n    if (id == null) {\r\n        id = String(routeRecordId++);\r\n        record.__vd_id = id;\r\n    }\r\n    return {\r\n        id,\r\n        label: record.path,\r\n        tags,\r\n        children: route.children.map(formatRouteRecordForInspector),\r\n    };\r\n}\r\n//  incremental id for route records and inspector state\r\nlet routeRecordId = 0;\r\nconst EXTRACT_REGEXP_RE = /^\\/(.*)\\/([a-z]*)$/;\r\nfunction markRouteRecordActive(route, currentRoute) {\r\n    // no route will be active if matched is empty\r\n    // reset the matching state\r\n    const isExactActive = currentRoute.matched.length &&\r\n        isSameRouteRecord(currentRoute.matched[currentRoute.matched.length - 1], route.record);\r\n    route.__vd_exactActive = route.__vd_active = isExactActive;\r\n    if (!isExactActive) {\r\n        route.__vd_active = currentRoute.matched.some(match => isSameRouteRecord(match, route.record));\r\n    }\r\n    route.children.forEach(childRoute => markRouteRecordActive(childRoute, currentRoute));\r\n}\r\nfunction resetMatchStateOnRouteRecord(route) {\r\n    route.__vd_match = false;\r\n    route.children.forEach(resetMatchStateOnRouteRecord);\r\n}\r\nfunction isRouteMatching(route, filter) {\r\n    const found = String(route.re).match(EXTRACT_REGEXP_RE);\r\n    route.__vd_match = false;\r\n    if (!found || found.length < 3) {\r\n        return false;\r\n    }\r\n    // use a regexp without $ at the end to match nested routes better\r\n    const nonEndingRE = new RegExp(found[1].replace(/\\$$/, ''), found[2]);\r\n    if (nonEndingRE.test(filter)) {\r\n        // mark children as matches\r\n        route.children.forEach(child => isRouteMatching(child, filter));\r\n        // exception case: `/`\r\n        if (route.record.path !== '/' || filter === '/') {\r\n            route.__vd_match = route.re.test(filter);\r\n            return true;\r\n        }\r\n        // hide the / route\r\n        return false;\r\n    }\r\n    const path = route.record.path.toLowerCase();\r\n    const decodedPath = decode(path);\r\n    // also allow partial matching on the path\r\n    if (!filter.startsWith('/') &&\r\n        (decodedPath.includes(filter) || path.includes(filter)))\r\n        return true;\r\n    if (decodedPath.startsWith(filter) || path.startsWith(filter))\r\n        return true;\r\n    if (route.record.name && String(route.record.name).includes(filter))\r\n        return true;\r\n    return route.children.some(child => isRouteMatching(child, filter));\r\n}\r\nfunction omit(obj, keys) {\r\n    const ret = {};\r\n    for (let key in obj) {\r\n        if (!keys.includes(key)) {\r\n            // @ts-expect-error\r\n            ret[key] = obj[key];\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Creates a Router instance that can be used by a Vue app.\r\n *\r\n * @param options - {@link RouterOptions}\r\n */\r\nfunction createRouter(options) {\r\n    const matcher = createRouterMatcher(options.routes, options);\r\n    let parseQuery$1 = options.parseQuery || parseQuery;\r\n    let stringifyQuery$1 = options.stringifyQuery || stringifyQuery;\r\n    let routerHistory = options.history;\r\n    if ((process.env.NODE_ENV !== 'production') && !routerHistory)\r\n        throw new Error('Provide the \"history\" option when calling \"createRouter()\":' +\r\n            ' https://next.router.vuejs.org/api/#history.');\r\n    const beforeGuards = useCallbacks();\r\n    const beforeResolveGuards = useCallbacks();\r\n    const afterGuards = useCallbacks();\r\n    const currentRoute = shallowRef(START_LOCATION_NORMALIZED);\r\n    let pendingLocation = START_LOCATION_NORMALIZED;\r\n    // leave the scrollRestoration if no scrollBehavior is provided\r\n    if (isBrowser && options.scrollBehavior && 'scrollRestoration' in history) {\r\n        history.scrollRestoration = 'manual';\r\n    }\r\n    const normalizeParams = applyToParams.bind(null, paramValue => '' + paramValue);\r\n    const encodeParams = applyToParams.bind(null, encodeParam);\r\n    const decodeParams = applyToParams.bind(null, decode);\r\n    function addRoute(parentOrRoute, route) {\r\n        let parent;\r\n        let record;\r\n        if (isRouteName(parentOrRoute)) {\r\n            parent = matcher.getRecordMatcher(parentOrRoute);\r\n            record = route;\r\n        }\r\n        else {\r\n            record = parentOrRoute;\r\n        }\r\n        return matcher.addRoute(record, parent);\r\n    }\r\n    function removeRoute(name) {\r\n        let recordMatcher = matcher.getRecordMatcher(name);\r\n        if (recordMatcher) {\r\n            matcher.removeRoute(recordMatcher);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Cannot remove non-existent route \"${String(name)}\"`);\r\n        }\r\n    }\r\n    function getRoutes() {\r\n        return matcher.getRoutes().map(routeMatcher => routeMatcher.record);\r\n    }\r\n    function hasRoute(name) {\r\n        return !!matcher.getRecordMatcher(name);\r\n    }\r\n    function resolve(rawLocation, currentLocation) {\r\n        // const objectLocation = routerLocationAsObject(rawLocation)\r\n        // we create a copy to modify it later\r\n        currentLocation = assign({}, currentLocation || currentRoute.value);\r\n        if (typeof rawLocation === 'string') {\r\n            let locationNormalized = parseURL(parseQuery$1, rawLocation, currentLocation.path);\r\n            let matchedRoute = matcher.resolve({ path: locationNormalized.path }, currentLocation);\r\n            let href = routerHistory.createHref(locationNormalized.fullPath);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (href.startsWith('//'))\r\n                    warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n                else if (!matchedRoute.matched.length) {\r\n                    warn(`No match found for location with path \"${rawLocation}\"`);\r\n                }\r\n            }\r\n            // locationNormalized is always a new object\r\n            return assign(locationNormalized, matchedRoute, {\r\n                params: decodeParams(matchedRoute.params),\r\n                hash: decode(locationNormalized.hash),\r\n                redirectedFrom: undefined,\r\n                href,\r\n            });\r\n        }\r\n        let matcherLocation;\r\n        // path could be relative in object as well\r\n        if ('path' in rawLocation) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                'params' in rawLocation &&\r\n                !('name' in rawLocation) &&\r\n                Object.keys(rawLocation.params).length) {\r\n                warn(`Path \"${rawLocation.path}\" was passed with params but they will be ignored. Use a named route alongside params instead.`);\r\n            }\r\n            matcherLocation = assign({}, rawLocation, {\r\n                path: parseURL(parseQuery$1, rawLocation.path, currentLocation.path).path,\r\n            });\r\n        }\r\n        else {\r\n            // pass encoded values to the matcher so it can produce encoded path and fullPath\r\n            matcherLocation = assign({}, rawLocation, {\r\n                params: encodeParams(rawLocation.params),\r\n            });\r\n            // current location params are decoded, we need to encode them in case the\r\n            // matcher merges the params\r\n            currentLocation.params = encodeParams(currentLocation.params);\r\n        }\r\n        let matchedRoute = matcher.resolve(matcherLocation, currentLocation);\r\n        const hash = rawLocation.hash || '';\r\n        if ((process.env.NODE_ENV !== 'production') && hash && !hash.startsWith('#')) {\r\n            warn(`A \\`hash\\` should always start with the character \"#\". Replace \"${hash}\" with \"#${hash}\".`);\r\n        }\r\n        // decoding them) the matcher might have merged current location params so\r\n        // we need to run the decoding again\r\n        matchedRoute.params = normalizeParams(decodeParams(matchedRoute.params));\r\n        const fullPath = stringifyURL(stringifyQuery$1, assign({}, rawLocation, {\r\n            hash: encodeHash(hash),\r\n            path: matchedRoute.path,\r\n        }));\r\n        let href = routerHistory.createHref(fullPath);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            if (href.startsWith('//')) {\r\n                warn(`Location \"${rawLocation}\" resolved to \"${href}\". A resolved location cannot start with multiple slashes.`);\r\n            }\r\n            else if (!matchedRoute.matched.length) {\r\n                warn(`No match found for location with path \"${'path' in rawLocation ? rawLocation.path : rawLocation}\"`);\r\n            }\r\n        }\r\n        return assign({\r\n            fullPath,\r\n            // keep the hash encoded so fullPath is effectively path + encodedQuery +\r\n            // hash\r\n            hash,\r\n            query: \r\n            // if the user is using a custom query lib like qs, we might have\r\n            // nested objects, so we keep the query as is, meaning it can contain\r\n            // numbers at `$route.query`, but at the point, the user will have to\r\n            // use their own type anyway.\r\n            // https://github.com/vuejs/vue-router-next/issues/328#issuecomment-649481567\r\n            stringifyQuery$1 === stringifyQuery\r\n                ? normalizeQuery(rawLocation.query)\r\n                : rawLocation.query,\r\n        }, matchedRoute, {\r\n            redirectedFrom: undefined,\r\n            href,\r\n        });\r\n    }\r\n    function locationAsObject(to) {\r\n        return typeof to === 'string'\r\n            ? parseURL(parseQuery$1, to, currentRoute.value.path)\r\n            : assign({}, to);\r\n    }\r\n    function checkCanceledNavigation(to, from) {\r\n        if (pendingLocation !== to) {\r\n            return createRouterError(8 /* NAVIGATION_CANCELLED */, {\r\n                from,\r\n                to,\r\n            });\r\n        }\r\n    }\r\n    function push(to) {\r\n        return pushWithRedirect(to);\r\n    }\r\n    function replace(to) {\r\n        return push(assign(locationAsObject(to), { replace: true }));\r\n    }\r\n    function handleRedirectRecord(to) {\r\n        const lastMatched = to.matched[to.matched.length - 1];\r\n        if (lastMatched && lastMatched.redirect) {\r\n            const { redirect } = lastMatched;\r\n            let newTargetLocation = typeof redirect === 'function' ? redirect(to) : redirect;\r\n            if (typeof newTargetLocation === 'string') {\r\n                newTargetLocation =\r\n                    newTargetLocation.includes('?') || newTargetLocation.includes('#')\r\n                        ? (newTargetLocation = locationAsObject(newTargetLocation))\r\n                        : // force empty params\r\n                            { path: newTargetLocation };\r\n                // @ts-expect-error: force empty params when a string is passed to let\r\n                // the router parse them again\r\n                newTargetLocation.params = {};\r\n            }\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !('path' in newTargetLocation) &&\r\n                !('name' in newTargetLocation)) {\r\n                warn(`Invalid redirect found:\\n${JSON.stringify(newTargetLocation, null, 2)}\\n when navigating to \"${to.fullPath}\". A redirect must contain a name or path. This will break in production.`);\r\n                throw new Error('Invalid redirect');\r\n            }\r\n            return assign({\r\n                query: to.query,\r\n                hash: to.hash,\r\n                params: to.params,\r\n            }, newTargetLocation);\r\n        }\r\n    }\r\n    function pushWithRedirect(to, redirectedFrom) {\r\n        const targetLocation = (pendingLocation = resolve(to));\r\n        const from = currentRoute.value;\r\n        const data = to.state;\r\n        const force = to.force;\r\n        // to could be a string where `replace` is a function\r\n        const replace = to.replace === true;\r\n        const shouldRedirect = handleRedirectRecord(targetLocation);\r\n        if (shouldRedirect)\r\n            return pushWithRedirect(assign(locationAsObject(shouldRedirect), {\r\n                state: data,\r\n                force,\r\n                replace,\r\n            }), \r\n            // keep original redirectedFrom if it exists\r\n            redirectedFrom || targetLocation);\r\n        // if it was a redirect we already called `pushWithRedirect` above\r\n        const toLocation = targetLocation;\r\n        toLocation.redirectedFrom = redirectedFrom;\r\n        let failure;\r\n        if (!force && isSameRouteLocation(stringifyQuery$1, from, targetLocation)) {\r\n            failure = createRouterError(16 /* NAVIGATION_DUPLICATED */, { to: toLocation, from });\r\n            // trigger scroll to allow scrolling to the same anchor\r\n            handleScroll(from, from, \r\n            // this is a push, the only way for it to be triggered from a\r\n            // history.listen is with a redirect, which makes it become a push\r\n            true, \r\n            // This cannot be the first navigation because the initial location\r\n            // cannot be manually navigated to\r\n            false);\r\n        }\r\n        return (failure ? Promise.resolve(failure) : navigate(toLocation, from))\r\n            .catch((error) => isNavigationFailure(error)\r\n            ? error\r\n            : // reject any unknown error\r\n                triggerError(error, toLocation, from))\r\n            .then((failure) => {\r\n            if (failure) {\r\n                if (isNavigationFailure(failure, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    if ((process.env.NODE_ENV !== 'production') &&\r\n                        // we are redirecting to the same location we were already at\r\n                        isSameRouteLocation(stringifyQuery$1, resolve(failure.to), toLocation) &&\r\n                        // and we have done it a couple of times\r\n                        redirectedFrom &&\r\n                        // @ts-expect-error: added only in dev\r\n                        (redirectedFrom._count = redirectedFrom._count\r\n                            ? // @ts-expect-error\r\n                                redirectedFrom._count + 1\r\n                            : 1) > 10) {\r\n                        warn(`Detected an infinite redirection in a navigation guard when going from \"${from.fullPath}\" to \"${toLocation.fullPath}\". Aborting to avoid a Stack Overflow. This will break in production if not fixed.`);\r\n                        return Promise.reject(new Error('Infinite redirect in navigation guard'));\r\n                    }\r\n                    return pushWithRedirect(\r\n                    // keep options\r\n                    assign(locationAsObject(failure.to), {\r\n                        state: data,\r\n                        force,\r\n                        replace,\r\n                    }), \r\n                    // preserve the original redirectedFrom if any\r\n                    redirectedFrom || toLocation);\r\n                }\r\n            }\r\n            else {\r\n                // if we fail we don't finalize the navigation\r\n                failure = finalizeNavigation(toLocation, from, true, replace, data);\r\n            }\r\n            triggerAfterEach(toLocation, from, failure);\r\n            return failure;\r\n        });\r\n    }\r\n    /**\r\n     * Helper to reject and skip all navigation guards if a new navigation happened\r\n     * @param to\r\n     * @param from\r\n     */\r\n    function checkCanceledNavigationAndReject(to, from) {\r\n        const error = checkCanceledNavigation(to, from);\r\n        return error ? Promise.reject(error) : Promise.resolve();\r\n    }\r\n    // TODO: refactor the whole before guards by internally using router.beforeEach\r\n    function navigate(to, from) {\r\n        let guards;\r\n        const [leavingRecords, updatingRecords, enteringRecords] = extractChangingRecords(to, from);\r\n        // all components here have been resolved once because we are leaving\r\n        guards = extractComponentsGuards(leavingRecords.reverse(), 'beforeRouteLeave', to, from);\r\n        // leavingRecords is already reversed\r\n        for (const record of leavingRecords) {\r\n            record.leaveGuards.forEach(guard => {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            });\r\n        }\r\n        const canceledNavigationCheck = checkCanceledNavigationAndReject.bind(null, to, from);\r\n        guards.push(canceledNavigationCheck);\r\n        // run the queue of per route beforeRouteLeave guards\r\n        return (runGuardQueue(guards)\r\n            .then(() => {\r\n            // check global guards beforeEach\r\n            guards = [];\r\n            for (const guard of beforeGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check in components beforeRouteUpdate\r\n            guards = extractComponentsGuards(updatingRecords, 'beforeRouteUpdate', to, from);\r\n            for (const record of updatingRecords) {\r\n                record.updateGuards.forEach(guard => {\r\n                    guards.push(guardToPromiseFn(guard, to, from));\r\n                });\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check the route beforeEnter\r\n            guards = [];\r\n            for (const record of to.matched) {\r\n                // do not trigger beforeEnter on reused views\r\n                if (record.beforeEnter && !from.matched.includes(record)) {\r\n                    if (Array.isArray(record.beforeEnter)) {\r\n                        for (const beforeEnter of record.beforeEnter)\r\n                            guards.push(guardToPromiseFn(beforeEnter, to, from));\r\n                    }\r\n                    else {\r\n                        guards.push(guardToPromiseFn(record.beforeEnter, to, from));\r\n                    }\r\n                }\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // NOTE: at this point to.matched is normalized and does not contain any () => Promise<Component>\r\n            // clear existing enterCallbacks, these are added by extractComponentsGuards\r\n            to.matched.forEach(record => (record.enterCallbacks = {}));\r\n            // check in-component beforeRouteEnter\r\n            guards = extractComponentsGuards(enteringRecords, 'beforeRouteEnter', to, from);\r\n            guards.push(canceledNavigationCheck);\r\n            // run the queue of per route beforeEnter guards\r\n            return runGuardQueue(guards);\r\n        })\r\n            .then(() => {\r\n            // check global guards beforeResolve\r\n            guards = [];\r\n            for (const guard of beforeResolveGuards.list()) {\r\n                guards.push(guardToPromiseFn(guard, to, from));\r\n            }\r\n            guards.push(canceledNavigationCheck);\r\n            return runGuardQueue(guards);\r\n        })\r\n            // catch any navigation canceled\r\n            .catch(err => isNavigationFailure(err, 8 /* NAVIGATION_CANCELLED */)\r\n            ? err\r\n            : Promise.reject(err)));\r\n    }\r\n    function triggerAfterEach(to, from, failure) {\r\n        // navigation is confirmed, call afterGuards\r\n        // TODO: wrap with error handlers\r\n        for (const guard of afterGuards.list())\r\n            guard(to, from, failure);\r\n    }\r\n    /**\r\n     * - Cleans up any navigation guards\r\n     * - Changes the url if necessary\r\n     * - Calls the scrollBehavior\r\n     */\r\n    function finalizeNavigation(toLocation, from, isPush, replace, data) {\r\n        // a more recent navigation took place\r\n        const error = checkCanceledNavigation(toLocation, from);\r\n        if (error)\r\n            return error;\r\n        // only consider as push if it's not the first navigation\r\n        const isFirstNavigation = from === START_LOCATION_NORMALIZED;\r\n        const state = !isBrowser ? {} : history.state;\r\n        // change URL only if the user did a push/replace and if it's not the initial navigation because\r\n        // it's just reflecting the url\r\n        if (isPush) {\r\n            // on the initial navigation, we want to reuse the scroll position from\r\n            // history state if it exists\r\n            if (replace || isFirstNavigation)\r\n                routerHistory.replace(toLocation.fullPath, assign({\r\n                    scroll: isFirstNavigation && state && state.scroll,\r\n                }, data));\r\n            else\r\n                routerHistory.push(toLocation.fullPath, data);\r\n        }\r\n        // accept current navigation\r\n        currentRoute.value = toLocation;\r\n        handleScroll(toLocation, from, isPush, isFirstNavigation);\r\n        markAsReady();\r\n    }\r\n    let removeHistoryListener;\r\n    // attach listener to history to trigger navigations\r\n    function setupListeners() {\r\n        removeHistoryListener = routerHistory.listen((to, _from, info) => {\r\n            // cannot be a redirect route because it was in history\r\n            let toLocation = resolve(to);\r\n            // due to dynamic routing, and to hash history with manual navigation\r\n            // (manually changing the url or calling history.hash = '#/somewhere'),\r\n            // there could be a redirect record in history\r\n            const shouldRedirect = handleRedirectRecord(toLocation);\r\n            if (shouldRedirect) {\r\n                pushWithRedirect(assign(shouldRedirect, { replace: true }), toLocation).catch(noop);\r\n                return;\r\n            }\r\n            pendingLocation = toLocation;\r\n            const from = currentRoute.value;\r\n            // TODO: should be moved to web history?\r\n            if (isBrowser) {\r\n                saveScrollPosition(getScrollKey(from.fullPath, info.delta), computeScrollPosition());\r\n            }\r\n            navigate(toLocation, from)\r\n                .catch((error) => {\r\n                if (isNavigationFailure(error, 4 /* NAVIGATION_ABORTED */ | 8 /* NAVIGATION_CANCELLED */)) {\r\n                    return error;\r\n                }\r\n                if (isNavigationFailure(error, 2 /* NAVIGATION_GUARD_REDIRECT */)) {\r\n                    // Here we could call if (info.delta) routerHistory.go(-info.delta,\r\n                    // false) but this is bug prone as we have no way to wait the\r\n                    // navigation to be finished before calling pushWithRedirect. Using\r\n                    // a setTimeout of 16ms seems to work but there is not guarantee for\r\n                    // it to work on every browser. So Instead we do not restore the\r\n                    // history entry and trigger a new navigation as requested by the\r\n                    // navigation guard.\r\n                    // the error is already handled by router.push we just want to avoid\r\n                    // logging the error\r\n                    pushWithRedirect(error.to, toLocation\r\n                    // avoid an uncaught rejection, let push call triggerError\r\n                    )\r\n                        .then(failure => {\r\n                        // manual change in hash history #916 ending up in the URL not\r\n                        // changing but it was changed by the manual url change, so we\r\n                        // need to manually change it ourselves\r\n                        if (isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ |\r\n                            16 /* NAVIGATION_DUPLICATED */) &&\r\n                            !info.delta &&\r\n                            info.type === NavigationType.pop) {\r\n                            routerHistory.go(-1, false);\r\n                        }\r\n                    })\r\n                        .catch(noop);\r\n                    // avoid the then branch\r\n                    return Promise.reject();\r\n                }\r\n                // do not restore history on unknown direction\r\n                if (info.delta)\r\n                    routerHistory.go(-info.delta, false);\r\n                // unrecognized error, transfer to the global handler\r\n                return triggerError(error, toLocation, from);\r\n            })\r\n                .then((failure) => {\r\n                failure =\r\n                    failure ||\r\n                        finalizeNavigation(\r\n                        // after navigation, all matched components are resolved\r\n                        toLocation, from, false);\r\n                // revert the navigation\r\n                if (failure) {\r\n                    if (info.delta) {\r\n                        routerHistory.go(-info.delta, false);\r\n                    }\r\n                    else if (info.type === NavigationType.pop &&\r\n                        isNavigationFailure(failure, 4 /* NAVIGATION_ABORTED */ | 16 /* NAVIGATION_DUPLICATED */)) {\r\n                        // manual change in hash history #916\r\n                        // it's like a push but lacks the information of the direction\r\n                        routerHistory.go(-1, false);\r\n                    }\r\n                }\r\n                triggerAfterEach(toLocation, from, failure);\r\n            })\r\n                .catch(noop);\r\n        });\r\n    }\r\n    // Initialization and Errors\r\n    let readyHandlers = useCallbacks();\r\n    let errorHandlers = useCallbacks();\r\n    let ready;\r\n    /**\r\n     * Trigger errorHandlers added via onError and throws the error as well\r\n     *\r\n     * @param error - error to throw\r\n     * @param to - location we were navigating to when the error happened\r\n     * @param from - location we were navigating from when the error happened\r\n     * @returns the error as a rejected promise\r\n     */\r\n    function triggerError(error, to, from) {\r\n        markAsReady(error);\r\n        const list = errorHandlers.list();\r\n        if (list.length) {\r\n            list.forEach(handler => handler(error, to, from));\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                warn('uncaught error during route navigation:');\r\n            }\r\n            console.error(error);\r\n        }\r\n        return Promise.reject(error);\r\n    }\r\n    function isReady() {\r\n        if (ready && currentRoute.value !== START_LOCATION_NORMALIZED)\r\n            return Promise.resolve();\r\n        return new Promise((resolve, reject) => {\r\n            readyHandlers.add([resolve, reject]);\r\n        });\r\n    }\r\n    /**\r\n     * Mark the router as ready, resolving the promised returned by isReady(). Can\r\n     * only be called once, otherwise does nothing.\r\n     * @param err - optional error\r\n     */\r\n    function markAsReady(err) {\r\n        if (ready)\r\n            return;\r\n        ready = true;\r\n        setupListeners();\r\n        readyHandlers\r\n            .list()\r\n            .forEach(([resolve, reject]) => (err ? reject(err) : resolve()));\r\n        readyHandlers.reset();\r\n    }\r\n    // Scroll behavior\r\n    function handleScroll(to, from, isPush, isFirstNavigation) {\r\n        const { scrollBehavior } = options;\r\n        if (!isBrowser || !scrollBehavior)\r\n            return Promise.resolve();\r\n        let scrollPosition = (!isPush && getSavedScrollPosition(getScrollKey(to.fullPath, 0))) ||\r\n            ((isFirstNavigation || !isPush) &&\r\n                history.state &&\r\n                history.state.scroll) ||\r\n            null;\r\n        return nextTick()\r\n            .then(() => scrollBehavior(to, from, scrollPosition))\r\n            .then(position => position && scrollToPosition(position))\r\n            .catch(err => triggerError(err, to, from));\r\n    }\r\n    const go = (delta) => routerHistory.go(delta);\r\n    let started;\r\n    const installedApps = new Set();\r\n    const router = {\r\n        currentRoute,\r\n        addRoute,\r\n        removeRoute,\r\n        hasRoute,\r\n        getRoutes,\r\n        resolve,\r\n        options,\r\n        push,\r\n        replace,\r\n        go,\r\n        back: () => go(-1),\r\n        forward: () => go(1),\r\n        beforeEach: beforeGuards.add,\r\n        beforeResolve: beforeResolveGuards.add,\r\n        afterEach: afterGuards.add,\r\n        onError: errorHandlers.add,\r\n        isReady,\r\n        install(app) {\r\n            const router = this;\r\n            app.component('RouterLink', RouterLink);\r\n            app.component('RouterView', RouterView);\r\n            app.config.globalProperties.$router = router;\r\n            Object.defineProperty(app.config.globalProperties, '$route', {\r\n                enumerable: true,\r\n                get: () => unref(currentRoute),\r\n            });\r\n            // this initial navigation is only necessary on client, on server it doesn't\r\n            // make sense because it will create an extra unnecessary navigation and could\r\n            // lead to problems\r\n            if (isBrowser &&\r\n                // used for the initial navigation client side to avoid pushing\r\n                // multiple times when the router is used in multiple apps\r\n                !started &&\r\n                currentRoute.value === START_LOCATION_NORMALIZED) {\r\n                // see above\r\n                started = true;\r\n                push(routerHistory.location).catch(err => {\r\n                    if ((process.env.NODE_ENV !== 'production'))\r\n                        warn('Unexpected error when starting the router:', err);\r\n                });\r\n            }\r\n            const reactiveRoute = {};\r\n            for (let key in START_LOCATION_NORMALIZED) {\r\n                // @ts-expect-error: the key matches\r\n                reactiveRoute[key] = computed(() => currentRoute.value[key]);\r\n            }\r\n            app.provide(routerKey, router);\r\n            app.provide(routeLocationKey, reactive(reactiveRoute));\r\n            app.provide(routerViewLocationKey, currentRoute);\r\n            let unmountApp = app.unmount;\r\n            installedApps.add(app);\r\n            app.unmount = function () {\r\n                installedApps.delete(app);\r\n                if (installedApps.size < 1) {\r\n                    removeHistoryListener();\r\n                    currentRoute.value = START_LOCATION_NORMALIZED;\r\n                    started = false;\r\n                    ready = false;\r\n                }\r\n                unmountApp();\r\n            };\r\n            if (((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) && isBrowser) {\r\n                addDevtools(app, router, matcher);\r\n            }\r\n        },\r\n    };\r\n    return router;\r\n}\r\nfunction runGuardQueue(guards) {\r\n    return guards.reduce((promise, guard) => promise.then(() => guard()), Promise.resolve());\r\n}\r\nfunction extractChangingRecords(to, from) {\r\n    const leavingRecords = [];\r\n    const updatingRecords = [];\r\n    const enteringRecords = [];\r\n    const len = Math.max(from.matched.length, to.matched.length);\r\n    for (let i = 0; i < len; i++) {\r\n        const recordFrom = from.matched[i];\r\n        if (recordFrom) {\r\n            if (to.matched.find(record => isSameRouteRecord(record, recordFrom)))\r\n                updatingRecords.push(recordFrom);\r\n            else\r\n                leavingRecords.push(recordFrom);\r\n        }\r\n        const recordTo = to.matched[i];\r\n        if (recordTo) {\r\n            // the type doesn't matter because we are comparing per reference\r\n            if (!from.matched.find(record => isSameRouteRecord(record, recordTo))) {\r\n                enteringRecords.push(recordTo);\r\n            }\r\n        }\r\n    }\r\n    return [leavingRecords, updatingRecords, enteringRecords];\r\n}\n\n/**\r\n * Returns the router instance. Equivalent to using `$router` inside\r\n * templates.\r\n */\r\nfunction useRouter() {\r\n    return inject(routerKey);\r\n}\r\n/**\r\n * Returns the current route location. Equivalent to using `$route` inside\r\n * templates.\r\n */\r\nfunction useRoute() {\r\n    return inject(routeLocationKey);\r\n}\n\nexport { NavigationFailureType, RouterLink, RouterView, START_LOCATION_NORMALIZED as START_LOCATION, createMemoryHistory, createRouter, createRouterMatcher, createWebHashHistory, createWebHistory, isNavigationFailure, matchedRouteKey, onBeforeRouteLeave, onBeforeRouteUpdate, parseQuery, routeLocationKey, routerKey, routerViewLocationKey, stringifyQuery, useLink, useRoute, useRouter, viewDepthKey };\n","import { EMPTY_OBJ, isArray, isMap, isIntegerKey, isSymbol, extend, hasOwn, isObject, hasChanged, makeMap, capitalize, toRawType, def, isFunction, NOOP } from '@vue/shared';\n\nconst targetMap = new WeakMap();\r\nconst effectStack = [];\r\nlet activeEffect;\r\nconst ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'iterate' : '');\r\nconst MAP_KEY_ITERATE_KEY = Symbol((process.env.NODE_ENV !== 'production') ? 'Map key iterate' : '');\r\nfunction isEffect(fn) {\r\n    return fn && fn._isEffect === true;\r\n}\r\nfunction effect(fn, options = EMPTY_OBJ) {\r\n    if (isEffect(fn)) {\r\n        fn = fn.raw;\r\n    }\r\n    const effect = createReactiveEffect(fn, options);\r\n    if (!options.lazy) {\r\n        effect();\r\n    }\r\n    return effect;\r\n}\r\nfunction stop(effect) {\r\n    if (effect.active) {\r\n        cleanup(effect);\r\n        if (effect.options.onStop) {\r\n            effect.options.onStop();\r\n        }\r\n        effect.active = false;\r\n    }\r\n}\r\nlet uid = 0;\r\nfunction createReactiveEffect(fn, options) {\r\n    const effect = function reactiveEffect() {\r\n        if (!effect.active) {\r\n            return fn();\r\n        }\r\n        if (!effectStack.includes(effect)) {\r\n            cleanup(effect);\r\n            try {\r\n                enableTracking();\r\n                effectStack.push(effect);\r\n                activeEffect = effect;\r\n                return fn();\r\n            }\r\n            finally {\r\n                effectStack.pop();\r\n                resetTracking();\r\n                activeEffect = effectStack[effectStack.length - 1];\r\n            }\r\n        }\r\n    };\r\n    effect.id = uid++;\r\n    effect.allowRecurse = !!options.allowRecurse;\r\n    effect._isEffect = true;\r\n    effect.active = true;\r\n    effect.raw = fn;\r\n    effect.deps = [];\r\n    effect.options = options;\r\n    return effect;\r\n}\r\nfunction cleanup(effect) {\r\n    const { deps } = effect;\r\n    if (deps.length) {\r\n        for (let i = 0; i < deps.length; i++) {\r\n            deps[i].delete(effect);\r\n        }\r\n        deps.length = 0;\r\n    }\r\n}\r\nlet shouldTrack = true;\r\nconst trackStack = [];\r\nfunction pauseTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = false;\r\n}\r\nfunction enableTracking() {\r\n    trackStack.push(shouldTrack);\r\n    shouldTrack = true;\r\n}\r\nfunction resetTracking() {\r\n    const last = trackStack.pop();\r\n    shouldTrack = last === undefined ? true : last;\r\n}\r\nfunction track(target, type, key) {\r\n    if (!shouldTrack || activeEffect === undefined) {\r\n        return;\r\n    }\r\n    let depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        targetMap.set(target, (depsMap = new Map()));\r\n    }\r\n    let dep = depsMap.get(key);\r\n    if (!dep) {\r\n        depsMap.set(key, (dep = new Set()));\r\n    }\r\n    if (!dep.has(activeEffect)) {\r\n        dep.add(activeEffect);\r\n        activeEffect.deps.push(dep);\r\n        if ((process.env.NODE_ENV !== 'production') && activeEffect.options.onTrack) {\r\n            activeEffect.options.onTrack({\r\n                effect: activeEffect,\r\n                target,\r\n                type,\r\n                key\r\n            });\r\n        }\r\n    }\r\n}\r\nfunction trigger(target, type, key, newValue, oldValue, oldTarget) {\r\n    const depsMap = targetMap.get(target);\r\n    if (!depsMap) {\r\n        // never been tracked\r\n        return;\r\n    }\r\n    const effects = new Set();\r\n    const add = (effectsToAdd) => {\r\n        if (effectsToAdd) {\r\n            effectsToAdd.forEach(effect => {\r\n                if (effect !== activeEffect || effect.allowRecurse) {\r\n                    effects.add(effect);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    if (type === \"clear\" /* CLEAR */) {\r\n        // collection being cleared\r\n        // trigger all effects for target\r\n        depsMap.forEach(add);\r\n    }\r\n    else if (key === 'length' && isArray(target)) {\r\n        depsMap.forEach((dep, key) => {\r\n            if (key === 'length' || key >= newValue) {\r\n                add(dep);\r\n            }\r\n        });\r\n    }\r\n    else {\r\n        // schedule runs for SET | ADD | DELETE\r\n        if (key !== void 0) {\r\n            add(depsMap.get(key));\r\n        }\r\n        // also run for iteration key on ADD | DELETE | Map.SET\r\n        switch (type) {\r\n            case \"add\" /* ADD */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                else if (isIntegerKey(key)) {\r\n                    // new index added to array -> length changes\r\n                    add(depsMap.get('length'));\r\n                }\r\n                break;\r\n            case \"delete\" /* DELETE */:\r\n                if (!isArray(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                    if (isMap(target)) {\r\n                        add(depsMap.get(MAP_KEY_ITERATE_KEY));\r\n                    }\r\n                }\r\n                break;\r\n            case \"set\" /* SET */:\r\n                if (isMap(target)) {\r\n                    add(depsMap.get(ITERATE_KEY));\r\n                }\r\n                break;\r\n        }\r\n    }\r\n    const run = (effect) => {\r\n        if ((process.env.NODE_ENV !== 'production') && effect.options.onTrigger) {\r\n            effect.options.onTrigger({\r\n                effect,\r\n                target,\r\n                key,\r\n                type,\r\n                newValue,\r\n                oldValue,\r\n                oldTarget\r\n            });\r\n        }\r\n        if (effect.options.scheduler) {\r\n            effect.options.scheduler(effect);\r\n        }\r\n        else {\r\n            effect();\r\n        }\r\n    };\r\n    effects.forEach(run);\r\n}\n\nconst isNonTrackableKeys = /*#__PURE__*/ makeMap(`__proto__,__v_isRef,__isVue`);\r\nconst builtInSymbols = new Set(Object.getOwnPropertyNames(Symbol)\r\n    .map(key => Symbol[key])\r\n    .filter(isSymbol));\r\nconst get = /*#__PURE__*/ createGetter();\r\nconst shallowGet = /*#__PURE__*/ createGetter(false, true);\r\nconst readonlyGet = /*#__PURE__*/ createGetter(true);\r\nconst shallowReadonlyGet = /*#__PURE__*/ createGetter(true, true);\r\nconst arrayInstrumentations = /*#__PURE__*/ createArrayInstrumentations();\r\nfunction createArrayInstrumentations() {\r\n    const instrumentations = {};\r\n    ['includes', 'indexOf', 'lastIndexOf'].forEach(key => {\r\n        const method = Array.prototype[key];\r\n        instrumentations[key] = function (...args) {\r\n            const arr = toRaw(this);\r\n            for (let i = 0, l = this.length; i < l; i++) {\r\n                track(arr, \"get\" /* GET */, i + '');\r\n            }\r\n            // we run the method using the original args first (which may be reactive)\r\n            const res = method.apply(arr, args);\r\n            if (res === -1 || res === false) {\r\n                // if that didn't work, run it again using raw values.\r\n                return method.apply(arr, args.map(toRaw));\r\n            }\r\n            else {\r\n                return res;\r\n            }\r\n        };\r\n    });\r\n    ['push', 'pop', 'shift', 'unshift', 'splice'].forEach(key => {\r\n        const method = Array.prototype[key];\r\n        instrumentations[key] = function (...args) {\r\n            pauseTracking();\r\n            const res = method.apply(this, args);\r\n            resetTracking();\r\n            return res;\r\n        };\r\n    });\r\n    return instrumentations;\r\n}\r\nfunction createGetter(isReadonly = false, shallow = false) {\r\n    return function get(target, key, receiver) {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */ &&\r\n            receiver ===\r\n                (isReadonly\r\n                    ? shallow\r\n                        ? shallowReadonlyMap\r\n                        : readonlyMap\r\n                    : shallow\r\n                        ? shallowReactiveMap\r\n                        : reactiveMap).get(target)) {\r\n            return target;\r\n        }\r\n        const targetIsArray = isArray(target);\r\n        if (!isReadonly && targetIsArray && hasOwn(arrayInstrumentations, key)) {\r\n            return Reflect.get(arrayInstrumentations, key, receiver);\r\n        }\r\n        const res = Reflect.get(target, key, receiver);\r\n        if (isSymbol(key) ? builtInSymbols.has(key) : isNonTrackableKeys(key)) {\r\n            return res;\r\n        }\r\n        if (!isReadonly) {\r\n            track(target, \"get\" /* GET */, key);\r\n        }\r\n        if (shallow) {\r\n            return res;\r\n        }\r\n        if (isRef(res)) {\r\n            // ref unwrapping - does not apply for Array + integer key.\r\n            const shouldUnwrap = !targetIsArray || !isIntegerKey(key);\r\n            return shouldUnwrap ? res.value : res;\r\n        }\r\n        if (isObject(res)) {\r\n            // Convert returned value into a proxy as well. we do the isObject check\r\n            // here to avoid invalid value warning. Also need to lazy access readonly\r\n            // and reactive here to avoid circular dependency.\r\n            return isReadonly ? readonly(res) : reactive(res);\r\n        }\r\n        return res;\r\n    };\r\n}\r\nconst set = /*#__PURE__*/ createSetter();\r\nconst shallowSet = /*#__PURE__*/ createSetter(true);\r\nfunction createSetter(shallow = false) {\r\n    return function set(target, key, value, receiver) {\r\n        let oldValue = target[key];\r\n        if (!shallow) {\r\n            value = toRaw(value);\r\n            oldValue = toRaw(oldValue);\r\n            if (!isArray(target) && isRef(oldValue) && !isRef(value)) {\r\n                oldValue.value = value;\r\n                return true;\r\n            }\r\n        }\r\n        const hadKey = isArray(target) && isIntegerKey(key)\r\n            ? Number(key) < target.length\r\n            : hasOwn(target, key);\r\n        const result = Reflect.set(target, key, value, receiver);\r\n        // don't trigger if target is something up in the prototype chain of original\r\n        if (target === toRaw(receiver)) {\r\n            if (!hadKey) {\r\n                trigger(target, \"add\" /* ADD */, key, value);\r\n            }\r\n            else if (hasChanged(value, oldValue)) {\r\n                trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n            }\r\n        }\r\n        return result;\r\n    };\r\n}\r\nfunction deleteProperty(target, key) {\r\n    const hadKey = hasOwn(target, key);\r\n    const oldValue = target[key];\r\n    const result = Reflect.deleteProperty(target, key);\r\n    if (result && hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction has(target, key) {\r\n    const result = Reflect.has(target, key);\r\n    if (!isSymbol(key) || !builtInSymbols.has(key)) {\r\n        track(target, \"has\" /* HAS */, key);\r\n    }\r\n    return result;\r\n}\r\nfunction ownKeys(target) {\r\n    track(target, \"iterate\" /* ITERATE */, isArray(target) ? 'length' : ITERATE_KEY);\r\n    return Reflect.ownKeys(target);\r\n}\r\nconst mutableHandlers = {\r\n    get,\r\n    set,\r\n    deleteProperty,\r\n    has,\r\n    ownKeys\r\n};\r\nconst readonlyHandlers = {\r\n    get: readonlyGet,\r\n    set(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Set operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    },\r\n    deleteProperty(target, key) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`Delete operation on key \"${String(key)}\" failed: target is readonly.`, target);\r\n        }\r\n        return true;\r\n    }\r\n};\r\nconst shallowReactiveHandlers = /*#__PURE__*/ extend({}, mutableHandlers, {\r\n    get: shallowGet,\r\n    set: shallowSet\r\n});\r\n// Props handlers are special in the sense that it should not unwrap top-level\r\n// refs (in order to allow refs to be explicitly passed down), but should\r\n// retain the reactivity of the normal readonly object.\r\nconst shallowReadonlyHandlers = /*#__PURE__*/ extend({}, readonlyHandlers, {\r\n    get: shallowReadonlyGet\r\n});\n\nconst toReactive = (value) => isObject(value) ? reactive(value) : value;\r\nconst toReadonly = (value) => isObject(value) ? readonly(value) : value;\r\nconst toShallow = (value) => value;\r\nconst getProto = (v) => Reflect.getPrototypeOf(v);\r\nfunction get$1(target, key, isReadonly = false, isShallow = false) {\r\n    // #1772: readonly(reactive(Map)) should return readonly + reactive version\r\n    // of the value\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"get\" /* GET */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"get\" /* GET */, rawKey);\r\n    const { has } = getProto(rawTarget);\r\n    const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n    if (has.call(rawTarget, key)) {\r\n        return wrap(target.get(key));\r\n    }\r\n    else if (has.call(rawTarget, rawKey)) {\r\n        return wrap(target.get(rawKey));\r\n    }\r\n    else if (target !== rawTarget) {\r\n        // #3602 readonly(reactive(Map))\r\n        // ensure that the nested reactive `Map` can do tracking for itself\r\n        target.get(key);\r\n    }\r\n}\r\nfunction has$1(key, isReadonly = false) {\r\n    const target = this[\"__v_raw\" /* RAW */];\r\n    const rawTarget = toRaw(target);\r\n    const rawKey = toRaw(key);\r\n    if (key !== rawKey) {\r\n        !isReadonly && track(rawTarget, \"has\" /* HAS */, key);\r\n    }\r\n    !isReadonly && track(rawTarget, \"has\" /* HAS */, rawKey);\r\n    return key === rawKey\r\n        ? target.has(key)\r\n        : target.has(key) || target.has(rawKey);\r\n}\r\nfunction size(target, isReadonly = false) {\r\n    target = target[\"__v_raw\" /* RAW */];\r\n    !isReadonly && track(toRaw(target), \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n    return Reflect.get(target, 'size', target);\r\n}\r\nfunction add(value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const proto = getProto(target);\r\n    const hadKey = proto.has.call(target, value);\r\n    if (!hadKey) {\r\n        target.add(value);\r\n        trigger(target, \"add\" /* ADD */, value, value);\r\n    }\r\n    return this;\r\n}\r\nfunction set$1(key, value) {\r\n    value = toRaw(value);\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get.call(target, key);\r\n    target.set(key, value);\r\n    if (!hadKey) {\r\n        trigger(target, \"add\" /* ADD */, key, value);\r\n    }\r\n    else if (hasChanged(value, oldValue)) {\r\n        trigger(target, \"set\" /* SET */, key, value, oldValue);\r\n    }\r\n    return this;\r\n}\r\nfunction deleteEntry(key) {\r\n    const target = toRaw(this);\r\n    const { has, get } = getProto(target);\r\n    let hadKey = has.call(target, key);\r\n    if (!hadKey) {\r\n        key = toRaw(key);\r\n        hadKey = has.call(target, key);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        checkIdentityKeys(target, has, key);\r\n    }\r\n    const oldValue = get ? get.call(target, key) : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.delete(key);\r\n    if (hadKey) {\r\n        trigger(target, \"delete\" /* DELETE */, key, undefined, oldValue);\r\n    }\r\n    return result;\r\n}\r\nfunction clear() {\r\n    const target = toRaw(this);\r\n    const hadItems = target.size !== 0;\r\n    const oldTarget = (process.env.NODE_ENV !== 'production')\r\n        ? isMap(target)\r\n            ? new Map(target)\r\n            : new Set(target)\r\n        : undefined;\r\n    // forward the operation before queueing reactions\r\n    const result = target.clear();\r\n    if (hadItems) {\r\n        trigger(target, \"clear\" /* CLEAR */, undefined, undefined, oldTarget);\r\n    }\r\n    return result;\r\n}\r\nfunction createForEach(isReadonly, isShallow) {\r\n    return function forEach(callback, thisArg) {\r\n        const observed = this;\r\n        const target = observed[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly && track(rawTarget, \"iterate\" /* ITERATE */, ITERATE_KEY);\r\n        return target.forEach((value, key) => {\r\n            // important: make sure the callback is\r\n            // 1. invoked with the reactive map as `this` and 3rd arg\r\n            // 2. the value received should be a corresponding reactive/readonly.\r\n            return callback.call(thisArg, wrap(value), wrap(key), observed);\r\n        });\r\n    };\r\n}\r\nfunction createIterableMethod(method, isReadonly, isShallow) {\r\n    return function (...args) {\r\n        const target = this[\"__v_raw\" /* RAW */];\r\n        const rawTarget = toRaw(target);\r\n        const targetIsMap = isMap(rawTarget);\r\n        const isPair = method === 'entries' || (method === Symbol.iterator && targetIsMap);\r\n        const isKeyOnly = method === 'keys' && targetIsMap;\r\n        const innerIterator = target[method](...args);\r\n        const wrap = isShallow ? toShallow : isReadonly ? toReadonly : toReactive;\r\n        !isReadonly &&\r\n            track(rawTarget, \"iterate\" /* ITERATE */, isKeyOnly ? MAP_KEY_ITERATE_KEY : ITERATE_KEY);\r\n        // return a wrapped iterator which returns observed versions of the\r\n        // values emitted from the real iterator\r\n        return {\r\n            // iterator protocol\r\n            next() {\r\n                const { value, done } = innerIterator.next();\r\n                return done\r\n                    ? { value, done }\r\n                    : {\r\n                        value: isPair ? [wrap(value[0]), wrap(value[1])] : wrap(value),\r\n                        done\r\n                    };\r\n            },\r\n            // iterable protocol\r\n            [Symbol.iterator]() {\r\n                return this;\r\n            }\r\n        };\r\n    };\r\n}\r\nfunction createReadonlyMethod(type) {\r\n    return function (...args) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            const key = args[0] ? `on key \"${args[0]}\" ` : ``;\r\n            console.warn(`${capitalize(type)} operation ${key}failed: target is readonly.`, toRaw(this));\r\n        }\r\n        return type === \"delete\" /* DELETE */ ? false : this;\r\n    };\r\n}\r\nfunction createInstrumentations() {\r\n    const mutableInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, false)\r\n    };\r\n    const shallowInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, false, true);\r\n        },\r\n        get size() {\r\n            return size(this);\r\n        },\r\n        has: has$1,\r\n        add,\r\n        set: set$1,\r\n        delete: deleteEntry,\r\n        clear,\r\n        forEach: createForEach(false, true)\r\n    };\r\n    const readonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, false)\r\n    };\r\n    const shallowReadonlyInstrumentations = {\r\n        get(key) {\r\n            return get$1(this, key, true, true);\r\n        },\r\n        get size() {\r\n            return size(this, true);\r\n        },\r\n        has(key) {\r\n            return has$1.call(this, key, true);\r\n        },\r\n        add: createReadonlyMethod(\"add\" /* ADD */),\r\n        set: createReadonlyMethod(\"set\" /* SET */),\r\n        delete: createReadonlyMethod(\"delete\" /* DELETE */),\r\n        clear: createReadonlyMethod(\"clear\" /* CLEAR */),\r\n        forEach: createForEach(true, true)\r\n    };\r\n    const iteratorMethods = ['keys', 'values', 'entries', Symbol.iterator];\r\n    iteratorMethods.forEach(method => {\r\n        mutableInstrumentations[method] = createIterableMethod(method, false, false);\r\n        readonlyInstrumentations[method] = createIterableMethod(method, true, false);\r\n        shallowInstrumentations[method] = createIterableMethod(method, false, true);\r\n        shallowReadonlyInstrumentations[method] = createIterableMethod(method, true, true);\r\n    });\r\n    return [\r\n        mutableInstrumentations,\r\n        readonlyInstrumentations,\r\n        shallowInstrumentations,\r\n        shallowReadonlyInstrumentations\r\n    ];\r\n}\r\nconst [mutableInstrumentations, readonlyInstrumentations, shallowInstrumentations, shallowReadonlyInstrumentations] = /* #__PURE__*/ createInstrumentations();\r\nfunction createInstrumentationGetter(isReadonly, shallow) {\r\n    const instrumentations = shallow\r\n        ? isReadonly\r\n            ? shallowReadonlyInstrumentations\r\n            : shallowInstrumentations\r\n        : isReadonly\r\n            ? readonlyInstrumentations\r\n            : mutableInstrumentations;\r\n    return (target, key, receiver) => {\r\n        if (key === \"__v_isReactive\" /* IS_REACTIVE */) {\r\n            return !isReadonly;\r\n        }\r\n        else if (key === \"__v_isReadonly\" /* IS_READONLY */) {\r\n            return isReadonly;\r\n        }\r\n        else if (key === \"__v_raw\" /* RAW */) {\r\n            return target;\r\n        }\r\n        return Reflect.get(hasOwn(instrumentations, key) && key in target\r\n            ? instrumentations\r\n            : target, key, receiver);\r\n    };\r\n}\r\nconst mutableCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, false)\r\n};\r\nconst shallowCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(false, true)\r\n};\r\nconst readonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, false)\r\n};\r\nconst shallowReadonlyCollectionHandlers = {\r\n    get: /*#__PURE__*/ createInstrumentationGetter(true, true)\r\n};\r\nfunction checkIdentityKeys(target, has, key) {\r\n    const rawKey = toRaw(key);\r\n    if (rawKey !== key && has.call(target, rawKey)) {\r\n        const type = toRawType(target);\r\n        console.warn(`Reactive ${type} contains both the raw and reactive ` +\r\n            `versions of the same object${type === `Map` ? ` as keys` : ``}, ` +\r\n            `which can lead to inconsistencies. ` +\r\n            `Avoid differentiating between the raw and reactive versions ` +\r\n            `of an object and only use the reactive version if possible.`);\r\n    }\r\n}\n\nconst reactiveMap = new WeakMap();\r\nconst shallowReactiveMap = new WeakMap();\r\nconst readonlyMap = new WeakMap();\r\nconst shallowReadonlyMap = new WeakMap();\r\nfunction targetTypeMap(rawType) {\r\n    switch (rawType) {\r\n        case 'Object':\r\n        case 'Array':\r\n            return 1 /* COMMON */;\r\n        case 'Map':\r\n        case 'Set':\r\n        case 'WeakMap':\r\n        case 'WeakSet':\r\n            return 2 /* COLLECTION */;\r\n        default:\r\n            return 0 /* INVALID */;\r\n    }\r\n}\r\nfunction getTargetType(value) {\r\n    return value[\"__v_skip\" /* SKIP */] || !Object.isExtensible(value)\r\n        ? 0 /* INVALID */\r\n        : targetTypeMap(toRawType(value));\r\n}\r\nfunction reactive(target) {\r\n    // if trying to observe a readonly proxy, return the readonly version.\r\n    if (target && target[\"__v_isReadonly\" /* IS_READONLY */]) {\r\n        return target;\r\n    }\r\n    return createReactiveObject(target, false, mutableHandlers, mutableCollectionHandlers, reactiveMap);\r\n}\r\n/**\r\n * Return a shallowly-reactive copy of the original object, where only the root\r\n * level properties are reactive. It also does not auto-unwrap refs (even at the\r\n * root level).\r\n */\r\nfunction shallowReactive(target) {\r\n    return createReactiveObject(target, false, shallowReactiveHandlers, shallowCollectionHandlers, shallowReactiveMap);\r\n}\r\n/**\r\n * Creates a readonly copy of the original object. Note the returned copy is not\r\n * made reactive, but `readonly` can be called on an already reactive object.\r\n */\r\nfunction readonly(target) {\r\n    return createReactiveObject(target, true, readonlyHandlers, readonlyCollectionHandlers, readonlyMap);\r\n}\r\n/**\r\n * Returns a reactive-copy of the original object, where only the root level\r\n * properties are readonly, and does NOT unwrap refs nor recursively convert\r\n * returned properties.\r\n * This is used for creating the props proxy object for stateful components.\r\n */\r\nfunction shallowReadonly(target) {\r\n    return createReactiveObject(target, true, shallowReadonlyHandlers, shallowReadonlyCollectionHandlers, shallowReadonlyMap);\r\n}\r\nfunction createReactiveObject(target, isReadonly, baseHandlers, collectionHandlers, proxyMap) {\r\n    if (!isObject(target)) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            console.warn(`value cannot be made reactive: ${String(target)}`);\r\n        }\r\n        return target;\r\n    }\r\n    // target is already a Proxy, return it.\r\n    // exception: calling readonly() on a reactive object\r\n    if (target[\"__v_raw\" /* RAW */] &&\r\n        !(isReadonly && target[\"__v_isReactive\" /* IS_REACTIVE */])) {\r\n        return target;\r\n    }\r\n    // target already has corresponding Proxy\r\n    const existingProxy = proxyMap.get(target);\r\n    if (existingProxy) {\r\n        return existingProxy;\r\n    }\r\n    // only a whitelist of value types can be observed.\r\n    const targetType = getTargetType(target);\r\n    if (targetType === 0 /* INVALID */) {\r\n        return target;\r\n    }\r\n    const proxy = new Proxy(target, targetType === 2 /* COLLECTION */ ? collectionHandlers : baseHandlers);\r\n    proxyMap.set(target, proxy);\r\n    return proxy;\r\n}\r\nfunction isReactive(value) {\r\n    if (isReadonly(value)) {\r\n        return isReactive(value[\"__v_raw\" /* RAW */]);\r\n    }\r\n    return !!(value && value[\"__v_isReactive\" /* IS_REACTIVE */]);\r\n}\r\nfunction isReadonly(value) {\r\n    return !!(value && value[\"__v_isReadonly\" /* IS_READONLY */]);\r\n}\r\nfunction isProxy(value) {\r\n    return isReactive(value) || isReadonly(value);\r\n}\r\nfunction toRaw(observed) {\r\n    return ((observed && toRaw(observed[\"__v_raw\" /* RAW */])) || observed);\r\n}\r\nfunction markRaw(value) {\r\n    def(value, \"__v_skip\" /* SKIP */, true);\r\n    return value;\r\n}\n\nconst convert = (val) => isObject(val) ? reactive(val) : val;\r\nfunction isRef(r) {\r\n    return Boolean(r && r.__v_isRef === true);\r\n}\r\nfunction ref(value) {\r\n    return createRef(value);\r\n}\r\nfunction shallowRef(value) {\r\n    return createRef(value, true);\r\n}\r\nclass RefImpl {\r\n    constructor(_rawValue, _shallow) {\r\n        this._rawValue = _rawValue;\r\n        this._shallow = _shallow;\r\n        this.__v_isRef = true;\r\n        this._value = _shallow ? _rawValue : convert(_rawValue);\r\n    }\r\n    get value() {\r\n        track(toRaw(this), \"get\" /* GET */, 'value');\r\n        return this._value;\r\n    }\r\n    set value(newVal) {\r\n        if (hasChanged(toRaw(newVal), this._rawValue)) {\r\n            this._rawValue = newVal;\r\n            this._value = this._shallow ? newVal : convert(newVal);\r\n            trigger(toRaw(this), \"set\" /* SET */, 'value', newVal);\r\n        }\r\n    }\r\n}\r\nfunction createRef(rawValue, shallow = false) {\r\n    if (isRef(rawValue)) {\r\n        return rawValue;\r\n    }\r\n    return new RefImpl(rawValue, shallow);\r\n}\r\nfunction triggerRef(ref) {\r\n    trigger(toRaw(ref), \"set\" /* SET */, 'value', (process.env.NODE_ENV !== 'production') ? ref.value : void 0);\r\n}\r\nfunction unref(ref) {\r\n    return isRef(ref) ? ref.value : ref;\r\n}\r\nconst shallowUnwrapHandlers = {\r\n    get: (target, key, receiver) => unref(Reflect.get(target, key, receiver)),\r\n    set: (target, key, value, receiver) => {\r\n        const oldValue = target[key];\r\n        if (isRef(oldValue) && !isRef(value)) {\r\n            oldValue.value = value;\r\n            return true;\r\n        }\r\n        else {\r\n            return Reflect.set(target, key, value, receiver);\r\n        }\r\n    }\r\n};\r\nfunction proxyRefs(objectWithRefs) {\r\n    return isReactive(objectWithRefs)\r\n        ? objectWithRefs\r\n        : new Proxy(objectWithRefs, shallowUnwrapHandlers);\r\n}\r\nclass CustomRefImpl {\r\n    constructor(factory) {\r\n        this.__v_isRef = true;\r\n        const { get, set } = factory(() => track(this, \"get\" /* GET */, 'value'), () => trigger(this, \"set\" /* SET */, 'value'));\r\n        this._get = get;\r\n        this._set = set;\r\n    }\r\n    get value() {\r\n        return this._get();\r\n    }\r\n    set value(newVal) {\r\n        this._set(newVal);\r\n    }\r\n}\r\nfunction customRef(factory) {\r\n    return new CustomRefImpl(factory);\r\n}\r\nfunction toRefs(object) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isProxy(object)) {\r\n        console.warn(`toRefs() expects a reactive object but received a plain one.`);\r\n    }\r\n    const ret = isArray(object) ? new Array(object.length) : {};\r\n    for (const key in object) {\r\n        ret[key] = toRef(object, key);\r\n    }\r\n    return ret;\r\n}\r\nclass ObjectRefImpl {\r\n    constructor(_object, _key) {\r\n        this._object = _object;\r\n        this._key = _key;\r\n        this.__v_isRef = true;\r\n    }\r\n    get value() {\r\n        return this._object[this._key];\r\n    }\r\n    set value(newVal) {\r\n        this._object[this._key] = newVal;\r\n    }\r\n}\r\nfunction toRef(object, key) {\r\n    return isRef(object[key])\r\n        ? object[key]\r\n        : new ObjectRefImpl(object, key);\r\n}\n\nclass ComputedRefImpl {\r\n    constructor(getter, _setter, isReadonly) {\r\n        this._setter = _setter;\r\n        this._dirty = true;\r\n        this.__v_isRef = true;\r\n        this.effect = effect(getter, {\r\n            lazy: true,\r\n            scheduler: () => {\r\n                if (!this._dirty) {\r\n                    this._dirty = true;\r\n                    trigger(toRaw(this), \"set\" /* SET */, 'value');\r\n                }\r\n            }\r\n        });\r\n        this[\"__v_isReadonly\" /* IS_READONLY */] = isReadonly;\r\n    }\r\n    get value() {\r\n        // the computed ref may get wrapped by other proxies e.g. readonly() #3376\r\n        const self = toRaw(this);\r\n        if (self._dirty) {\r\n            self._value = this.effect();\r\n            self._dirty = false;\r\n        }\r\n        track(self, \"get\" /* GET */, 'value');\r\n        return self._value;\r\n    }\r\n    set value(newValue) {\r\n        this._setter(newValue);\r\n    }\r\n}\r\nfunction computed(getterOrOptions) {\r\n    let getter;\r\n    let setter;\r\n    if (isFunction(getterOrOptions)) {\r\n        getter = getterOrOptions;\r\n        setter = (process.env.NODE_ENV !== 'production')\r\n            ? () => {\r\n                console.warn('Write operation failed: computed value is readonly');\r\n            }\r\n            : NOOP;\r\n    }\r\n    else {\r\n        getter = getterOrOptions.get;\r\n        setter = getterOrOptions.set;\r\n    }\r\n    return new ComputedRefImpl(getter, setter, isFunction(getterOrOptions) || !getterOrOptions.set);\r\n}\n\nexport { ITERATE_KEY, computed, customRef, effect, enableTracking, isProxy, isReactive, isReadonly, isRef, markRaw, pauseTracking, proxyRefs, reactive, readonly, ref, resetTracking, shallowReactive, shallowReadonly, shallowRef, stop, toRaw, toRef, toRefs, track, trigger, triggerRef, unref };\n","import { pauseTracking, resetTracking, isRef, toRaw, isReactive, effect, stop, ref, reactive, shallowReactive, trigger, isProxy, shallowReadonly, track, markRaw, proxyRefs, computed as computed$1, isReadonly } from '@vue/reactivity';\nexport { customRef, isProxy, isReactive, isReadonly, isRef, markRaw, proxyRefs, reactive, readonly, ref, shallowReactive, shallowReadonly, shallowRef, toRaw, toRef, toRefs, triggerRef, unref } from '@vue/reactivity';\nimport { isString, isFunction as isFunction$1, isPromise as isPromise$1, isArray, extend, hasOwn, EMPTY_OBJ, toHandlerKey, toNumber, hyphenate, camelize, isOn, isModelListener, remove, NOOP, hasChanged, isObject as isObject$1, isSet, isMap, isPlainObject, invokeArrayFns, def, isReservedProp, EMPTY_ARR, capitalize, toRawType, makeMap, NO, getGlobalThis, normalizeClass, normalizeStyle, isGloballyWhitelisted } from '@vue/shared';\nexport { camelize, capitalize, toDisplayString, toHandlerKey } from '@vue/shared';\n\nconst stack = [];\r\nfunction pushWarningContext(vnode) {\r\n    stack.push(vnode);\r\n}\r\nfunction popWarningContext() {\r\n    stack.pop();\r\n}\r\nfunction warn(msg, ...args) {\r\n    // avoid props formatting or warn handler tracking deps that might be mutated\r\n    // during patch, leading to infinite recursion.\r\n    pauseTracking();\r\n    const instance = stack.length ? stack[stack.length - 1].component : null;\r\n    const appWarnHandler = instance && instance.appContext.config.warnHandler;\r\n    const trace = getComponentTrace();\r\n    if (appWarnHandler) {\r\n        callWithErrorHandling(appWarnHandler, instance, 11 /* APP_WARN_HANDLER */, [\r\n            msg + args.join(''),\r\n            instance && instance.proxy,\r\n            trace\r\n                .map(({ vnode }) => `at <${formatComponentName(instance, vnode.type)}>`)\r\n                .join('\\n'),\r\n            trace\r\n        ]);\r\n    }\r\n    else {\r\n        const warnArgs = [`[Vue warn]: ${msg}`, ...args];\r\n        /* istanbul ignore if */\r\n        if (trace.length &&\r\n            // avoid spamming console during tests\r\n            !false) {\r\n            warnArgs.push(`\\n`, ...formatTrace(trace));\r\n        }\r\n        console.warn(...warnArgs);\r\n    }\r\n    resetTracking();\r\n}\r\nfunction getComponentTrace() {\r\n    let currentVNode = stack[stack.length - 1];\r\n    if (!currentVNode) {\r\n        return [];\r\n    }\r\n    // we can't just use the stack because it will be incomplete during updates\r\n    // that did not start from the root. Re-construct the parent chain using\r\n    // instance parent pointers.\r\n    const normalizedStack = [];\r\n    while (currentVNode) {\r\n        const last = normalizedStack[0];\r\n        if (last && last.vnode === currentVNode) {\r\n            last.recurseCount++;\r\n        }\r\n        else {\r\n            normalizedStack.push({\r\n                vnode: currentVNode,\r\n                recurseCount: 0\r\n            });\r\n        }\r\n        const parentInstance = currentVNode.component && currentVNode.component.parent;\r\n        currentVNode = parentInstance && parentInstance.vnode;\r\n    }\r\n    return normalizedStack;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatTrace(trace) {\r\n    const logs = [];\r\n    trace.forEach((entry, i) => {\r\n        logs.push(...(i === 0 ? [] : [`\\n`]), ...formatTraceEntry(entry));\r\n    });\r\n    return logs;\r\n}\r\nfunction formatTraceEntry({ vnode, recurseCount }) {\r\n    const postfix = recurseCount > 0 ? `... (${recurseCount} recursive calls)` : ``;\r\n    const isRoot = vnode.component ? vnode.component.parent == null : false;\r\n    const open = ` at <${formatComponentName(vnode.component, vnode.type, isRoot)}`;\r\n    const close = `>` + postfix;\r\n    return vnode.props\r\n        ? [open, ...formatProps(vnode.props), close]\r\n        : [open + close];\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProps(props) {\r\n    const res = [];\r\n    const keys = Object.keys(props);\r\n    keys.slice(0, 3).forEach(key => {\r\n        res.push(...formatProp(key, props[key]));\r\n    });\r\n    if (keys.length > 3) {\r\n        res.push(` ...`);\r\n    }\r\n    return res;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatProp(key, value, raw) {\r\n    if (isString(value)) {\r\n        value = JSON.stringify(value);\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (typeof value === 'number' ||\r\n        typeof value === 'boolean' ||\r\n        value == null) {\r\n        return raw ? value : [`${key}=${value}`];\r\n    }\r\n    else if (isRef(value)) {\r\n        value = formatProp(key, toRaw(value.value), true);\r\n        return raw ? value : [`${key}=Ref<`, value, `>`];\r\n    }\r\n    else if (isFunction$1(value)) {\r\n        return [`${key}=fn${value.name ? `<${value.name}>` : ``}`];\r\n    }\r\n    else {\r\n        value = toRaw(value);\r\n        return raw ? value : [`${key}=`, value];\r\n    }\r\n}\n\nconst ErrorTypeStrings = {\r\n    [\"sp\" /* SERVER_PREFETCH */]: 'serverPrefetch hook',\r\n    [\"bc\" /* BEFORE_CREATE */]: 'beforeCreate hook',\r\n    [\"c\" /* CREATED */]: 'created hook',\r\n    [\"bm\" /* BEFORE_MOUNT */]: 'beforeMount hook',\r\n    [\"m\" /* MOUNTED */]: 'mounted hook',\r\n    [\"bu\" /* BEFORE_UPDATE */]: 'beforeUpdate hook',\r\n    [\"u\" /* UPDATED */]: 'updated',\r\n    [\"bum\" /* BEFORE_UNMOUNT */]: 'beforeUnmount hook',\r\n    [\"um\" /* UNMOUNTED */]: 'unmounted hook',\r\n    [\"a\" /* ACTIVATED */]: 'activated hook',\r\n    [\"da\" /* DEACTIVATED */]: 'deactivated hook',\r\n    [\"ec\" /* ERROR_CAPTURED */]: 'errorCaptured hook',\r\n    [\"rtc\" /* RENDER_TRACKED */]: 'renderTracked hook',\r\n    [\"rtg\" /* RENDER_TRIGGERED */]: 'renderTriggered hook',\r\n    [0 /* SETUP_FUNCTION */]: 'setup function',\r\n    [1 /* RENDER_FUNCTION */]: 'render function',\r\n    [2 /* WATCH_GETTER */]: 'watcher getter',\r\n    [3 /* WATCH_CALLBACK */]: 'watcher callback',\r\n    [4 /* WATCH_CLEANUP */]: 'watcher cleanup function',\r\n    [5 /* NATIVE_EVENT_HANDLER */]: 'native event handler',\r\n    [6 /* COMPONENT_EVENT_HANDLER */]: 'component event handler',\r\n    [7 /* VNODE_HOOK */]: 'vnode hook',\r\n    [8 /* DIRECTIVE_HOOK */]: 'directive hook',\r\n    [9 /* TRANSITION_HOOK */]: 'transition hook',\r\n    [10 /* APP_ERROR_HANDLER */]: 'app errorHandler',\r\n    [11 /* APP_WARN_HANDLER */]: 'app warnHandler',\r\n    [12 /* FUNCTION_REF */]: 'ref function',\r\n    [13 /* ASYNC_COMPONENT_LOADER */]: 'async component loader',\r\n    [14 /* SCHEDULER */]: 'scheduler flush. This is likely a Vue internals bug. ' +\r\n        'Please open an issue at https://new-issue.vuejs.org/?repo=vuejs/vue-next'\r\n};\r\nfunction callWithErrorHandling(fn, instance, type, args) {\r\n    let res;\r\n    try {\r\n        res = args ? fn(...args) : fn();\r\n    }\r\n    catch (err) {\r\n        handleError(err, instance, type);\r\n    }\r\n    return res;\r\n}\r\nfunction callWithAsyncErrorHandling(fn, instance, type, args) {\r\n    if (isFunction$1(fn)) {\r\n        const res = callWithErrorHandling(fn, instance, type, args);\r\n        if (res && isPromise$1(res)) {\r\n            res.catch(err => {\r\n                handleError(err, instance, type);\r\n            });\r\n        }\r\n        return res;\r\n    }\r\n    const values = [];\r\n    for (let i = 0; i < fn.length; i++) {\r\n        values.push(callWithAsyncErrorHandling(fn[i], instance, type, args));\r\n    }\r\n    return values;\r\n}\r\nfunction handleError(err, instance, type, throwInDev = true) {\r\n    const contextVNode = instance ? instance.vnode : null;\r\n    if (instance) {\r\n        let cur = instance.parent;\r\n        // the exposed instance is the render proxy to keep it consistent with 2.x\r\n        const exposedInstance = instance.proxy;\r\n        // in production the hook receives only the error code\r\n        const errorInfo = (process.env.NODE_ENV !== 'production') ? ErrorTypeStrings[type] : type;\r\n        while (cur) {\r\n            const errorCapturedHooks = cur.ec;\r\n            if (errorCapturedHooks) {\r\n                for (let i = 0; i < errorCapturedHooks.length; i++) {\r\n                    if (errorCapturedHooks[i](err, exposedInstance, errorInfo) === false) {\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            cur = cur.parent;\r\n        }\r\n        // app-level handling\r\n        const appErrorHandler = instance.appContext.config.errorHandler;\r\n        if (appErrorHandler) {\r\n            callWithErrorHandling(appErrorHandler, null, 10 /* APP_ERROR_HANDLER */, [err, exposedInstance, errorInfo]);\r\n            return;\r\n        }\r\n    }\r\n    logError(err, type, contextVNode, throwInDev);\r\n}\r\nfunction logError(err, type, contextVNode, throwInDev = true) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const info = ErrorTypeStrings[type];\r\n        if (contextVNode) {\r\n            pushWarningContext(contextVNode);\r\n        }\r\n        warn(`Unhandled error${info ? ` during execution of ${info}` : ``}`);\r\n        if (contextVNode) {\r\n            popWarningContext();\r\n        }\r\n        // crash in dev by default so it's more noticeable\r\n        if (throwInDev) {\r\n            throw err;\r\n        }\r\n        else {\r\n            console.error(err);\r\n        }\r\n    }\r\n    else {\r\n        // recover in prod to reduce the impact on end-user\r\n        console.error(err);\r\n    }\r\n}\n\nlet isFlushing = false;\r\nlet isFlushPending = false;\r\nconst queue = [];\r\nlet flushIndex = 0;\r\nconst pendingPreFlushCbs = [];\r\nlet activePreFlushCbs = null;\r\nlet preFlushIndex = 0;\r\nconst pendingPostFlushCbs = [];\r\nlet activePostFlushCbs = null;\r\nlet postFlushIndex = 0;\r\nconst resolvedPromise = Promise.resolve();\r\nlet currentFlushPromise = null;\r\nlet currentPreFlushParentJob = null;\r\nconst RECURSION_LIMIT = 100;\r\nfunction nextTick(fn) {\r\n    const p = currentFlushPromise || resolvedPromise;\r\n    return fn ? p.then(this ? fn.bind(this) : fn) : p;\r\n}\r\n// #2768\r\n// Use binary-search to find a suitable position in the queue,\r\n// so that the queue maintains the increasing order of job's id,\r\n// which can prevent the job from being skipped and also can avoid repeated patching.\r\nfunction findInsertionIndex(job) {\r\n    // the start index should be `flushIndex + 1`\r\n    let start = flushIndex + 1;\r\n    let end = queue.length;\r\n    const jobId = getId(job);\r\n    while (start < end) {\r\n        const middle = (start + end) >>> 1;\r\n        const middleJobId = getId(queue[middle]);\r\n        middleJobId < jobId ? (start = middle + 1) : (end = middle);\r\n    }\r\n    return start;\r\n}\r\nfunction queueJob(job) {\r\n    // the dedupe search uses the startIndex argument of Array.includes()\r\n    // by default the search index includes the current job that is being run\r\n    // so it cannot recursively trigger itself again.\r\n    // if the job is a watch() callback, the search will start with a +1 index to\r\n    // allow it recursively trigger itself - it is the user's responsibility to\r\n    // ensure it doesn't end up in an infinite loop.\r\n    if ((!queue.length ||\r\n        !queue.includes(job, isFlushing && job.allowRecurse ? flushIndex + 1 : flushIndex)) &&\r\n        job !== currentPreFlushParentJob) {\r\n        const pos = findInsertionIndex(job);\r\n        if (pos > -1) {\r\n            queue.splice(pos, 0, job);\r\n        }\r\n        else {\r\n            queue.push(job);\r\n        }\r\n        queueFlush();\r\n    }\r\n}\r\nfunction queueFlush() {\r\n    if (!isFlushing && !isFlushPending) {\r\n        isFlushPending = true;\r\n        currentFlushPromise = resolvedPromise.then(flushJobs);\r\n    }\r\n}\r\nfunction invalidateJob(job) {\r\n    const i = queue.indexOf(job);\r\n    if (i > flushIndex) {\r\n        queue.splice(i, 1);\r\n    }\r\n}\r\nfunction queueCb(cb, activeQueue, pendingQueue, index) {\r\n    if (!isArray(cb)) {\r\n        if (!activeQueue ||\r\n            !activeQueue.includes(cb, cb.allowRecurse ? index + 1 : index)) {\r\n            pendingQueue.push(cb);\r\n        }\r\n    }\r\n    else {\r\n        // if cb is an array, it is a component lifecycle hook which can only be\r\n        // triggered by a job, which is already deduped in the main queue, so\r\n        // we can skip duplicate check here to improve perf\r\n        pendingQueue.push(...cb);\r\n    }\r\n    queueFlush();\r\n}\r\nfunction queuePreFlushCb(cb) {\r\n    queueCb(cb, activePreFlushCbs, pendingPreFlushCbs, preFlushIndex);\r\n}\r\nfunction queuePostFlushCb(cb) {\r\n    queueCb(cb, activePostFlushCbs, pendingPostFlushCbs, postFlushIndex);\r\n}\r\nfunction flushPreFlushCbs(seen, parentJob = null) {\r\n    if (pendingPreFlushCbs.length) {\r\n        currentPreFlushParentJob = parentJob;\r\n        activePreFlushCbs = [...new Set(pendingPreFlushCbs)];\r\n        pendingPreFlushCbs.length = 0;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        for (preFlushIndex = 0; preFlushIndex < activePreFlushCbs.length; preFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePreFlushCbs[preFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePreFlushCbs[preFlushIndex]();\r\n        }\r\n        activePreFlushCbs = null;\r\n        preFlushIndex = 0;\r\n        currentPreFlushParentJob = null;\r\n        // recursively flush until it drains\r\n        flushPreFlushCbs(seen, parentJob);\r\n    }\r\n}\r\nfunction flushPostFlushCbs(seen) {\r\n    if (pendingPostFlushCbs.length) {\r\n        const deduped = [...new Set(pendingPostFlushCbs)];\r\n        pendingPostFlushCbs.length = 0;\r\n        // #1947 already has active queue, nested flushPostFlushCbs call\r\n        if (activePostFlushCbs) {\r\n            activePostFlushCbs.push(...deduped);\r\n            return;\r\n        }\r\n        activePostFlushCbs = deduped;\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            seen = seen || new Map();\r\n        }\r\n        activePostFlushCbs.sort((a, b) => getId(a) - getId(b));\r\n        for (postFlushIndex = 0; postFlushIndex < activePostFlushCbs.length; postFlushIndex++) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                checkRecursiveUpdates(seen, activePostFlushCbs[postFlushIndex])) {\r\n                continue;\r\n            }\r\n            activePostFlushCbs[postFlushIndex]();\r\n        }\r\n        activePostFlushCbs = null;\r\n        postFlushIndex = 0;\r\n    }\r\n}\r\nconst getId = (job) => job.id == null ? Infinity : job.id;\r\nfunction flushJobs(seen) {\r\n    isFlushPending = false;\r\n    isFlushing = true;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        seen = seen || new Map();\r\n    }\r\n    flushPreFlushCbs(seen);\r\n    // Sort queue before flush.\r\n    // This ensures that:\r\n    // 1. Components are updated from parent to child. (because parent is always\r\n    //    created before the child so its render effect will have smaller\r\n    //    priority number)\r\n    // 2. If a component is unmounted during a parent component's update,\r\n    //    its update can be skipped.\r\n    queue.sort((a, b) => getId(a) - getId(b));\r\n    try {\r\n        for (flushIndex = 0; flushIndex < queue.length; flushIndex++) {\r\n            const job = queue[flushIndex];\r\n            if (job && job.active !== false) {\r\n                if ((process.env.NODE_ENV !== 'production') && checkRecursiveUpdates(seen, job)) {\r\n                    continue;\r\n                }\r\n                callWithErrorHandling(job, null, 14 /* SCHEDULER */);\r\n            }\r\n        }\r\n    }\r\n    finally {\r\n        flushIndex = 0;\r\n        queue.length = 0;\r\n        flushPostFlushCbs(seen);\r\n        isFlushing = false;\r\n        currentFlushPromise = null;\r\n        // some postFlushCb queued jobs!\r\n        // keep flushing until it drains.\r\n        if (queue.length ||\r\n            pendingPreFlushCbs.length ||\r\n            pendingPostFlushCbs.length) {\r\n            flushJobs(seen);\r\n        }\r\n    }\r\n}\r\nfunction checkRecursiveUpdates(seen, fn) {\r\n    if (!seen.has(fn)) {\r\n        seen.set(fn, 1);\r\n    }\r\n    else {\r\n        const count = seen.get(fn);\r\n        if (count > RECURSION_LIMIT) {\r\n            const instance = fn.ownerInstance;\r\n            const componentName = instance && getComponentName(instance.type);\r\n            warn(`Maximum recursive updates exceeded${componentName ? ` in component <${componentName}>` : ``}. ` +\r\n                `This means you have a reactive effect that is mutating its own ` +\r\n                `dependencies and thus recursively triggering itself. Possible sources ` +\r\n                `include component template, render function, updated hook or ` +\r\n                `watcher source function.`);\r\n            return true;\r\n        }\r\n        else {\r\n            seen.set(fn, count + 1);\r\n        }\r\n    }\r\n}\n\n/* eslint-disable no-restricted-globals */\r\nlet isHmrUpdating = false;\r\nconst hmrDirtyComponents = new Set();\r\n// Expose the HMR runtime on the global object\r\n// This makes it entirely tree-shakable without polluting the exports and makes\r\n// it easier to be used in toolings like vue-loader\r\n// Note: for a component to be eligible for HMR it also needs the __hmrId option\r\n// to be set so that its instances can be registered / removed.\r\nif ((process.env.NODE_ENV !== 'production')) {\r\n    const globalObject = typeof global !== 'undefined'\r\n        ? global\r\n        : typeof self !== 'undefined'\r\n            ? self\r\n            : typeof window !== 'undefined'\r\n                ? window\r\n                : {};\r\n    globalObject.__VUE_HMR_RUNTIME__ = {\r\n        createRecord: tryWrap(createRecord),\r\n        rerender: tryWrap(rerender),\r\n        reload: tryWrap(reload)\r\n    };\r\n}\r\nconst map = new Map();\r\nfunction registerHMR(instance) {\r\n    const id = instance.type.__hmrId;\r\n    let record = map.get(id);\r\n    if (!record) {\r\n        createRecord(id, instance.type);\r\n        record = map.get(id);\r\n    }\r\n    record.instances.add(instance);\r\n}\r\nfunction unregisterHMR(instance) {\r\n    map.get(instance.type.__hmrId).instances.delete(instance);\r\n}\r\nfunction createRecord(id, component) {\r\n    if (!component) {\r\n        warn(`HMR API usage is out of date.\\n` +\r\n            `Please upgrade vue-loader/vite/rollup-plugin-vue or other relevant ` +\r\n            `dependency that handles Vue SFC compilation.`);\r\n        component = {};\r\n    }\r\n    if (map.has(id)) {\r\n        return false;\r\n    }\r\n    map.set(id, {\r\n        component: isClassComponent(component) ? component.__vccOpts : component,\r\n        instances: new Set()\r\n    });\r\n    return true;\r\n}\r\nfunction rerender(id, newRender) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    if (newRender)\r\n        record.component.render = newRender;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    Array.from(record.instances).forEach(instance => {\r\n        if (newRender) {\r\n            instance.render = newRender;\r\n        }\r\n        instance.renderCache = [];\r\n        // this flag forces child components with slot content to update\r\n        isHmrUpdating = true;\r\n        instance.update();\r\n        isHmrUpdating = false;\r\n    });\r\n}\r\nfunction reload(id, newComp) {\r\n    const record = map.get(id);\r\n    if (!record)\r\n        return;\r\n    // Array.from creates a snapshot which avoids the set being mutated during\r\n    // updates\r\n    const { component, instances } = record;\r\n    if (!hmrDirtyComponents.has(component)) {\r\n        // 1. Update existing comp definition to match new one\r\n        newComp = isClassComponent(newComp) ? newComp.__vccOpts : newComp;\r\n        extend(component, newComp);\r\n        for (const key in component) {\r\n            if (key !== '__file' && !(key in newComp)) {\r\n                delete component[key];\r\n            }\r\n        }\r\n        // 2. Mark component dirty. This forces the renderer to replace the component\r\n        // on patch.\r\n        hmrDirtyComponents.add(component);\r\n        // 3. Make sure to unmark the component after the reload.\r\n        queuePostFlushCb(() => {\r\n            hmrDirtyComponents.delete(component);\r\n        });\r\n    }\r\n    Array.from(instances).forEach(instance => {\r\n        if (instance.parent) {\r\n            // 4. Force the parent instance to re-render. This will cause all updated\r\n            // components to be unmounted and re-mounted. Queue the update so that we\r\n            // don't end up forcing the same parent to re-render multiple times.\r\n            queueJob(instance.parent.update);\r\n        }\r\n        else if (instance.appContext.reload) {\r\n            // root instance mounted via createApp() has a reload method\r\n            instance.appContext.reload();\r\n        }\r\n        else if (typeof window !== 'undefined') {\r\n            // root instance inside tree created via raw render(). Force reload.\r\n            window.location.reload();\r\n        }\r\n        else {\r\n            console.warn('[HMR] Root or manually mounted instance modified. Full reload required.');\r\n        }\r\n    });\r\n}\r\nfunction tryWrap(fn) {\r\n    return (id, arg) => {\r\n        try {\r\n            return fn(id, arg);\r\n        }\r\n        catch (e) {\r\n            console.error(e);\r\n            console.warn(`[HMR] Something went wrong during Vue component hot-reload. ` +\r\n                `Full reload required.`);\r\n        }\r\n    };\r\n}\n\nlet devtools;\r\nfunction setDevtoolsHook(hook) {\r\n    devtools = hook;\r\n}\r\nfunction devtoolsInitApp(app, version) {\r\n    // TODO queue if devtools is undefined\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:init\" /* APP_INIT */, app, version, {\r\n        Fragment,\r\n        Text,\r\n        Comment: Comment$1,\r\n        Static\r\n    });\r\n}\r\nfunction devtoolsUnmountApp(app) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"app:unmount\" /* APP_UNMOUNT */, app);\r\n}\r\nconst devtoolsComponentAdded = /*#__PURE__*/ createDevtoolsComponentHook(\"component:added\" /* COMPONENT_ADDED */);\r\nconst devtoolsComponentUpdated = /*#__PURE__*/ createDevtoolsComponentHook(\"component:updated\" /* COMPONENT_UPDATED */);\r\nconst devtoolsComponentRemoved = /*#__PURE__*/ createDevtoolsComponentHook(\"component:removed\" /* COMPONENT_REMOVED */);\r\nfunction createDevtoolsComponentHook(hook) {\r\n    return (component) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component.parent ? component.parent.uid : undefined, component);\r\n    };\r\n}\r\nconst devtoolsPerfStart = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:start\" /* PERFORMANCE_START */);\r\nconst devtoolsPerfEnd = /*#__PURE__*/ createDevtoolsPerformanceHook(\"perf:end\" /* PERFORMANCE_END */);\r\nfunction createDevtoolsPerformanceHook(hook) {\r\n    return (component, type, time) => {\r\n        if (!devtools)\r\n            return;\r\n        devtools.emit(hook, component.appContext.app, component.uid, component, type, time);\r\n    };\r\n}\r\nfunction devtoolsComponentEmit(component, event, params) {\r\n    if (!devtools)\r\n        return;\r\n    devtools.emit(\"component:emit\" /* COMPONENT_EMIT */, component.appContext.app, component, event, params);\r\n}\n\nconst deprecationData = {\r\n    [\"GLOBAL_MOUNT\" /* GLOBAL_MOUNT */]: {\r\n        message: `The global app bootstrapping API has changed: vm.$mount() and the \"el\" ` +\r\n            `option have been removed. Use createApp(RootComponent).mount() instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#mounting-app-instance`\r\n    },\r\n    [\"GLOBAL_MOUNT_CONTAINER\" /* GLOBAL_MOUNT_CONTAINER */]: {\r\n        message: `Vue detected directives on the mount container. ` +\r\n            `In Vue 3, the container is no longer considered part of the template ` +\r\n            `and will not be processed/replaced.`,\r\n        link: `https://v3.vuejs.org/guide/migration/mount-changes.html`\r\n    },\r\n    [\"GLOBAL_EXTEND\" /* GLOBAL_EXTEND */]: {\r\n        message: `Vue.extend() has been removed in Vue 3. ` +\r\n            `Use defineComponent() instead.`,\r\n        link: `https://v3.vuejs.org/api/global-api.html#definecomponent`\r\n    },\r\n    [\"GLOBAL_PROTOTYPE\" /* GLOBAL_PROTOTYPE */]: {\r\n        message: `Vue.prototype is no longer available in Vue 3. ` +\r\n            `Use app.config.globalProperties instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#vue-prototype-replaced-by-config-globalproperties`\r\n    },\r\n    [\"GLOBAL_SET\" /* GLOBAL_SET */]: {\r\n        message: `Vue.set() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"GLOBAL_DELETE\" /* GLOBAL_DELETE */]: {\r\n        message: `Vue.delete() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"GLOBAL_OBSERVABLE\" /* GLOBAL_OBSERVABLE */]: {\r\n        message: `Vue.observable() has been removed. ` +\r\n            `Use \\`import { reactive } from \"vue\"\\` from Composition API instead.`,\r\n        link: `https://v3.vuejs.org/api/basic-reactivity.html`\r\n    },\r\n    [\"GLOBAL_PRIVATE_UTIL\" /* GLOBAL_PRIVATE_UTIL */]: {\r\n        message: `Vue.util has been removed. Please refactor to avoid its usage ` +\r\n            `since it was an internal API even in Vue 2.`\r\n    },\r\n    [\"CONFIG_SILENT\" /* CONFIG_SILENT */]: {\r\n        message: `config.silent has been removed because it is not good practice to ` +\r\n            `intentionally suppress warnings. You can use your browser console's ` +\r\n            `filter features to focus on relevant messages.`\r\n    },\r\n    [\"CONFIG_DEVTOOLS\" /* CONFIG_DEVTOOLS */]: {\r\n        message: `config.devtools has been removed. To enable devtools for ` +\r\n            `production, configure the __VUE_PROD_DEVTOOLS__ compile-time flag.`,\r\n        link: `https://github.com/vuejs/vue-next/tree/master/packages/vue#bundler-build-feature-flags`\r\n    },\r\n    [\"CONFIG_KEY_CODES\" /* CONFIG_KEY_CODES */]: {\r\n        message: `config.keyCodes has been removed. ` +\r\n            `In Vue 3, you can directly use the kebab-case key names as v-on modifiers.`,\r\n        link: `https://v3.vuejs.org/guide/migration/keycode-modifiers.html`\r\n    },\r\n    [\"CONFIG_PRODUCTION_TIP\" /* CONFIG_PRODUCTION_TIP */]: {\r\n        message: `config.productionTip has been removed.`,\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#config-productiontip-removed`\r\n    },\r\n    [\"CONFIG_IGNORED_ELEMENTS\" /* CONFIG_IGNORED_ELEMENTS */]: {\r\n        message: () => {\r\n            let msg = `config.ignoredElements has been removed.`;\r\n            if (isRuntimeOnly()) {\r\n                msg += ` Pass the \"isCustomElement\" option to @vue/compiler-dom instead.`;\r\n            }\r\n            else {\r\n                msg += ` Use config.isCustomElement instead.`;\r\n            }\r\n            return msg;\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/global-api.html#config-ignoredelements-is-now-config-iscustomelement`\r\n    },\r\n    [\"CONFIG_WHITESPACE\" /* CONFIG_WHITESPACE */]: {\r\n        // this warning is only relevant in the full build when using runtime\r\n        // compilation, so it's put in the runtime compatConfig list.\r\n        message: `Vue 3 compiler's whitespace option will default to \"condense\" instead of ` +\r\n            `\"preserve\". To suppress this warning, provide an explicit value for ` +\r\n            `\\`config.compilerOptions.whitespace\\`.`\r\n    },\r\n    [\"CONFIG_OPTION_MERGE_STRATS\" /* CONFIG_OPTION_MERGE_STRATS */]: {\r\n        message: `config.optionMergeStrategies no longer exposes internal strategies. ` +\r\n            `Use custom merge functions instead.`\r\n    },\r\n    [\"INSTANCE_SET\" /* INSTANCE_SET */]: {\r\n        message: `vm.$set() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"INSTANCE_DELETE\" /* INSTANCE_DELETE */]: {\r\n        message: `vm.$delete() has been removed as it is no longer needed in Vue 3. ` +\r\n            `Simply use native JavaScript mutations.`\r\n    },\r\n    [\"INSTANCE_DESTROY\" /* INSTANCE_DESTROY */]: {\r\n        message: `vm.$destroy() has been removed. Use app.unmount() instead.`,\r\n        link: `https://v3.vuejs.org/api/application-api.html#unmount`\r\n    },\r\n    [\"INSTANCE_EVENT_EMITTER\" /* INSTANCE_EVENT_EMITTER */]: {\r\n        message: `vm.$on/$once/$off() have been removed. ` +\r\n            `Use an external event emitter library instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/events-api.html`\r\n    },\r\n    [\"INSTANCE_EVENT_HOOKS\" /* INSTANCE_EVENT_HOOKS */]: {\r\n        message: event => `\"${event}\" lifecycle events are no longer supported. From templates, ` +\r\n            `use the \"vnode\" prefix instead of \"hook:\". For example, @${event} ` +\r\n            `should be changed to @vnode-${event.slice(5)}. ` +\r\n            `From JavaScript, use Composition API to dynamically register lifecycle ` +\r\n            `hooks.`,\r\n        link: `https://v3.vuejs.org/guide/migration/vnode-lifecycle-events.html`\r\n    },\r\n    [\"INSTANCE_CHILDREN\" /* INSTANCE_CHILDREN */]: {\r\n        message: `vm.$children has been removed. Consider refactoring your logic ` +\r\n            `to avoid relying on direct access to child components.`,\r\n        link: `https://v3.vuejs.org/guide/migration/children.html`\r\n    },\r\n    [\"INSTANCE_LISTENERS\" /* INSTANCE_LISTENERS */]: {\r\n        message: `vm.$listeners has been removed. In Vue 3, parent v-on listeners are ` +\r\n            `included in vm.$attrs and it is no longer necessary to separately use ` +\r\n            `v-on=\"$listeners\" if you are already using v-bind=\"$attrs\". ` +\r\n            `(Note: the Vue 3 behavior only applies if this compat config is disabled)`,\r\n        link: `https://v3.vuejs.org/guide/migration/listeners-removed.html`\r\n    },\r\n    [\"INSTANCE_SCOPED_SLOTS\" /* INSTANCE_SCOPED_SLOTS */]: {\r\n        message: `vm.$scopedSlots has been removed. Use vm.$slots instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/slots-unification.html`\r\n    },\r\n    [\"INSTANCE_ATTRS_CLASS_STYLE\" /* INSTANCE_ATTRS_CLASS_STYLE */]: {\r\n        message: componentName => `Component <${componentName ||\r\n            'Anonymous'}> has \\`inheritAttrs: false\\` but is ` +\r\n            `relying on class/style fallthrough from parent. In Vue 3, class/style ` +\r\n            `are now included in $attrs and will no longer fallthrough when ` +\r\n            `inheritAttrs is false. If you are already using v-bind=\"$attrs\" on ` +\r\n            `component root it should render the same end result. ` +\r\n            `If you are binding $attrs to a non-root element and expecting ` +\r\n            `class/style to fallthrough on root, you will need to now manually bind ` +\r\n            `them on root via :class=\"$attrs.class\".`,\r\n        link: `https://v3.vuejs.org/guide/migration/attrs-includes-class-style.html`\r\n    },\r\n    [\"OPTIONS_DATA_FN\" /* OPTIONS_DATA_FN */]: {\r\n        message: `The \"data\" option can no longer be a plain object. ` +\r\n            `Always use a function.`,\r\n        link: `https://v3.vuejs.org/guide/migration/data-option.html`\r\n    },\r\n    [\"OPTIONS_DATA_MERGE\" /* OPTIONS_DATA_MERGE */]: {\r\n        message: (key) => `Detected conflicting key \"${key}\" when merging data option values. ` +\r\n            `In Vue 3, data keys are merged shallowly and will override one another.`,\r\n        link: `https://v3.vuejs.org/guide/migration/data-option.html#mixin-merge-behavior-change`\r\n    },\r\n    [\"OPTIONS_BEFORE_DESTROY\" /* OPTIONS_BEFORE_DESTROY */]: {\r\n        message: `\\`beforeDestroy\\` has been renamed to \\`beforeUnmount\\`.`\r\n    },\r\n    [\"OPTIONS_DESTROYED\" /* OPTIONS_DESTROYED */]: {\r\n        message: `\\`destroyed\\` has been renamed to \\`unmounted\\`.`\r\n    },\r\n    [\"WATCH_ARRAY\" /* WATCH_ARRAY */]: {\r\n        message: `\"watch\" option or vm.$watch on an array value will no longer ` +\r\n            `trigger on array mutation unless the \"deep\" option is specified. ` +\r\n            `If current usage is intended, you can disable the compat behavior and ` +\r\n            `suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"WATCH_ARRAY\" /* WATCH_ARRAY */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/watch.html`\r\n    },\r\n    [\"PROPS_DEFAULT_THIS\" /* PROPS_DEFAULT_THIS */]: {\r\n        message: (key) => `props default value function no longer has access to \"this\". The compat ` +\r\n            `build only offers access to this.$options.` +\r\n            `(found in prop \"${key}\")`,\r\n        link: `https://v3.vuejs.org/guide/migration/props-default-this.html`\r\n    },\r\n    [\"CUSTOM_DIR\" /* CUSTOM_DIR */]: {\r\n        message: (legacyHook, newHook) => `Custom directive hook \"${legacyHook}\" has been removed. ` +\r\n            `Use \"${newHook}\" instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/custom-directives.html`\r\n    },\r\n    [\"V_FOR_REF\" /* V_FOR_REF */]: {\r\n        message: `Ref usage on v-for no longer creates array ref values in Vue 3. ` +\r\n            `Consider using function refs or refactor to avoid ref usage altogether.`,\r\n        link: `https://v3.vuejs.org/guide/migration/array-refs.html`\r\n    },\r\n    [\"V_ON_KEYCODE_MODIFIER\" /* V_ON_KEYCODE_MODIFIER */]: {\r\n        message: `Using keyCode as v-on modifier is no longer supported. ` +\r\n            `Use kebab-case key name modifiers instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/keycode-modifiers.html`\r\n    },\r\n    [\"ATTR_FALSE_VALUE\" /* ATTR_FALSE_VALUE */]: {\r\n        message: (name) => `Attribute \"${name}\" with v-bind value \\`false\\` will render ` +\r\n            `${name}=\"false\" instead of removing it in Vue 3. To remove the attribute, ` +\r\n            `use \\`null\\` or \\`undefined\\` instead. If the usage is intended, ` +\r\n            `you can disable the compat behavior and suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"ATTR_FALSE_VALUE\" /* ATTR_FALSE_VALUE */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/attribute-coercion.html`\r\n    },\r\n    [\"ATTR_ENUMERATED_COERCION\" /* ATTR_ENUMERATED_COERCION */]: {\r\n        message: (name, value, coerced) => `Enumerated attribute \"${name}\" with v-bind value \\`${value}\\` will ` +\r\n            `${value === null ? `be removed` : `render the value as-is`} instead of coercing the value to \"${coerced}\" in Vue 3. ` +\r\n            `Always use explicit \"true\" or \"false\" values for enumerated attributes. ` +\r\n            `If the usage is intended, ` +\r\n            `you can disable the compat behavior and suppress this warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"ATTR_ENUMERATED_COERCION\" /* ATTR_ENUMERATED_COERCION */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/attribute-coercion.html`\r\n    },\r\n    [\"TRANSITION_CLASSES\" /* TRANSITION_CLASSES */]: {\r\n        message: `` // this feature cannot be runtime-detected\r\n    },\r\n    [\"TRANSITION_GROUP_ROOT\" /* TRANSITION_GROUP_ROOT */]: {\r\n        message: `<TransitionGroup> no longer renders a root <span> element by ` +\r\n            `default if no \"tag\" prop is specified. If you do not rely on the span ` +\r\n            `for styling, you can disable the compat behavior and suppress this ` +\r\n            `warning with:` +\r\n            `\\n\\n  configureCompat({ ${\"TRANSITION_GROUP_ROOT\" /* TRANSITION_GROUP_ROOT */}: false })\\n`,\r\n        link: `https://v3.vuejs.org/guide/migration/transition-group.html`\r\n    },\r\n    [\"COMPONENT_ASYNC\" /* COMPONENT_ASYNC */]: {\r\n        message: (comp) => {\r\n            const name = getComponentName(comp);\r\n            return (`Async component${name ? ` <${name}>` : `s`} should be explicitly created via \\`defineAsyncComponent()\\` ` +\r\n                `in Vue 3. Plain functions will be treated as functional components in ` +\r\n                `non-compat build. If you have already migrated all async component ` +\r\n                `usage and intend to use plain functions for functional components, ` +\r\n                `you can disable the compat behavior and suppress this ` +\r\n                `warning with:` +\r\n                `\\n\\n  configureCompat({ ${\"COMPONENT_ASYNC\" /* COMPONENT_ASYNC */}: false })\\n`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/async-components.html`\r\n    },\r\n    [\"COMPONENT_FUNCTIONAL\" /* COMPONENT_FUNCTIONAL */]: {\r\n        message: (comp) => {\r\n            const name = getComponentName(comp);\r\n            return (`Functional component${name ? ` <${name}>` : `s`} should be defined as a plain function in Vue 3. The \"functional\" ` +\r\n                `option has been removed. NOTE: Before migrating to use plain ` +\r\n                `functions for functional components, first make sure that all async ` +\r\n                `components usage have been migrated and its compat behavior has ` +\r\n                `been disabled.`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/functional-components.html`\r\n    },\r\n    [\"COMPONENT_V_MODEL\" /* COMPONENT_V_MODEL */]: {\r\n        message: (comp) => {\r\n            const configMsg = `opt-in to ` +\r\n                `Vue 3 behavior on a per-component basis with \\`compatConfig: { ${\"COMPONENT_V_MODEL\" /* COMPONENT_V_MODEL */}: false }\\`.`;\r\n            if (comp.props && isArray(comp.props)\r\n                ? comp.props.includes('modelValue')\r\n                : hasOwn(comp.props, 'modelValue')) {\r\n                return (`Component delcares \"modelValue\" prop, which is Vue 3 usage, but ` +\r\n                    `is running under Vue 2 compat v-model behavior. You can ${configMsg}`);\r\n            }\r\n            return (`v-model usage on component has changed in Vue 3. Component that expects ` +\r\n                `to work with v-model should now use the \"modelValue\" prop and emit the ` +\r\n                `\"update:modelValue\" event. You can update the usage and then ${configMsg}`);\r\n        },\r\n        link: `https://v3.vuejs.org/guide/migration/v-model.html`\r\n    },\r\n    [\"RENDER_FUNCTION\" /* RENDER_FUNCTION */]: {\r\n        message: `Vue 3's render function API has changed. ` +\r\n            `You can opt-in to the new API with:` +\r\n            `\\n\\n  configureCompat({ ${\"RENDER_FUNCTION\" /* RENDER_FUNCTION */}: false })\\n` +\r\n            `\\n  (This can also be done per-component via the \"compatConfig\" option.)`,\r\n        link: `https://v3.vuejs.org/guide/migration/render-function-api.html`\r\n    },\r\n    [\"FILTERS\" /* FILTERS */]: {\r\n        message: `filters have been removed in Vue 3. ` +\r\n            `The \"|\" symbol will be treated as native JavaScript bitwise OR operator. ` +\r\n            `Use method calls or computed properties instead.`,\r\n        link: `https://v3.vuejs.org/guide/migration/filters.html`\r\n    },\r\n    [\"PRIVATE_APIS\" /* PRIVATE_APIS */]: {\r\n        message: name => `\"${name}\" is a Vue 2 private API that no longer exists in Vue 3. ` +\r\n            `If you are seeing this warning only due to a dependency, you can ` +\r\n            `suppress this warning via { PRIVATE_APIS: 'supress-warning' }.`\r\n    }\r\n};\r\nconst instanceWarned = Object.create(null);\r\nconst warnCount = Object.create(null);\r\nfunction warnDeprecation(key, instance, ...args) {\r\n    if (!(process.env.NODE_ENV !== 'production')) {\r\n        return;\r\n    }\r\n    instance = instance || getCurrentInstance();\r\n    // check user config\r\n    const config = getCompatConfigForKey(key, instance);\r\n    if (config === 'suppress-warning') {\r\n        return;\r\n    }\r\n    const dupKey = key + args.join('');\r\n    let compId = instance && formatComponentName(instance, instance.type);\r\n    if (compId === 'Anonymous' && instance) {\r\n        compId = instance.uid;\r\n    }\r\n    // skip if the same warning is emitted for the same component type\r\n    const componentDupKey = dupKey + compId;\r\n    if (componentDupKey in instanceWarned) {\r\n        return;\r\n    }\r\n    instanceWarned[componentDupKey] = true;\r\n    // same warning, but different component. skip the long message and just\r\n    // log the key and count.\r\n    if (dupKey in warnCount) {\r\n        warn(`(deprecation ${key}) (${++warnCount[dupKey] + 1})`);\r\n        return;\r\n    }\r\n    warnCount[dupKey] = 0;\r\n    const { message, link } = deprecationData[key];\r\n    warn(`(deprecation ${key}) ${typeof message === 'function' ? message(...args) : message}${link ? `\\n  Details: ${link}` : ``}`);\r\n    if (!isCompatEnabled(key, instance, true)) {\r\n        console.error(`^ The above deprecation's compat behavior is disabled and will likely ` +\r\n            `lead to runtime errors.`);\r\n    }\r\n}\r\nconst globalCompatConfig = {\r\n    MODE: 2\r\n};\r\nfunction getCompatConfigForKey(key, instance) {\r\n    const instanceConfig = instance && instance.type.compatConfig;\r\n    if (instanceConfig && key in instanceConfig) {\r\n        return instanceConfig[key];\r\n    }\r\n    return globalCompatConfig[key];\r\n}\r\nfunction isCompatEnabled(key, instance, enableForBuiltIn = false) {\r\n    // skip compat for built-in components\r\n    if (!enableForBuiltIn && instance && instance.type.__isBuiltIn) {\r\n        return false;\r\n    }\r\n    const rawMode = getCompatConfigForKey('MODE', instance) || 2;\r\n    const val = getCompatConfigForKey(key, instance);\r\n    const mode = isFunction$1(rawMode)\r\n        ? rawMode(instance && instance.type)\r\n        : rawMode;\r\n    if (mode === 2) {\r\n        return val !== false;\r\n    }\r\n    else {\r\n        return val === true || val === 'suppress-warning';\r\n    }\r\n}\n\nfunction emit(instance, event, ...rawArgs) {\r\n    const props = instance.vnode.props || EMPTY_OBJ;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const { emitsOptions, propsOptions: [propsOptions] } = instance;\r\n        if (emitsOptions) {\r\n            if (!(event in emitsOptions) &&\r\n                !(false )) {\r\n                if (!propsOptions || !(toHandlerKey(event) in propsOptions)) {\r\n                    warn(`Component emitted event \"${event}\" but it is neither declared in ` +\r\n                        `the emits option nor as an \"${toHandlerKey(event)}\" prop.`);\r\n                }\r\n            }\r\n            else {\r\n                const validator = emitsOptions[event];\r\n                if (isFunction$1(validator)) {\r\n                    const isValid = validator(...rawArgs);\r\n                    if (!isValid) {\r\n                        warn(`Invalid event arguments: event validation failed for event \"${event}\".`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    let args = rawArgs;\r\n    const isModelListener = event.startsWith('update:');\r\n    // for v-model update:xxx events, apply modifiers on args\r\n    const modelArg = isModelListener && event.slice(7);\r\n    if (modelArg && modelArg in props) {\r\n        const modifiersKey = `${modelArg === 'modelValue' ? 'model' : modelArg}Modifiers`;\r\n        const { number, trim } = props[modifiersKey] || EMPTY_OBJ;\r\n        if (trim) {\r\n            args = rawArgs.map(a => a.trim());\r\n        }\r\n        else if (number) {\r\n            args = rawArgs.map(toNumber);\r\n        }\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsComponentEmit(instance, event, args);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const lowerCaseEvent = event.toLowerCase();\r\n        if (lowerCaseEvent !== event && props[toHandlerKey(lowerCaseEvent)]) {\r\n            warn(`Event \"${lowerCaseEvent}\" is emitted in component ` +\r\n                `${formatComponentName(instance, instance.type)} but the handler is registered for \"${event}\". ` +\r\n                `Note that HTML attributes are case-insensitive and you cannot use ` +\r\n                `v-on to listen to camelCase events when using in-DOM templates. ` +\r\n                `You should probably use \"${hyphenate(event)}\" instead of \"${event}\".`);\r\n        }\r\n    }\r\n    let handlerName;\r\n    let handler = props[(handlerName = toHandlerKey(event))] ||\r\n        // also try camelCase event handler (#2249)\r\n        props[(handlerName = toHandlerKey(camelize(event)))];\r\n    // for v-model update:xxx events, also trigger kebab-case equivalent\r\n    // for props passed via kebab-case\r\n    if (!handler && isModelListener) {\r\n        handler = props[(handlerName = toHandlerKey(hyphenate(event)))];\r\n    }\r\n    if (handler) {\r\n        callWithAsyncErrorHandling(handler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n    const onceHandler = props[handlerName + `Once`];\r\n    if (onceHandler) {\r\n        if (!instance.emitted) {\r\n            instance.emitted = {};\r\n        }\r\n        else if (instance.emitted[handlerName]) {\r\n            return;\r\n        }\r\n        instance.emitted[handlerName] = true;\r\n        callWithAsyncErrorHandling(onceHandler, instance, 6 /* COMPONENT_EVENT_HANDLER */, args);\r\n    }\r\n}\r\nfunction normalizeEmitsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.emitsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached !== undefined) {\r\n        return cached;\r\n    }\r\n    const raw = comp.emits;\r\n    let normalized = {};\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {\r\n        const extendEmits = (raw) => {\r\n            const normalizedFromExtend = normalizeEmitsOptions(raw, appContext, true);\r\n            if (normalizedFromExtend) {\r\n                hasExtends = true;\r\n                extend(normalized, normalizedFromExtend);\r\n            }\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendEmits);\r\n        }\r\n        if (comp.extends) {\r\n            extendEmits(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendEmits);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, null);\r\n        return null;\r\n    }\r\n    if (isArray(raw)) {\r\n        raw.forEach(key => (normalized[key] = null));\r\n    }\r\n    else {\r\n        extend(normalized, raw);\r\n    }\r\n    cache.set(comp, normalized);\r\n    return normalized;\r\n}\r\n// Check if an incoming prop key is a declared emit event listener.\r\n// e.g. With `emits: { click: null }`, props named `onClick` and `onclick` are\r\n// both considered matched listeners.\r\nfunction isEmitListener(options, key) {\r\n    if (!options || !isOn(key)) {\r\n        return false;\r\n    }\r\n    key = key.slice(2).replace(/Once$/, '');\r\n    return (hasOwn(options, key[0].toLowerCase() + key.slice(1)) ||\r\n        hasOwn(options, hyphenate(key)) ||\r\n        hasOwn(options, key));\r\n}\n\n/**\r\n * mark the current rendering instance for asset resolution (e.g.\r\n * resolveComponent, resolveDirective) during render\r\n */\r\nlet currentRenderingInstance = null;\r\nlet currentScopeId = null;\r\n/**\r\n * Note: rendering calls maybe nested. The function returns the parent rendering\r\n * instance if present, which should be restored after the render is done:\r\n *\r\n * ```js\r\n * const prev = setCurrentRenderingInstance(i)\r\n * // ...render\r\n * setCurrentRenderingInstance(prev)\r\n * ```\r\n */\r\nfunction setCurrentRenderingInstance(instance) {\r\n    const prev = currentRenderingInstance;\r\n    currentRenderingInstance = instance;\r\n    currentScopeId = (instance && instance.type.__scopeId) || null;\r\n    return prev;\r\n}\r\n/**\r\n * Set scope id when creating hoisted vnodes.\r\n * @private compiler helper\r\n */\r\nfunction pushScopeId(id) {\r\n    currentScopeId = id;\r\n}\r\n/**\r\n * Technically we no longer need this after 3.0.8 but we need to keep the same\r\n * API for backwards compat w/ code generated by compilers.\r\n * @private\r\n */\r\nfunction popScopeId() {\r\n    currentScopeId = null;\r\n}\r\n/**\r\n * Only for backwards compat\r\n * @private\r\n */\r\nconst withScopeId = (_id) => withCtx;\r\n/**\r\n * Wrap a slot function to memoize current rendering instance\r\n * @private compiler helper\r\n */\r\nfunction withCtx(fn, ctx = currentRenderingInstance, isNonScopedSlot // false only\r\n) {\r\n    if (!ctx)\r\n        return fn;\r\n    // already normalized\r\n    if (fn._n) {\r\n        return fn;\r\n    }\r\n    const renderFnWithContext = (...args) => {\r\n        // If a user calls a compiled slot inside a template expression (#1745), it\r\n        // can mess up block tracking, so by default we disable block tracking and\r\n        // force bail out when invoking a compiled slot (indicated by the ._d flag).\r\n        // This isn't necessary if rendering a compiled `<slot>`, so we flip the\r\n        // ._d flag off when invoking the wrapped fn inside `renderSlot`.\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(-1);\r\n        }\r\n        const prevInstance = setCurrentRenderingInstance(ctx);\r\n        const res = fn(...args);\r\n        setCurrentRenderingInstance(prevInstance);\r\n        if (renderFnWithContext._d) {\r\n            setBlockTracking(1);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentUpdated(ctx);\r\n        }\r\n        return res;\r\n    };\r\n    // mark normalized to avoid duplicated wrapping\r\n    renderFnWithContext._n = true;\r\n    // mark this as compiled by default\r\n    // this is used in vnode.ts -> normalizeChildren() to set the slot\r\n    // rendering flag.\r\n    renderFnWithContext._c = true;\r\n    // disable block tracking by default\r\n    renderFnWithContext._d = true;\r\n    return renderFnWithContext;\r\n}\n\n/**\r\n * dev only flag to track whether $attrs was used during render.\r\n * If $attrs was used during render then the warning for failed attrs\r\n * fallthrough can be suppressed.\r\n */\r\nlet accessedAttrs = false;\r\nfunction markAttrsAccessed() {\r\n    accessedAttrs = true;\r\n}\r\nfunction renderComponentRoot(instance) {\r\n    const { type: Component, vnode, proxy, withProxy, props, propsOptions: [propsOptions], slots, attrs, emit, render, renderCache, data, setupState, ctx, inheritAttrs } = instance;\r\n    let result;\r\n    const prev = setCurrentRenderingInstance(instance);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        accessedAttrs = false;\r\n    }\r\n    try {\r\n        let fallthroughAttrs;\r\n        if (vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */) {\r\n            // withProxy is a proxy with a different `has` trap only for\r\n            // runtime-compiled render functions using `with` block.\r\n            const proxyToUse = withProxy || proxy;\r\n            result = normalizeVNode(render.call(proxyToUse, proxyToUse, renderCache, props, setupState, data, ctx));\r\n            fallthroughAttrs = attrs;\r\n        }\r\n        else {\r\n            // functional\r\n            const render = Component;\r\n            // in dev, mark attrs accessed if optional props (attrs === props)\r\n            if ((process.env.NODE_ENV !== 'production') && attrs === props) {\r\n                markAttrsAccessed();\r\n            }\r\n            result = normalizeVNode(render.length > 1\r\n                ? render(props, (process.env.NODE_ENV !== 'production')\r\n                    ? {\r\n                        get attrs() {\r\n                            markAttrsAccessed();\r\n                            return attrs;\r\n                        },\r\n                        slots,\r\n                        emit\r\n                    }\r\n                    : { attrs, slots, emit })\r\n                : render(props, null /* we know it doesn't need it */));\r\n            fallthroughAttrs = Component.props\r\n                ? attrs\r\n                : getFunctionalFallthrough(attrs);\r\n        }\r\n        // attr merging\r\n        // in dev mode, comments are preserved, and it's possible for a template\r\n        // to have comments along side the root element which makes it a fragment\r\n        let root = result;\r\n        let setRoot = undefined;\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            result.patchFlag > 0 &&\r\n            result.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n            ;\r\n            [root, setRoot] = getChildRoot(result);\r\n        }\r\n        if (fallthroughAttrs && inheritAttrs !== false) {\r\n            const keys = Object.keys(fallthroughAttrs);\r\n            const { shapeFlag } = root;\r\n            if (keys.length) {\r\n                if (shapeFlag & 1 /* ELEMENT */ ||\r\n                    shapeFlag & 6 /* COMPONENT */) {\r\n                    if (propsOptions && keys.some(isModelListener)) {\r\n                        // If a v-model listener (onUpdate:xxx) has a corresponding declared\r\n                        // prop, it indicates this component expects to handle v-model and\r\n                        // it should not fallthrough.\r\n                        // related: #1543, #1643, #1989\r\n                        fallthroughAttrs = filterModelListeners(fallthroughAttrs, propsOptions);\r\n                    }\r\n                    root = cloneVNode(root, fallthroughAttrs);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production') && !accessedAttrs && root.type !== Comment$1) {\r\n                    const allAttrs = Object.keys(attrs);\r\n                    const eventAttrs = [];\r\n                    const extraAttrs = [];\r\n                    for (let i = 0, l = allAttrs.length; i < l; i++) {\r\n                        const key = allAttrs[i];\r\n                        if (isOn(key)) {\r\n                            // ignore v-model handlers when they fail to fallthrough\r\n                            if (!isModelListener(key)) {\r\n                                // remove `on`, lowercase first letter to reflect event casing\r\n                                // accurately\r\n                                eventAttrs.push(key[2].toLowerCase() + key.slice(3));\r\n                            }\r\n                        }\r\n                        else {\r\n                            extraAttrs.push(key);\r\n                        }\r\n                    }\r\n                    if (extraAttrs.length) {\r\n                        warn(`Extraneous non-props attributes (` +\r\n                            `${extraAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes.`);\r\n                    }\r\n                    if (eventAttrs.length) {\r\n                        warn(`Extraneous non-emits event listeners (` +\r\n                            `${eventAttrs.join(', ')}) ` +\r\n                            `were passed to component but could not be automatically inherited ` +\r\n                            `because component renders fragment or text root nodes. ` +\r\n                            `If the listener is intended to be a component custom event listener only, ` +\r\n                            `declare it using the \"emits\" option.`);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (false &&\r\n            isCompatEnabled(\"INSTANCE_ATTRS_CLASS_STYLE\" /* INSTANCE_ATTRS_CLASS_STYLE */, instance) &&\r\n            vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */ &&\r\n            (root.shapeFlag & 1 /* ELEMENT */ ||\r\n                root.shapeFlag & 6 /* COMPONENT */)) ;\r\n        // inherit directives\r\n        if (vnode.dirs) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Runtime directive used on component with non-element root node. ` +\r\n                    `The directives will not function as intended.`);\r\n            }\r\n            root.dirs = root.dirs ? root.dirs.concat(vnode.dirs) : vnode.dirs;\r\n        }\r\n        // inherit transition data\r\n        if (vnode.transition) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isElementRoot(root)) {\r\n                warn(`Component inside <Transition> renders non-element root node ` +\r\n                    `that cannot be animated.`);\r\n            }\r\n            root.transition = vnode.transition;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && setRoot) {\r\n            setRoot(root);\r\n        }\r\n        else {\r\n            result = root;\r\n        }\r\n    }\r\n    catch (err) {\r\n        blockStack.length = 0;\r\n        handleError(err, instance, 1 /* RENDER_FUNCTION */);\r\n        result = createVNode(Comment$1);\r\n    }\r\n    setCurrentRenderingInstance(prev);\r\n    return result;\r\n}\r\n/**\r\n * dev only\r\n * In dev mode, template root level comments are rendered, which turns the\r\n * template into a fragment root, but we need to locate the single element\r\n * root for attrs and scope id processing.\r\n */\r\nconst getChildRoot = (vnode) => {\r\n    const rawChildren = vnode.children;\r\n    const dynamicChildren = vnode.dynamicChildren;\r\n    const childRoot = filterSingleRoot(rawChildren);\r\n    if (!childRoot) {\r\n        return [vnode, undefined];\r\n    }\r\n    const index = rawChildren.indexOf(childRoot);\r\n    const dynamicIndex = dynamicChildren ? dynamicChildren.indexOf(childRoot) : -1;\r\n    const setRoot = (updatedRoot) => {\r\n        rawChildren[index] = updatedRoot;\r\n        if (dynamicChildren) {\r\n            if (dynamicIndex > -1) {\r\n                dynamicChildren[dynamicIndex] = updatedRoot;\r\n            }\r\n            else if (updatedRoot.patchFlag > 0) {\r\n                vnode.dynamicChildren = [...dynamicChildren, updatedRoot];\r\n            }\r\n        }\r\n    };\r\n    return [normalizeVNode(childRoot), setRoot];\r\n};\r\nfunction filterSingleRoot(children) {\r\n    let singleRoot;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        if (isVNode(child)) {\r\n            // ignore user comment\r\n            if (child.type !== Comment$1 || child.children === 'v-if') {\r\n                if (singleRoot) {\r\n                    // has more than 1 non-comment child, return now\r\n                    return;\r\n                }\r\n                else {\r\n                    singleRoot = child;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            return;\r\n        }\r\n    }\r\n    return singleRoot;\r\n}\r\nconst getFunctionalFallthrough = (attrs) => {\r\n    let res;\r\n    for (const key in attrs) {\r\n        if (key === 'class' || key === 'style' || isOn(key)) {\r\n            (res || (res = {}))[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst filterModelListeners = (attrs, props) => {\r\n    const res = {};\r\n    for (const key in attrs) {\r\n        if (!isModelListener(key) || !(key.slice(9) in props)) {\r\n            res[key] = attrs[key];\r\n        }\r\n    }\r\n    return res;\r\n};\r\nconst isElementRoot = (vnode) => {\r\n    return (vnode.shapeFlag & 6 /* COMPONENT */ ||\r\n        vnode.shapeFlag & 1 /* ELEMENT */ ||\r\n        vnode.type === Comment$1 // potential v-if branch switch\r\n    );\r\n};\r\nfunction shouldUpdateComponent(prevVNode, nextVNode, optimized) {\r\n    const { props: prevProps, children: prevChildren, component } = prevVNode;\r\n    const { props: nextProps, children: nextChildren, patchFlag } = nextVNode;\r\n    const emits = component.emitsOptions;\r\n    // Parent component's render function was hot-updated. Since this may have\r\n    // caused the child component's slots content to have changed, we need to\r\n    // force the child to update as well.\r\n    if ((process.env.NODE_ENV !== 'production') && (prevChildren || nextChildren) && isHmrUpdating) {\r\n        return true;\r\n    }\r\n    // force child update for runtime directive or transition on component vnode.\r\n    if (nextVNode.dirs || nextVNode.transition) {\r\n        return true;\r\n    }\r\n    if (optimized && patchFlag >= 0) {\r\n        if (patchFlag & 1024 /* DYNAMIC_SLOTS */) {\r\n            // slot content that references values that might have changed,\r\n            // e.g. in a v-for\r\n            return true;\r\n        }\r\n        if (patchFlag & 16 /* FULL_PROPS */) {\r\n            if (!prevProps) {\r\n                return !!nextProps;\r\n            }\r\n            // presence of this flag indicates props are always non-null\r\n            return hasPropsChanged(prevProps, nextProps, emits);\r\n        }\r\n        else if (patchFlag & 8 /* PROPS */) {\r\n            const dynamicProps = nextVNode.dynamicProps;\r\n            for (let i = 0; i < dynamicProps.length; i++) {\r\n                const key = dynamicProps[i];\r\n                if (nextProps[key] !== prevProps[key] &&\r\n                    !isEmitListener(emits, key)) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // this path is only taken by manually written render functions\r\n        // so presence of any children leads to a forced update\r\n        if (prevChildren || nextChildren) {\r\n            if (!nextChildren || !nextChildren.$stable) {\r\n                return true;\r\n            }\r\n        }\r\n        if (prevProps === nextProps) {\r\n            return false;\r\n        }\r\n        if (!prevProps) {\r\n            return !!nextProps;\r\n        }\r\n        if (!nextProps) {\r\n            return true;\r\n        }\r\n        return hasPropsChanged(prevProps, nextProps, emits);\r\n    }\r\n    return false;\r\n}\r\nfunction hasPropsChanged(prevProps, nextProps, emitsOptions) {\r\n    const nextKeys = Object.keys(nextProps);\r\n    if (nextKeys.length !== Object.keys(prevProps).length) {\r\n        return true;\r\n    }\r\n    for (let i = 0; i < nextKeys.length; i++) {\r\n        const key = nextKeys[i];\r\n        if (nextProps[key] !== prevProps[key] &&\r\n            !isEmitListener(emitsOptions, key)) {\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n}\r\nfunction updateHOCHostEl({ vnode, parent }, el // HostNode\r\n) {\r\n    while (parent && parent.subTree === vnode) {\r\n        (vnode = parent.vnode).el = el;\r\n        parent = parent.parent;\r\n    }\r\n}\n\nconst isSuspense = (type) => type.__isSuspense;\r\n// Suspense exposes a component-like API, and is treated like a component\r\n// in the compiler, but internally it's a special built-in type that hooks\r\n// directly into the renderer.\r\nconst SuspenseImpl = {\r\n    name: 'Suspense',\r\n    // In order to make Suspense tree-shakable, we need to avoid importing it\r\n    // directly in the renderer. The renderer checks for the __isSuspense flag\r\n    // on a vnode's type and calls the `process` method, passing in renderer\r\n    // internals.\r\n    __isSuspense: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, \r\n    // platform-specific impl passed from renderer\r\n    rendererInternals) {\r\n        if (n1 == null) {\r\n            mountSuspense(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n        else {\r\n            patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, rendererInternals);\r\n        }\r\n    },\r\n    hydrate: hydrateSuspense,\r\n    create: createSuspenseBoundary,\r\n    normalize: normalizeSuspenseChildren\r\n};\r\n// Force-casted public typing for h and TSX props inference\r\nconst Suspense = (SuspenseImpl\r\n    );\r\nfunction triggerEvent(vnode, name) {\r\n    const eventListener = vnode.props && vnode.props[name];\r\n    if (isFunction$1(eventListener)) {\r\n        eventListener();\r\n    }\r\n}\r\nfunction mountSuspense(vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals) {\r\n    const { p: patch, o: { createElement } } = rendererInternals;\r\n    const hiddenContainer = createElement('div');\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals));\r\n    // start mounting the content subtree in an off-dom container\r\n    patch(null, (suspense.pendingBranch = vnode.ssContent), hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds);\r\n    // now check if we have encountered any async deps\r\n    if (suspense.deps > 0) {\r\n        // has async\r\n        // invoke @fallback event\r\n        triggerEvent(vnode, 'onPending');\r\n        triggerEvent(vnode, 'onFallback');\r\n        // mount the fallback tree\r\n        patch(null, vnode.ssFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n        isSVG, slotScopeIds);\r\n        setActiveBranch(suspense, vnode.ssFallback);\r\n    }\r\n    else {\r\n        // Suspense has no async deps. Just resolve.\r\n        suspense.resolve();\r\n    }\r\n}\r\nfunction patchSuspense(n1, n2, container, anchor, parentComponent, isSVG, slotScopeIds, optimized, { p: patch, um: unmount, o: { createElement } }) {\r\n    const suspense = (n2.suspense = n1.suspense);\r\n    suspense.vnode = n2;\r\n    n2.el = n1.el;\r\n    const newBranch = n2.ssContent;\r\n    const newFallback = n2.ssFallback;\r\n    const { activeBranch, pendingBranch, isInFallback, isHydrating } = suspense;\r\n    if (pendingBranch) {\r\n        suspense.pendingBranch = newBranch;\r\n        if (isSameVNodeType(newBranch, pendingBranch)) {\r\n            // same root type but content may have changed.\r\n            patch(pendingBranch, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                suspense.resolve();\r\n            }\r\n            else if (isInFallback) {\r\n                patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, newFallback);\r\n            }\r\n        }\r\n        else {\r\n            // toggled before pending tree is resolved\r\n            suspense.pendingId++;\r\n            if (isHydrating) {\r\n                // if toggled before hydration is finished, the current DOM tree is\r\n                // no longer valid. set it as the active branch so it will be unmounted\r\n                // when resolved\r\n                suspense.isHydrating = false;\r\n                suspense.activeBranch = pendingBranch;\r\n            }\r\n            else {\r\n                unmount(pendingBranch, parentComponent, suspense);\r\n            }\r\n            // increment pending ID. this is used to invalidate async callbacks\r\n            // reset suspense state\r\n            suspense.deps = 0;\r\n            // discard effects from pending branch\r\n            suspense.effects.length = 0;\r\n            // discard previous container\r\n            suspense.hiddenContainer = createElement('div');\r\n            if (isInFallback) {\r\n                // already in fallback state\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n                else {\r\n                    patch(activeBranch, newFallback, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                    isSVG, slotScopeIds, optimized);\r\n                    setActiveBranch(suspense, newFallback);\r\n                }\r\n            }\r\n            else if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n                // toggled \"back\" to current active branch\r\n                patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                // force resolve\r\n                suspense.resolve(true);\r\n            }\r\n            else {\r\n                // switched to a 3rd branch\r\n                patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n                if (suspense.deps <= 0) {\r\n                    suspense.resolve();\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        if (activeBranch && isSameVNodeType(newBranch, activeBranch)) {\r\n            // root did not change, just normal patch\r\n            patch(activeBranch, newBranch, container, anchor, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            setActiveBranch(suspense, newBranch);\r\n        }\r\n        else {\r\n            // root node toggled\r\n            // invoke @pending event\r\n            triggerEvent(n2, 'onPending');\r\n            // mount pending branch in off-dom container\r\n            suspense.pendingBranch = newBranch;\r\n            suspense.pendingId++;\r\n            patch(null, newBranch, suspense.hiddenContainer, null, parentComponent, suspense, isSVG, slotScopeIds, optimized);\r\n            if (suspense.deps <= 0) {\r\n                // incoming branch has no async deps, resolve now.\r\n                suspense.resolve();\r\n            }\r\n            else {\r\n                const { timeout, pendingId } = suspense;\r\n                if (timeout > 0) {\r\n                    setTimeout(() => {\r\n                        if (suspense.pendingId === pendingId) {\r\n                            suspense.fallback(newFallback);\r\n                        }\r\n                    }, timeout);\r\n                }\r\n                else if (timeout === 0) {\r\n                    suspense.fallback(newFallback);\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nlet hasWarned = false;\r\nfunction createSuspenseBoundary(vnode, parent, parentComponent, container, hiddenContainer, anchor, isSVG, slotScopeIds, optimized, rendererInternals, isHydrating = false) {\r\n    /* istanbul ignore if */\r\n    if ((process.env.NODE_ENV !== 'production') && !false && !hasWarned) {\r\n        hasWarned = true;\r\n        // @ts-ignore `console.info` cannot be null error\r\n        console[console.info ? 'info' : 'log'](`<Suspense> is an experimental feature and its API will likely change.`);\r\n    }\r\n    const { p: patch, m: move, um: unmount, n: next, o: { parentNode, remove } } = rendererInternals;\r\n    const timeout = toNumber(vnode.props && vnode.props.timeout);\r\n    const suspense = {\r\n        vnode,\r\n        parent,\r\n        parentComponent,\r\n        isSVG,\r\n        container,\r\n        hiddenContainer,\r\n        anchor,\r\n        deps: 0,\r\n        pendingId: 0,\r\n        timeout: typeof timeout === 'number' ? timeout : -1,\r\n        activeBranch: null,\r\n        pendingBranch: null,\r\n        isInFallback: true,\r\n        isHydrating,\r\n        isUnmounted: false,\r\n        effects: [],\r\n        resolve(resume = false) {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                if (!resume && !suspense.pendingBranch) {\r\n                    throw new Error(`suspense.resolve() is called without a pending branch.`);\r\n                }\r\n                if (suspense.isUnmounted) {\r\n                    throw new Error(`suspense.resolve() is called on an already unmounted suspense boundary.`);\r\n                }\r\n            }\r\n            const { vnode, activeBranch, pendingBranch, pendingId, effects, parentComponent, container } = suspense;\r\n            if (suspense.isHydrating) {\r\n                suspense.isHydrating = false;\r\n            }\r\n            else if (!resume) {\r\n                const delayEnter = activeBranch &&\r\n                    pendingBranch.transition &&\r\n                    pendingBranch.transition.mode === 'out-in';\r\n                if (delayEnter) {\r\n                    activeBranch.transition.afterLeave = () => {\r\n                        if (pendingId === suspense.pendingId) {\r\n                            move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                        }\r\n                    };\r\n                }\r\n                // this is initial anchor on mount\r\n                let { anchor } = suspense;\r\n                // unmount current active tree\r\n                if (activeBranch) {\r\n                    // if the fallback tree was mounted, it may have been moved\r\n                    // as part of a parent suspense. get the latest anchor for insertion\r\n                    anchor = next(activeBranch);\r\n                    unmount(activeBranch, parentComponent, suspense, true);\r\n                }\r\n                if (!delayEnter) {\r\n                    // move content from off-dom container to actual container\r\n                    move(pendingBranch, container, anchor, 0 /* ENTER */);\r\n                }\r\n            }\r\n            setActiveBranch(suspense, pendingBranch);\r\n            suspense.pendingBranch = null;\r\n            suspense.isInFallback = false;\r\n            // flush buffered effects\r\n            // check if there is a pending parent suspense\r\n            let parent = suspense.parent;\r\n            let hasUnresolvedAncestor = false;\r\n            while (parent) {\r\n                if (parent.pendingBranch) {\r\n                    // found a pending parent suspense, merge buffered post jobs\r\n                    // into that parent\r\n                    parent.effects.push(...effects);\r\n                    hasUnresolvedAncestor = true;\r\n                    break;\r\n                }\r\n                parent = parent.parent;\r\n            }\r\n            // no pending parent suspense, flush all jobs\r\n            if (!hasUnresolvedAncestor) {\r\n                queuePostFlushCb(effects);\r\n            }\r\n            suspense.effects = [];\r\n            // invoke @resolve event\r\n            triggerEvent(vnode, 'onResolve');\r\n        },\r\n        fallback(fallbackVNode) {\r\n            if (!suspense.pendingBranch) {\r\n                return;\r\n            }\r\n            const { vnode, activeBranch, parentComponent, container, isSVG } = suspense;\r\n            // invoke @fallback event\r\n            triggerEvent(vnode, 'onFallback');\r\n            const anchor = next(activeBranch);\r\n            const mountFallback = () => {\r\n                if (!suspense.isInFallback) {\r\n                    return;\r\n                }\r\n                // mount the fallback tree\r\n                patch(null, fallbackVNode, container, anchor, parentComponent, null, // fallback tree will not have suspense context\r\n                isSVG, slotScopeIds, optimized);\r\n                setActiveBranch(suspense, fallbackVNode);\r\n            };\r\n            const delayEnter = fallbackVNode.transition && fallbackVNode.transition.mode === 'out-in';\r\n            if (delayEnter) {\r\n                activeBranch.transition.afterLeave = mountFallback;\r\n            }\r\n            suspense.isInFallback = true;\r\n            // unmount current active branch\r\n            unmount(activeBranch, parentComponent, null, // no suspense so unmount hooks fire now\r\n            true // shouldRemove\r\n            );\r\n            if (!delayEnter) {\r\n                mountFallback();\r\n            }\r\n        },\r\n        move(container, anchor, type) {\r\n            suspense.activeBranch &&\r\n                move(suspense.activeBranch, container, anchor, type);\r\n            suspense.container = container;\r\n        },\r\n        next() {\r\n            return suspense.activeBranch && next(suspense.activeBranch);\r\n        },\r\n        registerDep(instance, setupRenderEffect) {\r\n            const isInPendingSuspense = !!suspense.pendingBranch;\r\n            if (isInPendingSuspense) {\r\n                suspense.deps++;\r\n            }\r\n            const hydratedEl = instance.vnode.el;\r\n            instance\r\n                .asyncDep.catch(err => {\r\n                handleError(err, instance, 0 /* SETUP_FUNCTION */);\r\n            })\r\n                .then(asyncSetupResult => {\r\n                // retry when the setup() promise resolves.\r\n                // component may have been unmounted before resolve.\r\n                if (instance.isUnmounted ||\r\n                    suspense.isUnmounted ||\r\n                    suspense.pendingId !== instance.suspenseId) {\r\n                    return;\r\n                }\r\n                // retry from this component\r\n                instance.asyncResolved = true;\r\n                const { vnode } = instance;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(vnode);\r\n                }\r\n                handleSetupResult(instance, asyncSetupResult, false);\r\n                if (hydratedEl) {\r\n                    // vnode may have been replaced if an update happened before the\r\n                    // async dep is resolved.\r\n                    vnode.el = hydratedEl;\r\n                }\r\n                const placeholder = !hydratedEl && instance.subTree.el;\r\n                setupRenderEffect(instance, vnode, \r\n                // component may have been moved before resolve.\r\n                // if this is not a hydration, instance.subTree will be the comment\r\n                // placeholder.\r\n                parentNode(hydratedEl || instance.subTree.el), \r\n                // anchor will not be used if this is hydration, so only need to\r\n                // consider the comment placeholder case.\r\n                hydratedEl ? null : next(instance.subTree), suspense, isSVG, optimized);\r\n                if (placeholder) {\r\n                    remove(placeholder);\r\n                }\r\n                updateHOCHostEl(instance, vnode.el);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                // only decrease deps count if suspense is not already resolved\r\n                if (isInPendingSuspense && --suspense.deps === 0) {\r\n                    suspense.resolve();\r\n                }\r\n            });\r\n        },\r\n        unmount(parentSuspense, doRemove) {\r\n            suspense.isUnmounted = true;\r\n            if (suspense.activeBranch) {\r\n                unmount(suspense.activeBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n            if (suspense.pendingBranch) {\r\n                unmount(suspense.pendingBranch, parentComponent, parentSuspense, doRemove);\r\n            }\r\n        }\r\n    };\r\n    return suspense;\r\n}\r\nfunction hydrateSuspense(node, vnode, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, rendererInternals, hydrateNode) {\r\n    /* eslint-disable no-restricted-globals */\r\n    const suspense = (vnode.suspense = createSuspenseBoundary(vnode, parentSuspense, parentComponent, node.parentNode, document.createElement('div'), null, isSVG, slotScopeIds, optimized, rendererInternals, true /* hydrating */));\r\n    // there are two possible scenarios for server-rendered suspense:\r\n    // - success: ssr content should be fully resolved\r\n    // - failure: ssr content should be the fallback branch.\r\n    // however, on the client we don't really know if it has failed or not\r\n    // attempt to hydrate the DOM assuming it has succeeded, but we still\r\n    // need to construct a suspense boundary first\r\n    const result = hydrateNode(node, (suspense.pendingBranch = vnode.ssContent), parentComponent, suspense, slotScopeIds, optimized);\r\n    if (suspense.deps === 0) {\r\n        suspense.resolve();\r\n    }\r\n    return result;\r\n    /* eslint-enable no-restricted-globals */\r\n}\r\nfunction normalizeSuspenseChildren(vnode) {\r\n    const { shapeFlag, children } = vnode;\r\n    const isSlotChildren = shapeFlag & 32 /* SLOTS_CHILDREN */;\r\n    vnode.ssContent = normalizeSuspenseSlot(isSlotChildren ? children.default : children);\r\n    vnode.ssFallback = isSlotChildren\r\n        ? normalizeSuspenseSlot(children.fallback)\r\n        : createVNode(Comment);\r\n}\r\nfunction normalizeSuspenseSlot(s) {\r\n    let block;\r\n    if (isFunction$1(s)) {\r\n        const isCompiledSlot = s._c;\r\n        if (isCompiledSlot) {\r\n            // disableTracking: false\r\n            // allow block tracking for compiled slots\r\n            // (see ./componentRenderContext.ts)\r\n            s._d = false;\r\n            openBlock();\r\n        }\r\n        s = s();\r\n        if (isCompiledSlot) {\r\n            s._d = true;\r\n            block = currentBlock;\r\n            closeBlock();\r\n        }\r\n    }\r\n    if (isArray(s)) {\r\n        const singleChild = filterSingleRoot(s);\r\n        if ((process.env.NODE_ENV !== 'production') && !singleChild) {\r\n            warn(`<Suspense> slots expect a single root node.`);\r\n        }\r\n        s = singleChild;\r\n    }\r\n    s = normalizeVNode(s);\r\n    if (block) {\r\n        s.dynamicChildren = block.filter(c => c !== s);\r\n    }\r\n    return s;\r\n}\r\nfunction queueEffectWithSuspense(fn, suspense) {\r\n    if (suspense && suspense.pendingBranch) {\r\n        if (isArray(fn)) {\r\n            suspense.effects.push(...fn);\r\n        }\r\n        else {\r\n            suspense.effects.push(fn);\r\n        }\r\n    }\r\n    else {\r\n        queuePostFlushCb(fn);\r\n    }\r\n}\r\nfunction setActiveBranch(suspense, branch) {\r\n    suspense.activeBranch = branch;\r\n    const { vnode, parentComponent } = suspense;\r\n    const el = (vnode.el = branch.el);\r\n    // in case suspense is the root node of a component,\r\n    // recursively update the HOC el\r\n    if (parentComponent && parentComponent.subTree === vnode) {\r\n        parentComponent.vnode.el = el;\r\n        updateHOCHostEl(parentComponent, el);\r\n    }\r\n}\n\nfunction provide(key, value) {\r\n    if (!currentInstance) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`provide() can only be used inside setup().`);\r\n        }\r\n    }\r\n    else {\r\n        let provides = currentInstance.provides;\r\n        // by default an instance inherits its parent's provides object\r\n        // but when it needs to provide values of its own, it creates its\r\n        // own provides object using parent provides object as prototype.\r\n        // this way in `inject` we can simply look up injections from direct\r\n        // parent and let the prototype chain do the work.\r\n        const parentProvides = currentInstance.parent && currentInstance.parent.provides;\r\n        if (parentProvides === provides) {\r\n            provides = currentInstance.provides = Object.create(parentProvides);\r\n        }\r\n        // TS doesn't allow symbol as index type\r\n        provides[key] = value;\r\n    }\r\n}\r\nfunction inject(key, defaultValue, treatDefaultAsFactory = false) {\r\n    // fallback to `currentRenderingInstance` so that this can be called in\r\n    // a functional component\r\n    const instance = currentInstance || currentRenderingInstance;\r\n    if (instance) {\r\n        // #2400\r\n        // to support `app.use` plugins,\r\n        // fallback to appContext's `provides` if the intance is at root\r\n        const provides = instance.parent == null\r\n            ? instance.vnode.appContext && instance.vnode.appContext.provides\r\n            : instance.parent.provides;\r\n        if (provides && key in provides) {\r\n            // TS doesn't allow symbol as index type\r\n            return provides[key];\r\n        }\r\n        else if (arguments.length > 1) {\r\n            return treatDefaultAsFactory && isFunction$1(defaultValue)\r\n                ? defaultValue.call(instance.proxy)\r\n                : defaultValue;\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`injection \"${String(key)}\" not found.`);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`inject() can only be used inside setup() or functional components.`);\r\n    }\r\n}\n\n// Simple effect.\r\nfunction watchEffect(effect, options) {\r\n    return doWatch(effect, null, options);\r\n}\r\n// initial value for watchers to trigger on undefined initial values\r\nconst INITIAL_WATCHER_VALUE = {};\r\n// implementation\r\nfunction watch(source, cb, options) {\r\n    if ((process.env.NODE_ENV !== 'production') && !isFunction$1(cb)) {\r\n        warn(`\\`watch(fn, options?)\\` signature has been moved to a separate API. ` +\r\n            `Use \\`watchEffect(fn, options?)\\` instead. \\`watch\\` now only ` +\r\n            `supports \\`watch(source, cb, options?) signature.`);\r\n    }\r\n    return doWatch(source, cb, options);\r\n}\r\nfunction doWatch(source, cb, { immediate, deep, flush, onTrack, onTrigger } = EMPTY_OBJ, instance = currentInstance) {\r\n    if ((process.env.NODE_ENV !== 'production') && !cb) {\r\n        if (immediate !== undefined) {\r\n            warn(`watch() \"immediate\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n        if (deep !== undefined) {\r\n            warn(`watch() \"deep\" option is only respected when using the ` +\r\n                `watch(source, callback, options?) signature.`);\r\n        }\r\n    }\r\n    const warnInvalidSource = (s) => {\r\n        warn(`Invalid watch source: `, s, `A watch source can only be a getter/effect function, a ref, ` +\r\n            `a reactive object, or an array of these types.`);\r\n    };\r\n    let getter;\r\n    let forceTrigger = false;\r\n    let isMultiSource = false;\r\n    if (isRef(source)) {\r\n        getter = () => source.value;\r\n        forceTrigger = !!source._shallow;\r\n    }\r\n    else if (isReactive(source)) {\r\n        getter = () => source;\r\n        deep = true;\r\n    }\r\n    else if (isArray(source)) {\r\n        isMultiSource = true;\r\n        forceTrigger = source.some(isReactive);\r\n        getter = () => source.map(s => {\r\n            if (isRef(s)) {\r\n                return s.value;\r\n            }\r\n            else if (isReactive(s)) {\r\n                return traverse(s);\r\n            }\r\n            else if (isFunction$1(s)) {\r\n                return callWithErrorHandling(s, instance, 2 /* WATCH_GETTER */);\r\n            }\r\n            else {\r\n                (process.env.NODE_ENV !== 'production') && warnInvalidSource(s);\r\n            }\r\n        });\r\n    }\r\n    else if (isFunction$1(source)) {\r\n        if (cb) {\r\n            // getter with cb\r\n            getter = () => callWithErrorHandling(source, instance, 2 /* WATCH_GETTER */);\r\n        }\r\n        else {\r\n            // no cb -> simple effect\r\n            getter = () => {\r\n                if (instance && instance.isUnmounted) {\r\n                    return;\r\n                }\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                return callWithAsyncErrorHandling(source, instance, 3 /* WATCH_CALLBACK */, [onInvalidate]);\r\n            };\r\n        }\r\n    }\r\n    else {\r\n        getter = NOOP;\r\n        (process.env.NODE_ENV !== 'production') && warnInvalidSource(source);\r\n    }\r\n    if (cb && deep) {\r\n        const baseGetter = getter;\r\n        getter = () => traverse(baseGetter());\r\n    }\r\n    let cleanup;\r\n    let onInvalidate = (fn) => {\r\n        cleanup = runner.options.onStop = () => {\r\n            callWithErrorHandling(fn, instance, 4 /* WATCH_CLEANUP */);\r\n        };\r\n    };\r\n    let oldValue = isMultiSource ? [] : INITIAL_WATCHER_VALUE;\r\n    const job = () => {\r\n        if (!runner.active) {\r\n            return;\r\n        }\r\n        if (cb) {\r\n            // watch(source, cb)\r\n            const newValue = runner();\r\n            if (deep ||\r\n                forceTrigger ||\r\n                (isMultiSource\r\n                    ? newValue.some((v, i) => hasChanged(v, oldValue[i]))\r\n                    : hasChanged(newValue, oldValue)) ||\r\n                (false  )) {\r\n                // cleanup before running cb again\r\n                if (cleanup) {\r\n                    cleanup();\r\n                }\r\n                callWithAsyncErrorHandling(cb, instance, 3 /* WATCH_CALLBACK */, [\r\n                    newValue,\r\n                    // pass undefined as the old value when it's changed for the first time\r\n                    oldValue === INITIAL_WATCHER_VALUE ? undefined : oldValue,\r\n                    onInvalidate\r\n                ]);\r\n                oldValue = newValue;\r\n            }\r\n        }\r\n        else {\r\n            // watchEffect\r\n            runner();\r\n        }\r\n    };\r\n    // important: mark the job as a watcher callback so that scheduler knows\r\n    // it is allowed to self-trigger (#1727)\r\n    job.allowRecurse = !!cb;\r\n    let scheduler;\r\n    if (flush === 'sync') {\r\n        scheduler = job; // the scheduler function gets called directly\r\n    }\r\n    else if (flush === 'post') {\r\n        scheduler = () => queuePostRenderEffect(job, instance && instance.suspense);\r\n    }\r\n    else {\r\n        // default: 'pre'\r\n        scheduler = () => {\r\n            if (!instance || instance.isMounted) {\r\n                queuePreFlushCb(job);\r\n            }\r\n            else {\r\n                // with 'pre' option, the first call must happen before\r\n                // the component is mounted so it is called synchronously.\r\n                job();\r\n            }\r\n        };\r\n    }\r\n    const runner = effect(getter, {\r\n        lazy: true,\r\n        onTrack,\r\n        onTrigger,\r\n        scheduler\r\n    });\r\n    recordInstanceBoundEffect(runner, instance);\r\n    // initial run\r\n    if (cb) {\r\n        if (immediate) {\r\n            job();\r\n        }\r\n        else {\r\n            oldValue = runner();\r\n        }\r\n    }\r\n    else if (flush === 'post') {\r\n        queuePostRenderEffect(runner, instance && instance.suspense);\r\n    }\r\n    else {\r\n        runner();\r\n    }\r\n    return () => {\r\n        stop(runner);\r\n        if (instance) {\r\n            remove(instance.effects, runner);\r\n        }\r\n    };\r\n}\r\n// this.$watch\r\nfunction instanceWatch(source, value, options) {\r\n    const publicThis = this.proxy;\r\n    const getter = isString(source)\r\n        ? source.includes('.')\r\n            ? createPathGetter(publicThis, source)\r\n            : () => publicThis[source]\r\n        : source.bind(publicThis, publicThis);\r\n    let cb;\r\n    if (isFunction$1(value)) {\r\n        cb = value;\r\n    }\r\n    else {\r\n        cb = value.handler;\r\n        options = value;\r\n    }\r\n    return doWatch(getter, cb.bind(publicThis), options, this);\r\n}\r\nfunction createPathGetter(ctx, path) {\r\n    const segments = path.split('.');\r\n    return () => {\r\n        let cur = ctx;\r\n        for (let i = 0; i < segments.length && cur; i++) {\r\n            cur = cur[segments[i]];\r\n        }\r\n        return cur;\r\n    };\r\n}\r\nfunction traverse(value, seen = new Set()) {\r\n    if (!isObject$1(value) ||\r\n        seen.has(value) ||\r\n        value[\"__v_skip\" /* SKIP */]) {\r\n        return value;\r\n    }\r\n    seen.add(value);\r\n    if (isRef(value)) {\r\n        traverse(value.value, seen);\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            traverse(value[i], seen);\r\n        }\r\n    }\r\n    else if (isSet(value) || isMap(value)) {\r\n        value.forEach((v) => {\r\n            traverse(v, seen);\r\n        });\r\n    }\r\n    else if (isPlainObject(value)) {\r\n        for (const key in value) {\r\n            traverse(value[key], seen);\r\n        }\r\n    }\r\n    return value;\r\n}\n\nfunction useTransitionState() {\r\n    const state = {\r\n        isMounted: false,\r\n        isLeaving: false,\r\n        isUnmounting: false,\r\n        leavingVNodes: new Map()\r\n    };\r\n    onMounted(() => {\r\n        state.isMounted = true;\r\n    });\r\n    onBeforeUnmount(() => {\r\n        state.isUnmounting = true;\r\n    });\r\n    return state;\r\n}\r\nconst TransitionHookValidator = [Function, Array];\r\nconst BaseTransitionImpl = {\r\n    name: `BaseTransition`,\r\n    props: {\r\n        mode: String,\r\n        appear: Boolean,\r\n        persisted: Boolean,\r\n        // enter\r\n        onBeforeEnter: TransitionHookValidator,\r\n        onEnter: TransitionHookValidator,\r\n        onAfterEnter: TransitionHookValidator,\r\n        onEnterCancelled: TransitionHookValidator,\r\n        // leave\r\n        onBeforeLeave: TransitionHookValidator,\r\n        onLeave: TransitionHookValidator,\r\n        onAfterLeave: TransitionHookValidator,\r\n        onLeaveCancelled: TransitionHookValidator,\r\n        // appear\r\n        onBeforeAppear: TransitionHookValidator,\r\n        onAppear: TransitionHookValidator,\r\n        onAfterAppear: TransitionHookValidator,\r\n        onAppearCancelled: TransitionHookValidator\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevTransitionKey;\r\n        return () => {\r\n            const children = slots.default && getTransitionRawChildren(slots.default(), true);\r\n            if (!children || !children.length) {\r\n                return;\r\n            }\r\n            // warn multiple elements\r\n            if ((process.env.NODE_ENV !== 'production') && children.length > 1) {\r\n                warn('<transition> can only be used on a single element or component. Use ' +\r\n                    '<transition-group> for lists.');\r\n            }\r\n            // there's no need to track reactivity for these props so use the raw\r\n            // props for a bit better perf\r\n            const rawProps = toRaw(props);\r\n            const { mode } = rawProps;\r\n            // check mode\r\n            if ((process.env.NODE_ENV !== 'production') && mode && !['in-out', 'out-in', 'default'].includes(mode)) {\r\n                warn(`invalid <transition> mode: ${mode}`);\r\n            }\r\n            // at this point children has a guaranteed length of 1.\r\n            const child = children[0];\r\n            if (state.isLeaving) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            // in the case of <transition><keep-alive/></transition>, we need to\r\n            // compare the type of the kept-alive children.\r\n            const innerChild = getKeepAliveChild(child);\r\n            if (!innerChild) {\r\n                return emptyPlaceholder(child);\r\n            }\r\n            const enterHooks = resolveTransitionHooks(innerChild, rawProps, state, instance);\r\n            setTransitionHooks(innerChild, enterHooks);\r\n            const oldChild = instance.subTree;\r\n            const oldInnerChild = oldChild && getKeepAliveChild(oldChild);\r\n            let transitionKeyChanged = false;\r\n            const { getTransitionKey } = innerChild.type;\r\n            if (getTransitionKey) {\r\n                const key = getTransitionKey();\r\n                if (prevTransitionKey === undefined) {\r\n                    prevTransitionKey = key;\r\n                }\r\n                else if (key !== prevTransitionKey) {\r\n                    prevTransitionKey = key;\r\n                    transitionKeyChanged = true;\r\n                }\r\n            }\r\n            // handle mode\r\n            if (oldInnerChild &&\r\n                oldInnerChild.type !== Comment$1 &&\r\n                (!isSameVNodeType(innerChild, oldInnerChild) || transitionKeyChanged)) {\r\n                const leavingHooks = resolveTransitionHooks(oldInnerChild, rawProps, state, instance);\r\n                // update old tree's hooks in case of dynamic transition\r\n                setTransitionHooks(oldInnerChild, leavingHooks);\r\n                // switching between different views\r\n                if (mode === 'out-in') {\r\n                    state.isLeaving = true;\r\n                    // return placeholder node and queue update when leave finishes\r\n                    leavingHooks.afterLeave = () => {\r\n                        state.isLeaving = false;\r\n                        instance.update();\r\n                    };\r\n                    return emptyPlaceholder(child);\r\n                }\r\n                else if (mode === 'in-out' && innerChild.type !== Comment$1) {\r\n                    leavingHooks.delayLeave = (el, earlyRemove, delayedLeave) => {\r\n                        const leavingVNodesCache = getLeavingNodesForType(state, oldInnerChild);\r\n                        leavingVNodesCache[String(oldInnerChild.key)] = oldInnerChild;\r\n                        // early removal callback\r\n                        el._leaveCb = () => {\r\n                            earlyRemove();\r\n                            el._leaveCb = undefined;\r\n                            delete enterHooks.delayedLeave;\r\n                        };\r\n                        enterHooks.delayedLeave = delayedLeave;\r\n                    };\r\n                }\r\n            }\r\n            return child;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst BaseTransition = BaseTransitionImpl;\r\nfunction getLeavingNodesForType(state, vnode) {\r\n    const { leavingVNodes } = state;\r\n    let leavingVNodesCache = leavingVNodes.get(vnode.type);\r\n    if (!leavingVNodesCache) {\r\n        leavingVNodesCache = Object.create(null);\r\n        leavingVNodes.set(vnode.type, leavingVNodesCache);\r\n    }\r\n    return leavingVNodesCache;\r\n}\r\n// The transition hooks are attached to the vnode as vnode.transition\r\n// and will be called at appropriate timing in the renderer.\r\nfunction resolveTransitionHooks(vnode, props, state, instance) {\r\n    const { appear, mode, persisted = false, onBeforeEnter, onEnter, onAfterEnter, onEnterCancelled, onBeforeLeave, onLeave, onAfterLeave, onLeaveCancelled, onBeforeAppear, onAppear, onAfterAppear, onAppearCancelled } = props;\r\n    const key = String(vnode.key);\r\n    const leavingVNodesCache = getLeavingNodesForType(state, vnode);\r\n    const callHook = (hook, args) => {\r\n        hook &&\r\n            callWithAsyncErrorHandling(hook, instance, 9 /* TRANSITION_HOOK */, args);\r\n    };\r\n    const hooks = {\r\n        mode,\r\n        persisted,\r\n        beforeEnter(el) {\r\n            let hook = onBeforeEnter;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onBeforeAppear || onBeforeEnter;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            // for same element (v-show)\r\n            if (el._leaveCb) {\r\n                el._leaveCb(true /* cancelled */);\r\n            }\r\n            // for toggled element with same key (v-if)\r\n            const leavingVNode = leavingVNodesCache[key];\r\n            if (leavingVNode &&\r\n                isSameVNodeType(vnode, leavingVNode) &&\r\n                leavingVNode.el._leaveCb) {\r\n                // force early removal (not cancelled)\r\n                leavingVNode.el._leaveCb();\r\n            }\r\n            callHook(hook, [el]);\r\n        },\r\n        enter(el) {\r\n            let hook = onEnter;\r\n            let afterHook = onAfterEnter;\r\n            let cancelHook = onEnterCancelled;\r\n            if (!state.isMounted) {\r\n                if (appear) {\r\n                    hook = onAppear || onEnter;\r\n                    afterHook = onAfterAppear || onAfterEnter;\r\n                    cancelHook = onAppearCancelled || onEnterCancelled;\r\n                }\r\n                else {\r\n                    return;\r\n                }\r\n            }\r\n            let called = false;\r\n            const done = (el._enterCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                if (cancelled) {\r\n                    callHook(cancelHook, [el]);\r\n                }\r\n                else {\r\n                    callHook(afterHook, [el]);\r\n                }\r\n                if (hooks.delayedLeave) {\r\n                    hooks.delayedLeave();\r\n                }\r\n                el._enterCb = undefined;\r\n            });\r\n            if (hook) {\r\n                hook(el, done);\r\n                if (hook.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        leave(el, remove) {\r\n            const key = String(vnode.key);\r\n            if (el._enterCb) {\r\n                el._enterCb(true /* cancelled */);\r\n            }\r\n            if (state.isUnmounting) {\r\n                return remove();\r\n            }\r\n            callHook(onBeforeLeave, [el]);\r\n            let called = false;\r\n            const done = (el._leaveCb = (cancelled) => {\r\n                if (called)\r\n                    return;\r\n                called = true;\r\n                remove();\r\n                if (cancelled) {\r\n                    callHook(onLeaveCancelled, [el]);\r\n                }\r\n                else {\r\n                    callHook(onAfterLeave, [el]);\r\n                }\r\n                el._leaveCb = undefined;\r\n                if (leavingVNodesCache[key] === vnode) {\r\n                    delete leavingVNodesCache[key];\r\n                }\r\n            });\r\n            leavingVNodesCache[key] = vnode;\r\n            if (onLeave) {\r\n                onLeave(el, done);\r\n                if (onLeave.length <= 1) {\r\n                    done();\r\n                }\r\n            }\r\n            else {\r\n                done();\r\n            }\r\n        },\r\n        clone(vnode) {\r\n            return resolveTransitionHooks(vnode, props, state, instance);\r\n        }\r\n    };\r\n    return hooks;\r\n}\r\n// the placeholder really only handles one special case: KeepAlive\r\n// in the case of a KeepAlive in a leave phase we need to return a KeepAlive\r\n// placeholder with empty content to avoid the KeepAlive instance from being\r\n// unmounted.\r\nfunction emptyPlaceholder(vnode) {\r\n    if (isKeepAlive(vnode)) {\r\n        vnode = cloneVNode(vnode);\r\n        vnode.children = null;\r\n        return vnode;\r\n    }\r\n}\r\nfunction getKeepAliveChild(vnode) {\r\n    return isKeepAlive(vnode)\r\n        ? vnode.children\r\n            ? vnode.children[0]\r\n            : undefined\r\n        : vnode;\r\n}\r\nfunction setTransitionHooks(vnode, hooks) {\r\n    if (vnode.shapeFlag & 6 /* COMPONENT */ && vnode.component) {\r\n        setTransitionHooks(vnode.component.subTree, hooks);\r\n    }\r\n    else if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        vnode.ssContent.transition = hooks.clone(vnode.ssContent);\r\n        vnode.ssFallback.transition = hooks.clone(vnode.ssFallback);\r\n    }\r\n    else {\r\n        vnode.transition = hooks;\r\n    }\r\n}\r\nfunction getTransitionRawChildren(children, keepComment = false) {\r\n    let ret = [];\r\n    let keyedFragmentCount = 0;\r\n    for (let i = 0; i < children.length; i++) {\r\n        const child = children[i];\r\n        // handle fragment children case, e.g. v-for\r\n        if (child.type === Fragment) {\r\n            if (child.patchFlag & 128 /* KEYED_FRAGMENT */)\r\n                keyedFragmentCount++;\r\n            ret = ret.concat(getTransitionRawChildren(child.children, keepComment));\r\n        }\r\n        // comment placeholders should be skipped, e.g. v-if\r\n        else if (keepComment || child.type !== Comment$1) {\r\n            ret.push(child);\r\n        }\r\n    }\r\n    // #1126 if a transition children list contains multiple sub fragments, these\r\n    // fragments will be merged into a flat children array. Since each v-for\r\n    // fragment may contain different static bindings inside, we need to de-op\r\n    // these children to force full diffs to ensure correct behavior.\r\n    if (keyedFragmentCount > 1) {\r\n        for (let i = 0; i < ret.length; i++) {\r\n            ret[i].patchFlag = -2 /* BAIL */;\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n// implementation, close to no-op\r\nfunction defineComponent(options) {\r\n    return isFunction$1(options) ? { setup: options, name: options.name } : options;\r\n}\n\nconst isAsyncWrapper = (i) => !!i.type.__asyncLoader;\r\nfunction defineAsyncComponent(source) {\r\n    if (isFunction$1(source)) {\r\n        source = { loader: source };\r\n    }\r\n    const { loader, loadingComponent, errorComponent, delay = 200, timeout, // undefined = never times out\r\n    suspensible = true, onError: userOnError } = source;\r\n    let pendingRequest = null;\r\n    let resolvedComp;\r\n    let retries = 0;\r\n    const retry = () => {\r\n        retries++;\r\n        pendingRequest = null;\r\n        return load();\r\n    };\r\n    const load = () => {\r\n        let thisRequest;\r\n        return (pendingRequest ||\r\n            (thisRequest = pendingRequest = loader()\r\n                .catch(err => {\r\n                err = err instanceof Error ? err : new Error(String(err));\r\n                if (userOnError) {\r\n                    return new Promise((resolve, reject) => {\r\n                        const userRetry = () => resolve(retry());\r\n                        const userFail = () => reject(err);\r\n                        userOnError(err, userRetry, userFail, retries + 1);\r\n                    });\r\n                }\r\n                else {\r\n                    throw err;\r\n                }\r\n            })\r\n                .then((comp) => {\r\n                if (thisRequest !== pendingRequest && pendingRequest) {\r\n                    return pendingRequest;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && !comp) {\r\n                    warn(`Async component loader resolved to undefined. ` +\r\n                        `If you are using retry(), make sure to return its return value.`);\r\n                }\r\n                // interop module default\r\n                if (comp &&\r\n                    (comp.__esModule || comp[Symbol.toStringTag] === 'Module')) {\r\n                    comp = comp.default;\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && comp && !isObject$1(comp) && !isFunction$1(comp)) {\r\n                    throw new Error(`Invalid async component load result: ${comp}`);\r\n                }\r\n                resolvedComp = comp;\r\n                return comp;\r\n            })));\r\n    };\r\n    return defineComponent({\r\n        name: 'AsyncComponentWrapper',\r\n        __asyncLoader: load,\r\n        get __asyncResolved() {\r\n            return resolvedComp;\r\n        },\r\n        setup() {\r\n            const instance = currentInstance;\r\n            // already resolved\r\n            if (resolvedComp) {\r\n                return () => createInnerComp(resolvedComp, instance);\r\n            }\r\n            const onError = (err) => {\r\n                pendingRequest = null;\r\n                handleError(err, instance, 13 /* ASYNC_COMPONENT_LOADER */, !errorComponent /* do not throw in dev if user provided error component */);\r\n            };\r\n            // suspense-controlled or SSR.\r\n            if ((suspensible && instance.suspense) ||\r\n                (false )) {\r\n                return load()\r\n                    .then(comp => {\r\n                    return () => createInnerComp(comp, instance);\r\n                })\r\n                    .catch(err => {\r\n                    onError(err);\r\n                    return () => errorComponent\r\n                        ? createVNode(errorComponent, {\r\n                            error: err\r\n                        })\r\n                        : null;\r\n                });\r\n            }\r\n            const loaded = ref(false);\r\n            const error = ref();\r\n            const delayed = ref(!!delay);\r\n            if (delay) {\r\n                setTimeout(() => {\r\n                    delayed.value = false;\r\n                }, delay);\r\n            }\r\n            if (timeout != null) {\r\n                setTimeout(() => {\r\n                    if (!loaded.value && !error.value) {\r\n                        const err = new Error(`Async component timed out after ${timeout}ms.`);\r\n                        onError(err);\r\n                        error.value = err;\r\n                    }\r\n                }, timeout);\r\n            }\r\n            load()\r\n                .then(() => {\r\n                loaded.value = true;\r\n                if (instance.parent && isKeepAlive(instance.parent.vnode)) {\r\n                    // parent is keep-alive, force update so the loaded component's\r\n                    // name is taken into account\r\n                    queueJob(instance.parent.update);\r\n                }\r\n            })\r\n                .catch(err => {\r\n                onError(err);\r\n                error.value = err;\r\n            });\r\n            return () => {\r\n                if (loaded.value && resolvedComp) {\r\n                    return createInnerComp(resolvedComp, instance);\r\n                }\r\n                else if (error.value && errorComponent) {\r\n                    return createVNode(errorComponent, {\r\n                        error: error.value\r\n                    });\r\n                }\r\n                else if (loadingComponent && !delayed.value) {\r\n                    return createVNode(loadingComponent);\r\n                }\r\n            };\r\n        }\r\n    });\r\n}\r\nfunction createInnerComp(comp, { vnode: { ref, props, children } }) {\r\n    const vnode = createVNode(comp, props, children);\r\n    // ensure inner component inherits the async wrapper's ref owner\r\n    vnode.ref = ref;\r\n    return vnode;\r\n}\n\nconst isKeepAlive = (vnode) => vnode.type.__isKeepAlive;\r\nconst KeepAliveImpl = {\r\n    name: `KeepAlive`,\r\n    // Marker for special handling inside the renderer. We are not using a ===\r\n    // check directly on KeepAlive in the renderer, because importing it directly\r\n    // would prevent it from being tree-shaken.\r\n    __isKeepAlive: true,\r\n    props: {\r\n        include: [String, RegExp, Array],\r\n        exclude: [String, RegExp, Array],\r\n        max: [String, Number]\r\n    },\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        // KeepAlive communicates with the instantiated renderer via the\r\n        // ctx where the renderer passes in its internals,\r\n        // and the KeepAlive instance exposes activate/deactivate implementations.\r\n        // The whole point of this is to avoid importing KeepAlive directly in the\r\n        // renderer to facilitate tree-shaking.\r\n        const sharedContext = instance.ctx;\r\n        // if the internal renderer is not registered, it indicates that this is server-side rendering,\r\n        // for KeepAlive, we just need to render its children\r\n        if (!sharedContext.renderer) {\r\n            return slots.default;\r\n        }\r\n        const cache = new Map();\r\n        const keys = new Set();\r\n        let current = null;\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.__v_cache = cache;\r\n        }\r\n        const parentSuspense = instance.suspense;\r\n        const { renderer: { p: patch, m: move, um: _unmount, o: { createElement } } } = sharedContext;\r\n        const storageContainer = createElement('div');\r\n        sharedContext.activate = (vnode, container, anchor, isSVG, optimized) => {\r\n            const instance = vnode.component;\r\n            move(vnode, container, anchor, 0 /* ENTER */, parentSuspense);\r\n            // in case props have changed\r\n            patch(instance.vnode, vnode, container, anchor, instance, parentSuspense, isSVG, vnode.slotScopeIds, optimized);\r\n            queuePostRenderEffect(() => {\r\n                instance.isDeactivated = false;\r\n                if (instance.a) {\r\n                    invokeArrayFns(instance.a);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeMounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        sharedContext.deactivate = (vnode) => {\r\n            const instance = vnode.component;\r\n            move(vnode, storageContainer, null, 1 /* LEAVE */, parentSuspense);\r\n            queuePostRenderEffect(() => {\r\n                if (instance.da) {\r\n                    invokeArrayFns(instance.da);\r\n                }\r\n                const vnodeHook = vnode.props && vnode.props.onVnodeUnmounted;\r\n                if (vnodeHook) {\r\n                    invokeVNodeHook(vnodeHook, instance.parent, vnode);\r\n                }\r\n                instance.isDeactivated = true;\r\n            }, parentSuspense);\r\n            if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                // Update components tree\r\n                devtoolsComponentAdded(instance);\r\n            }\r\n        };\r\n        function unmount(vnode) {\r\n            // reset the shapeFlag so it can be properly unmounted\r\n            resetShapeFlag(vnode);\r\n            _unmount(vnode, instance, parentSuspense);\r\n        }\r\n        function pruneCache(filter) {\r\n            cache.forEach((vnode, key) => {\r\n                const name = getComponentName(vnode.type);\r\n                if (name && (!filter || !filter(name))) {\r\n                    pruneCacheEntry(key);\r\n                }\r\n            });\r\n        }\r\n        function pruneCacheEntry(key) {\r\n            const cached = cache.get(key);\r\n            if (!current || cached.type !== current.type) {\r\n                unmount(cached);\r\n            }\r\n            else if (current) {\r\n                // current active instance should no longer be kept-alive.\r\n                // we can't unmount it now but it might be later, so reset its flag now.\r\n                resetShapeFlag(current);\r\n            }\r\n            cache.delete(key);\r\n            keys.delete(key);\r\n        }\r\n        // prune cache on include/exclude prop change\r\n        watch(() => [props.include, props.exclude], ([include, exclude]) => {\r\n            include && pruneCache(name => matches(include, name));\r\n            exclude && pruneCache(name => !matches(exclude, name));\r\n        }, \r\n        // prune post-render after `current` has been updated\r\n        { flush: 'post', deep: true });\r\n        // cache sub tree after render\r\n        let pendingCacheKey = null;\r\n        const cacheSubtree = () => {\r\n            // fix #1621, the pendingCacheKey could be 0\r\n            if (pendingCacheKey != null) {\r\n                cache.set(pendingCacheKey, getInnerChild(instance.subTree));\r\n            }\r\n        };\r\n        onMounted(cacheSubtree);\r\n        onUpdated(cacheSubtree);\r\n        onBeforeUnmount(() => {\r\n            cache.forEach(cached => {\r\n                const { subTree, suspense } = instance;\r\n                const vnode = getInnerChild(subTree);\r\n                if (cached.type === vnode.type) {\r\n                    // current instance will be unmounted as part of keep-alive's unmount\r\n                    resetShapeFlag(vnode);\r\n                    // but invoke its deactivated hook here\r\n                    const da = vnode.component.da;\r\n                    da && queuePostRenderEffect(da, suspense);\r\n                    return;\r\n                }\r\n                unmount(cached);\r\n            });\r\n        });\r\n        return () => {\r\n            pendingCacheKey = null;\r\n            if (!slots.default) {\r\n                return null;\r\n            }\r\n            const children = slots.default();\r\n            const rawVNode = children[0];\r\n            if (children.length > 1) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`KeepAlive should contain exactly one component child.`);\r\n                }\r\n                current = null;\r\n                return children;\r\n            }\r\n            else if (!isVNode(rawVNode) ||\r\n                (!(rawVNode.shapeFlag & 4 /* STATEFUL_COMPONENT */) &&\r\n                    !(rawVNode.shapeFlag & 128 /* SUSPENSE */))) {\r\n                current = null;\r\n                return rawVNode;\r\n            }\r\n            let vnode = getInnerChild(rawVNode);\r\n            const comp = vnode.type;\r\n            // for async components, name check should be based in its loaded\r\n            // inner component if available\r\n            const name = getComponentName(isAsyncWrapper(vnode)\r\n                ? vnode.type.__asyncResolved || {}\r\n                : comp);\r\n            const { include, exclude, max } = props;\r\n            if ((include && (!name || !matches(include, name))) ||\r\n                (exclude && name && matches(exclude, name))) {\r\n                current = vnode;\r\n                return rawVNode;\r\n            }\r\n            const key = vnode.key == null ? comp : vnode.key;\r\n            const cachedVNode = cache.get(key);\r\n            // clone vnode if it's reused because we are going to mutate it\r\n            if (vnode.el) {\r\n                vnode = cloneVNode(vnode);\r\n                if (rawVNode.shapeFlag & 128 /* SUSPENSE */) {\r\n                    rawVNode.ssContent = vnode;\r\n                }\r\n            }\r\n            // #1513 it's possible for the returned vnode to be cloned due to attr\r\n            // fallthrough or scopeId, so the vnode here may not be the final vnode\r\n            // that is mounted. Instead of caching it directly, we store the pending\r\n            // key and cache `instance.subTree` (the normalized vnode) in\r\n            // beforeMount/beforeUpdate hooks.\r\n            pendingCacheKey = key;\r\n            if (cachedVNode) {\r\n                // copy over mounted state\r\n                vnode.el = cachedVNode.el;\r\n                vnode.component = cachedVNode.component;\r\n                if (vnode.transition) {\r\n                    // recursively update transition hooks on subTree\r\n                    setTransitionHooks(vnode, vnode.transition);\r\n                }\r\n                // avoid vnode being mounted as fresh\r\n                vnode.shapeFlag |= 512 /* COMPONENT_KEPT_ALIVE */;\r\n                // make this key the freshest\r\n                keys.delete(key);\r\n                keys.add(key);\r\n            }\r\n            else {\r\n                keys.add(key);\r\n                // prune oldest entry\r\n                if (max && keys.size > parseInt(max, 10)) {\r\n                    pruneCacheEntry(keys.values().next().value);\r\n                }\r\n            }\r\n            // avoid vnode being unmounted\r\n            vnode.shapeFlag |= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n            current = vnode;\r\n            return rawVNode;\r\n        };\r\n    }\r\n};\r\n// export the public type for h/tsx inference\r\n// also to avoid inline import() in generated d.ts files\r\nconst KeepAlive = KeepAliveImpl;\r\nfunction matches(pattern, name) {\r\n    if (isArray(pattern)) {\r\n        return pattern.some((p) => matches(p, name));\r\n    }\r\n    else if (isString(pattern)) {\r\n        return pattern.split(',').indexOf(name) > -1;\r\n    }\r\n    else if (pattern.test) {\r\n        return pattern.test(name);\r\n    }\r\n    /* istanbul ignore next */\r\n    return false;\r\n}\r\nfunction onActivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"a\" /* ACTIVATED */, target);\r\n}\r\nfunction onDeactivated(hook, target) {\r\n    registerKeepAliveHook(hook, \"da\" /* DEACTIVATED */, target);\r\n}\r\nfunction registerKeepAliveHook(hook, type, target = currentInstance) {\r\n    // cache the deactivate branch check wrapper for injected hooks so the same\r\n    // hook can be properly deduped by the scheduler. \"__wdc\" stands for \"with\r\n    // deactivation check\".\r\n    const wrappedHook = hook.__wdc ||\r\n        (hook.__wdc = () => {\r\n            // only fire the hook if the target instance is NOT in a deactivated branch.\r\n            let current = target;\r\n            while (current) {\r\n                if (current.isDeactivated) {\r\n                    return;\r\n                }\r\n                current = current.parent;\r\n            }\r\n            hook();\r\n        });\r\n    injectHook(type, wrappedHook, target);\r\n    // In addition to registering it on the target instance, we walk up the parent\r\n    // chain and register it on all ancestor instances that are keep-alive roots.\r\n    // This avoids the need to walk the entire component tree when invoking these\r\n    // hooks, and more importantly, avoids the need to track child components in\r\n    // arrays.\r\n    if (target) {\r\n        let current = target.parent;\r\n        while (current && current.parent) {\r\n            if (isKeepAlive(current.parent.vnode)) {\r\n                injectToKeepAliveRoot(wrappedHook, type, target, current);\r\n            }\r\n            current = current.parent;\r\n        }\r\n    }\r\n}\r\nfunction injectToKeepAliveRoot(hook, type, target, keepAliveRoot) {\r\n    // injectHook wraps the original for error handling, so make sure to remove\r\n    // the wrapped version.\r\n    const injected = injectHook(type, hook, keepAliveRoot, true /* prepend */);\r\n    onUnmounted(() => {\r\n        remove(keepAliveRoot[type], injected);\r\n    }, target);\r\n}\r\nfunction resetShapeFlag(vnode) {\r\n    let shapeFlag = vnode.shapeFlag;\r\n    if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n        shapeFlag -= 256 /* COMPONENT_SHOULD_KEEP_ALIVE */;\r\n    }\r\n    if (shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n        shapeFlag -= 512 /* COMPONENT_KEPT_ALIVE */;\r\n    }\r\n    vnode.shapeFlag = shapeFlag;\r\n}\r\nfunction getInnerChild(vnode) {\r\n    return vnode.shapeFlag & 128 /* SUSPENSE */ ? vnode.ssContent : vnode;\r\n}\n\nfunction injectHook(type, hook, target = currentInstance, prepend = false) {\r\n    if (target) {\r\n        const hooks = target[type] || (target[type] = []);\r\n        // cache the error handling wrapper for injected hooks so the same hook\r\n        // can be properly deduped by the scheduler. \"__weh\" stands for \"with error\r\n        // handling\".\r\n        const wrappedHook = hook.__weh ||\r\n            (hook.__weh = (...args) => {\r\n                if (target.isUnmounted) {\r\n                    return;\r\n                }\r\n                // disable tracking inside all lifecycle hooks\r\n                // since they can potentially be called inside effects.\r\n                pauseTracking();\r\n                // Set currentInstance during hook invocation.\r\n                // This assumes the hook does not synchronously trigger other hooks, which\r\n                // can only be false when the user does something really funky.\r\n                setCurrentInstance(target);\r\n                const res = callWithAsyncErrorHandling(hook, target, type, args);\r\n                setCurrentInstance(null);\r\n                resetTracking();\r\n                return res;\r\n            });\r\n        if (prepend) {\r\n            hooks.unshift(wrappedHook);\r\n        }\r\n        else {\r\n            hooks.push(wrappedHook);\r\n        }\r\n        return wrappedHook;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        const apiName = toHandlerKey(ErrorTypeStrings[type].replace(/ hook$/, ''));\r\n        warn(`${apiName} is called when there is no active component instance to be ` +\r\n            `associated with. ` +\r\n            `Lifecycle injection APIs can only be used during execution of setup().` +\r\n            (` If you are using async setup(), make sure to register lifecycle ` +\r\n                    `hooks before the first await statement.`\r\n                ));\r\n    }\r\n}\r\nconst createHook = (lifecycle) => (hook, target = currentInstance) => \r\n// post-create lifecycle registrations are noops during SSR (except for serverPrefetch)\r\n(!isInSSRComponentSetup || lifecycle === \"sp\" /* SERVER_PREFETCH */) &&\r\n    injectHook(lifecycle, hook, target);\r\nconst onBeforeMount = createHook(\"bm\" /* BEFORE_MOUNT */);\r\nconst onMounted = createHook(\"m\" /* MOUNTED */);\r\nconst onBeforeUpdate = createHook(\"bu\" /* BEFORE_UPDATE */);\r\nconst onUpdated = createHook(\"u\" /* UPDATED */);\r\nconst onBeforeUnmount = createHook(\"bum\" /* BEFORE_UNMOUNT */);\r\nconst onUnmounted = createHook(\"um\" /* UNMOUNTED */);\r\nconst onServerPrefetch = createHook(\"sp\" /* SERVER_PREFETCH */);\r\nconst onRenderTriggered = createHook(\"rtg\" /* RENDER_TRIGGERED */);\r\nconst onRenderTracked = createHook(\"rtc\" /* RENDER_TRACKED */);\r\nfunction onErrorCaptured(hook, target = currentInstance) {\r\n    injectHook(\"ec\" /* ERROR_CAPTURED */, hook, target);\r\n}\n\nfunction createDuplicateChecker() {\r\n    const cache = Object.create(null);\r\n    return (type, key) => {\r\n        if (cache[key]) {\r\n            warn(`${type} property \"${key}\" is already defined in ${cache[key]}.`);\r\n        }\r\n        else {\r\n            cache[key] = type;\r\n        }\r\n    };\r\n}\r\nlet shouldCacheAccess = true;\r\nfunction applyOptions(instance) {\r\n    const options = resolveMergedOptions(instance);\r\n    const publicThis = instance.proxy;\r\n    const ctx = instance.ctx;\r\n    // do not cache property access on public proxy during state initialization\r\n    shouldCacheAccess = false;\r\n    // call beforeCreate first before accessing other options since\r\n    // the hook may mutate resolved options (#2791)\r\n    if (options.beforeCreate) {\r\n        callHook(options.beforeCreate, instance, \"bc\" /* BEFORE_CREATE */);\r\n    }\r\n    const { \r\n    // state\r\n    data: dataOptions, computed: computedOptions, methods, watch: watchOptions, provide: provideOptions, inject: injectOptions, \r\n    // lifecycle\r\n    created, beforeMount, mounted, beforeUpdate, updated, activated, deactivated, beforeDestroy, beforeUnmount, destroyed, unmounted, render, renderTracked, renderTriggered, errorCaptured, serverPrefetch, \r\n    // public API\r\n    expose, inheritAttrs, \r\n    // assets\r\n    components, directives, filters } = options;\r\n    const checkDuplicateProperties = (process.env.NODE_ENV !== 'production') ? createDuplicateChecker() : null;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        const [propsOptions] = instance.propsOptions;\r\n        if (propsOptions) {\r\n            for (const key in propsOptions) {\r\n                checkDuplicateProperties(\"Props\" /* PROPS */, key);\r\n            }\r\n        }\r\n    }\r\n    // options initialization order (to be consistent with Vue 2):\r\n    // - props (already done outside of this function)\r\n    // - inject\r\n    // - methods\r\n    // - data (deferred since it relies on `this` access)\r\n    // - computed\r\n    // - watch (deferred since it relies on `this` access)\r\n    if (injectOptions) {\r\n        resolveInjections(injectOptions, ctx, checkDuplicateProperties);\r\n    }\r\n    if (methods) {\r\n        for (const key in methods) {\r\n            const methodHandler = methods[key];\r\n            if (isFunction$1(methodHandler)) {\r\n                // In dev mode, we use the `createRenderContext` function to define methods to the proxy target,\r\n                // and those are read-only but reconfigurable, so it needs to be redefined here\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    Object.defineProperty(ctx, key, {\r\n                        value: methodHandler.bind(publicThis),\r\n                        configurable: true,\r\n                        enumerable: true,\r\n                        writable: true\r\n                    });\r\n                }\r\n                else {\r\n                    ctx[key] = methodHandler.bind(publicThis);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    checkDuplicateProperties(\"Methods\" /* METHODS */, key);\r\n                }\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Method \"${key}\" has type \"${typeof methodHandler}\" in the component definition. ` +\r\n                    `Did you reference the function correctly?`);\r\n            }\r\n        }\r\n    }\r\n    if (dataOptions) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isFunction$1(dataOptions)) {\r\n            warn(`The data option must be a function. ` +\r\n                `Plain object usage is no longer supported.`);\r\n        }\r\n        const data = dataOptions.call(publicThis, publicThis);\r\n        if ((process.env.NODE_ENV !== 'production') && isPromise$1(data)) {\r\n            warn(`data() returned a Promise - note data() cannot be async; If you ` +\r\n                `intend to perform data fetching before component renders, use ` +\r\n                `async setup() + <Suspense>.`);\r\n        }\r\n        if (!isObject$1(data)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`data() should return an object.`);\r\n        }\r\n        else {\r\n            instance.data = reactive(data);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                for (const key in data) {\r\n                    checkDuplicateProperties(\"Data\" /* DATA */, key);\r\n                    // expose data on ctx during dev\r\n                    if (key[0] !== '$' && key[0] !== '_') {\r\n                        Object.defineProperty(ctx, key, {\r\n                            configurable: true,\r\n                            enumerable: true,\r\n                            get: () => data[key],\r\n                            set: NOOP\r\n                        });\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // state initialization complete at this point - start caching access\r\n    shouldCacheAccess = true;\r\n    if (computedOptions) {\r\n        for (const key in computedOptions) {\r\n            const opt = computedOptions[key];\r\n            const get = isFunction$1(opt)\r\n                ? opt.bind(publicThis, publicThis)\r\n                : isFunction$1(opt.get)\r\n                    ? opt.get.bind(publicThis, publicThis)\r\n                    : NOOP;\r\n            if ((process.env.NODE_ENV !== 'production') && get === NOOP) {\r\n                warn(`Computed property \"${key}\" has no getter.`);\r\n            }\r\n            const set = !isFunction$1(opt) && isFunction$1(opt.set)\r\n                ? opt.set.bind(publicThis)\r\n                : (process.env.NODE_ENV !== 'production')\r\n                    ? () => {\r\n                        warn(`Write operation failed: computed property \"${key}\" is readonly.`);\r\n                    }\r\n                    : NOOP;\r\n            const c = computed({\r\n                get,\r\n                set\r\n            });\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => c.value,\r\n                set: v => (c.value = v)\r\n            });\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                checkDuplicateProperties(\"Computed\" /* COMPUTED */, key);\r\n            }\r\n        }\r\n    }\r\n    if (watchOptions) {\r\n        for (const key in watchOptions) {\r\n            createWatcher(watchOptions[key], ctx, publicThis, key);\r\n        }\r\n    }\r\n    if (provideOptions) {\r\n        const provides = isFunction$1(provideOptions)\r\n            ? provideOptions.call(publicThis)\r\n            : provideOptions;\r\n        Reflect.ownKeys(provides).forEach(key => {\r\n            provide(key, provides[key]);\r\n        });\r\n    }\r\n    if (created) {\r\n        callHook(created, instance, \"c\" /* CREATED */);\r\n    }\r\n    function registerLifecycleHook(register, hook) {\r\n        if (isArray(hook)) {\r\n            hook.forEach(_hook => register(_hook.bind(publicThis)));\r\n        }\r\n        else if (hook) {\r\n            register(hook.bind(publicThis));\r\n        }\r\n    }\r\n    registerLifecycleHook(onBeforeMount, beforeMount);\r\n    registerLifecycleHook(onMounted, mounted);\r\n    registerLifecycleHook(onBeforeUpdate, beforeUpdate);\r\n    registerLifecycleHook(onUpdated, updated);\r\n    registerLifecycleHook(onActivated, activated);\r\n    registerLifecycleHook(onDeactivated, deactivated);\r\n    registerLifecycleHook(onErrorCaptured, errorCaptured);\r\n    registerLifecycleHook(onRenderTracked, renderTracked);\r\n    registerLifecycleHook(onRenderTriggered, renderTriggered);\r\n    registerLifecycleHook(onBeforeUnmount, beforeUnmount);\r\n    registerLifecycleHook(onUnmounted, unmounted);\r\n    registerLifecycleHook(onServerPrefetch, serverPrefetch);\r\n    if (isArray(expose)) {\r\n        if (expose.length) {\r\n            const exposed = instance.exposed || (instance.exposed = {});\r\n            expose.forEach(key => {\r\n                Object.defineProperty(exposed, key, {\r\n                    get: () => publicThis[key],\r\n                    set: val => (publicThis[key] = val)\r\n                });\r\n            });\r\n        }\r\n        else if (!instance.exposed) {\r\n            instance.exposed = {};\r\n        }\r\n    }\r\n    // options that are handled when creating the instance but also need to be\r\n    // applied from mixins\r\n    if (render && instance.render === NOOP) {\r\n        instance.render = render;\r\n    }\r\n    if (inheritAttrs != null) {\r\n        instance.inheritAttrs = inheritAttrs;\r\n    }\r\n    // asset options.\r\n    if (components)\r\n        instance.components = components;\r\n    if (directives)\r\n        instance.directives = directives;\r\n}\r\nfunction resolveInjections(injectOptions, ctx, checkDuplicateProperties = NOOP) {\r\n    if (isArray(injectOptions)) {\r\n        injectOptions = normalizeInject(injectOptions);\r\n    }\r\n    for (const key in injectOptions) {\r\n        const opt = injectOptions[key];\r\n        if (isObject$1(opt)) {\r\n            if ('default' in opt) {\r\n                ctx[key] = inject(opt.from || key, opt.default, true /* treat default function as factory */);\r\n            }\r\n            else {\r\n                ctx[key] = inject(opt.from || key);\r\n            }\r\n        }\r\n        else {\r\n            ctx[key] = inject(opt);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            checkDuplicateProperties(\"Inject\" /* INJECT */, key);\r\n        }\r\n    }\r\n}\r\nfunction callHook(hook, instance, type) {\r\n    callWithAsyncErrorHandling(isArray(hook)\r\n        ? hook.map(h => h.bind(instance.proxy))\r\n        : hook.bind(instance.proxy), instance, type);\r\n}\r\nfunction createWatcher(raw, ctx, publicThis, key) {\r\n    const getter = key.includes('.')\r\n        ? createPathGetter(publicThis, key)\r\n        : () => publicThis[key];\r\n    if (isString(raw)) {\r\n        const handler = ctx[raw];\r\n        if (isFunction$1(handler)) {\r\n            watch(getter, handler);\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Invalid watch handler specified by key \"${raw}\"`, handler);\r\n        }\r\n    }\r\n    else if (isFunction$1(raw)) {\r\n        watch(getter, raw.bind(publicThis));\r\n    }\r\n    else if (isObject$1(raw)) {\r\n        if (isArray(raw)) {\r\n            raw.forEach(r => createWatcher(r, ctx, publicThis, key));\r\n        }\r\n        else {\r\n            const handler = isFunction$1(raw.handler)\r\n                ? raw.handler.bind(publicThis)\r\n                : ctx[raw.handler];\r\n            if (isFunction$1(handler)) {\r\n                watch(getter, handler, raw);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production')) {\r\n                warn(`Invalid watch handler specified by key \"${raw.handler}\"`, handler);\r\n            }\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid watch option: \"${key}\"`, raw);\r\n    }\r\n}\r\n/**\r\n * Resolve merged options and cache it on the component.\r\n * This is done only once per-component since the merging does not involve\r\n * instances.\r\n */\r\nfunction resolveMergedOptions(instance) {\r\n    const base = instance.type;\r\n    const { mixins, extends: extendsOptions } = base;\r\n    const { mixins: globalMixins, optionsCache: cache, config: { optionMergeStrategies } } = instance.appContext;\r\n    const cached = cache.get(base);\r\n    let resolved;\r\n    if (cached) {\r\n        resolved = cached;\r\n    }\r\n    else if (!globalMixins.length && !mixins && !extendsOptions) {\r\n        {\r\n            resolved = base;\r\n        }\r\n    }\r\n    else {\r\n        resolved = {};\r\n        if (globalMixins.length) {\r\n            globalMixins.forEach(m => mergeOptions(resolved, m, optionMergeStrategies, true));\r\n        }\r\n        mergeOptions(resolved, base, optionMergeStrategies);\r\n    }\r\n    cache.set(base, resolved);\r\n    return resolved;\r\n}\r\nfunction mergeOptions(to, from, strats, asMixin = false) {\r\n    const { mixins, extends: extendsOptions } = from;\r\n    if (extendsOptions) {\r\n        mergeOptions(to, extendsOptions, strats, true);\r\n    }\r\n    if (mixins) {\r\n        mixins.forEach((m) => mergeOptions(to, m, strats, true));\r\n    }\r\n    for (const key in from) {\r\n        if (asMixin && key === 'expose') {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`\"expose\" option is ignored when declared in mixins or extends. ` +\r\n                    `It should only be declared in the base component itself.`);\r\n        }\r\n        else {\r\n            const strat = internalOptionMergeStrats[key] || (strats && strats[key]);\r\n            to[key] = strat ? strat(to[key], from[key]) : from[key];\r\n        }\r\n    }\r\n    return to;\r\n}\r\nconst internalOptionMergeStrats = {\r\n    data: mergeDataFn,\r\n    props: mergeObjectOptions,\r\n    emits: mergeObjectOptions,\r\n    // objects\r\n    methods: mergeObjectOptions,\r\n    computed: mergeObjectOptions,\r\n    // lifecycle\r\n    beforeCreate: mergeAsArray,\r\n    created: mergeAsArray,\r\n    beforeMount: mergeAsArray,\r\n    mounted: mergeAsArray,\r\n    beforeUpdate: mergeAsArray,\r\n    updated: mergeAsArray,\r\n    beforeDestroy: mergeAsArray,\r\n    destroyed: mergeAsArray,\r\n    activated: mergeAsArray,\r\n    deactivated: mergeAsArray,\r\n    errorCaptured: mergeAsArray,\r\n    serverPrefetch: mergeAsArray,\r\n    // assets\r\n    components: mergeObjectOptions,\r\n    directives: mergeObjectOptions,\r\n    // watch\r\n    watch: mergeWatchOptions,\r\n    // provide / inject\r\n    provide: mergeDataFn,\r\n    inject: mergeInject\r\n};\r\nfunction mergeDataFn(to, from) {\r\n    if (!from) {\r\n        return to;\r\n    }\r\n    if (!to) {\r\n        return from;\r\n    }\r\n    return function mergedDataFn() {\r\n        return (extend)(isFunction$1(to) ? to.call(this, this) : to, isFunction$1(from) ? from.call(this, this) : from);\r\n    };\r\n}\r\nfunction mergeInject(to, from) {\r\n    return mergeObjectOptions(normalizeInject(to), normalizeInject(from));\r\n}\r\nfunction normalizeInject(raw) {\r\n    if (isArray(raw)) {\r\n        const res = {};\r\n        for (let i = 0; i < raw.length; i++) {\r\n            res[raw[i]] = raw[i];\r\n        }\r\n        return res;\r\n    }\r\n    return raw;\r\n}\r\nfunction mergeAsArray(to, from) {\r\n    return to ? [...new Set([].concat(to, from))] : from;\r\n}\r\nfunction mergeObjectOptions(to, from) {\r\n    return to ? extend(extend(Object.create(null), to), from) : from;\r\n}\r\nfunction mergeWatchOptions(to, from) {\r\n    if (!to)\r\n        return from;\r\n    if (!from)\r\n        return to;\r\n    const merged = extend(Object.create(null), to);\r\n    for (const key in from) {\r\n        merged[key] = mergeAsArray(to[key], from[key]);\r\n    }\r\n    return merged;\r\n}\n\nfunction initProps(instance, rawProps, isStateful, // result of bitwise flag comparison\r\nisSSR = false) {\r\n    const props = {};\r\n    const attrs = {};\r\n    def(attrs, InternalObjectKey, 1);\r\n    instance.propsDefaults = Object.create(null);\r\n    setFullProps(instance, rawProps, props, attrs);\r\n    // ensure all declared prop keys are present\r\n    for (const key in instance.propsOptions[0]) {\r\n        if (!(key in props)) {\r\n            props[key] = undefined;\r\n        }\r\n    }\r\n    // validation\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n    if (isStateful) {\r\n        // stateful\r\n        instance.props = isSSR ? props : shallowReactive(props);\r\n    }\r\n    else {\r\n        if (!instance.type.props) {\r\n            // functional w/ optional props, props === attrs\r\n            instance.props = attrs;\r\n        }\r\n        else {\r\n            // functional w/ declared props\r\n            instance.props = props;\r\n        }\r\n    }\r\n    instance.attrs = attrs;\r\n}\r\nfunction updateProps(instance, rawProps, rawPrevProps, optimized) {\r\n    const { props, attrs, vnode: { patchFlag } } = instance;\r\n    const rawCurrentProps = toRaw(props);\r\n    const [options] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    if (\r\n    // always force full diff in dev\r\n    // - #1942 if hmr is enabled with sfc component\r\n    // - vite#872 non-sfc component used by sfc component\r\n    !((process.env.NODE_ENV !== 'production') &&\r\n        (instance.type.__hmrId ||\r\n            (instance.parent && instance.parent.type.__hmrId))) &&\r\n        (optimized || patchFlag > 0) &&\r\n        !(patchFlag & 16 /* FULL_PROPS */)) {\r\n        if (patchFlag & 8 /* PROPS */) {\r\n            // Compiler-generated props & no keys change, just set the updated\r\n            // the props.\r\n            const propsToUpdate = instance.vnode.dynamicProps;\r\n            for (let i = 0; i < propsToUpdate.length; i++) {\r\n                let key = propsToUpdate[i];\r\n                // PROPS flag guarantees rawProps to be non-null\r\n                const value = rawProps[key];\r\n                if (options) {\r\n                    // attr / props separation was done on init and will be consistent\r\n                    // in this code path, so just check if attrs have it.\r\n                    if (hasOwn(attrs, key)) {\r\n                        if (value !== attrs[key]) {\r\n                            attrs[key] = value;\r\n                            hasAttrsChanged = true;\r\n                        }\r\n                    }\r\n                    else {\r\n                        const camelizedKey = camelize(key);\r\n                        props[camelizedKey] = resolvePropValue(options, rawCurrentProps, camelizedKey, value, instance, false /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    if (value !== attrs[key]) {\r\n                        attrs[key] = value;\r\n                        hasAttrsChanged = true;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        // full props update.\r\n        if (setFullProps(instance, rawProps, props, attrs)) {\r\n            hasAttrsChanged = true;\r\n        }\r\n        // in case of dynamic props, check if we need to delete keys from\r\n        // the props object\r\n        let kebabKey;\r\n        for (const key in rawCurrentProps) {\r\n            if (!rawProps ||\r\n                // for camelCase\r\n                (!hasOwn(rawProps, key) &&\r\n                    // it's possible the original props was passed in as kebab-case\r\n                    // and converted to camelCase (#955)\r\n                    ((kebabKey = hyphenate(key)) === key || !hasOwn(rawProps, kebabKey)))) {\r\n                if (options) {\r\n                    if (rawPrevProps &&\r\n                        // for camelCase\r\n                        (rawPrevProps[key] !== undefined ||\r\n                            // for kebab-case\r\n                            rawPrevProps[kebabKey] !== undefined)) {\r\n                        props[key] = resolvePropValue(options, rawCurrentProps, key, undefined, instance, true /* isAbsent */);\r\n                    }\r\n                }\r\n                else {\r\n                    delete props[key];\r\n                }\r\n            }\r\n        }\r\n        // in the case of functional component w/o props declaration, props and\r\n        // attrs point to the same object so it should already have been updated.\r\n        if (attrs !== rawCurrentProps) {\r\n            for (const key in attrs) {\r\n                if (!rawProps || !hasOwn(rawProps, key)) {\r\n                    delete attrs[key];\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    // trigger updates for $attrs in case it's used in component slots\r\n    if (hasAttrsChanged) {\r\n        trigger(instance, \"set\" /* SET */, '$attrs');\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        validateProps(rawProps || {}, props, instance);\r\n    }\r\n}\r\nfunction setFullProps(instance, rawProps, props, attrs) {\r\n    const [options, needCastKeys] = instance.propsOptions;\r\n    let hasAttrsChanged = false;\r\n    let rawCastValues;\r\n    if (rawProps) {\r\n        for (let key in rawProps) {\r\n            // key, ref are reserved and never passed down\r\n            if (isReservedProp(key)) {\r\n                continue;\r\n            }\r\n            const value = rawProps[key];\r\n            // prop option names are camelized during normalization, so to support\r\n            // kebab -> camel conversion here we need to camelize the key.\r\n            let camelKey;\r\n            if (options && hasOwn(options, (camelKey = camelize(key)))) {\r\n                if (!needCastKeys || !needCastKeys.includes(camelKey)) {\r\n                    props[camelKey] = value;\r\n                }\r\n                else {\r\n                    (rawCastValues || (rawCastValues = {}))[camelKey] = value;\r\n                }\r\n            }\r\n            else if (!isEmitListener(instance.emitsOptions, key)) {\r\n                if (value !== attrs[key]) {\r\n                    attrs[key] = value;\r\n                    hasAttrsChanged = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    if (needCastKeys) {\r\n        const rawCurrentProps = toRaw(props);\r\n        const castValues = rawCastValues || EMPTY_OBJ;\r\n        for (let i = 0; i < needCastKeys.length; i++) {\r\n            const key = needCastKeys[i];\r\n            props[key] = resolvePropValue(options, rawCurrentProps, key, castValues[key], instance, !hasOwn(castValues, key));\r\n        }\r\n    }\r\n    return hasAttrsChanged;\r\n}\r\nfunction resolvePropValue(options, props, key, value, instance, isAbsent) {\r\n    const opt = options[key];\r\n    if (opt != null) {\r\n        const hasDefault = hasOwn(opt, 'default');\r\n        // default values\r\n        if (hasDefault && value === undefined) {\r\n            const defaultValue = opt.default;\r\n            if (opt.type !== Function && isFunction$1(defaultValue)) {\r\n                const { propsDefaults } = instance;\r\n                if (key in propsDefaults) {\r\n                    value = propsDefaults[key];\r\n                }\r\n                else {\r\n                    setCurrentInstance(instance);\r\n                    value = propsDefaults[key] = defaultValue.call(null, props);\r\n                    setCurrentInstance(null);\r\n                }\r\n            }\r\n            else {\r\n                value = defaultValue;\r\n            }\r\n        }\r\n        // boolean casting\r\n        if (opt[0 /* shouldCast */]) {\r\n            if (isAbsent && !hasDefault) {\r\n                value = false;\r\n            }\r\n            else if (opt[1 /* shouldCastTrue */] &&\r\n                (value === '' || value === hyphenate(key))) {\r\n                value = true;\r\n            }\r\n        }\r\n    }\r\n    return value;\r\n}\r\nfunction normalizePropsOptions(comp, appContext, asMixin = false) {\r\n    const cache = appContext.propsCache;\r\n    const cached = cache.get(comp);\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    const raw = comp.props;\r\n    const normalized = {};\r\n    const needCastKeys = [];\r\n    // apply mixin/extends props\r\n    let hasExtends = false;\r\n    if (__VUE_OPTIONS_API__ && !isFunction$1(comp)) {\r\n        const extendProps = (raw) => {\r\n            hasExtends = true;\r\n            const [props, keys] = normalizePropsOptions(raw, appContext, true);\r\n            extend(normalized, props);\r\n            if (keys)\r\n                needCastKeys.push(...keys);\r\n        };\r\n        if (!asMixin && appContext.mixins.length) {\r\n            appContext.mixins.forEach(extendProps);\r\n        }\r\n        if (comp.extends) {\r\n            extendProps(comp.extends);\r\n        }\r\n        if (comp.mixins) {\r\n            comp.mixins.forEach(extendProps);\r\n        }\r\n    }\r\n    if (!raw && !hasExtends) {\r\n        cache.set(comp, EMPTY_ARR);\r\n        return EMPTY_ARR;\r\n    }\r\n    if (isArray(raw)) {\r\n        for (let i = 0; i < raw.length; i++) {\r\n            if ((process.env.NODE_ENV !== 'production') && !isString(raw[i])) {\r\n                warn(`props must be strings when using array syntax.`, raw[i]);\r\n            }\r\n            const normalizedKey = camelize(raw[i]);\r\n            if (validatePropName(normalizedKey)) {\r\n                normalized[normalizedKey] = EMPTY_OBJ;\r\n            }\r\n        }\r\n    }\r\n    else if (raw) {\r\n        if ((process.env.NODE_ENV !== 'production') && !isObject$1(raw)) {\r\n            warn(`invalid props options`, raw);\r\n        }\r\n        for (const key in raw) {\r\n            const normalizedKey = camelize(key);\r\n            if (validatePropName(normalizedKey)) {\r\n                const opt = raw[key];\r\n                const prop = (normalized[normalizedKey] =\r\n                    isArray(opt) || isFunction$1(opt) ? { type: opt } : opt);\r\n                if (prop) {\r\n                    const booleanIndex = getTypeIndex(Boolean, prop.type);\r\n                    const stringIndex = getTypeIndex(String, prop.type);\r\n                    prop[0 /* shouldCast */] = booleanIndex > -1;\r\n                    prop[1 /* shouldCastTrue */] =\r\n                        stringIndex < 0 || booleanIndex < stringIndex;\r\n                    // if the prop needs boolean casting or default value\r\n                    if (booleanIndex > -1 || hasOwn(prop, 'default')) {\r\n                        needCastKeys.push(normalizedKey);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    const res = [normalized, needCastKeys];\r\n    cache.set(comp, res);\r\n    return res;\r\n}\r\nfunction validatePropName(key) {\r\n    if (key[0] !== '$') {\r\n        return true;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`Invalid prop name: \"${key}\" is a reserved property.`);\r\n    }\r\n    return false;\r\n}\r\n// use function string name to check type constructors\r\n// so that it works across vms / iframes.\r\nfunction getType(ctor) {\r\n    const match = ctor && ctor.toString().match(/^\\s*function (\\w+)/);\r\n    return match ? match[1] : '';\r\n}\r\nfunction isSameType(a, b) {\r\n    return getType(a) === getType(b);\r\n}\r\nfunction getTypeIndex(type, expectedTypes) {\r\n    if (isArray(expectedTypes)) {\r\n        return expectedTypes.findIndex(t => isSameType(t, type));\r\n    }\r\n    else if (isFunction$1(expectedTypes)) {\r\n        return isSameType(expectedTypes, type) ? 0 : -1;\r\n    }\r\n    return -1;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProps(rawProps, props, instance) {\r\n    const resolvedValues = toRaw(props);\r\n    const options = instance.propsOptions[0];\r\n    for (const key in options) {\r\n        let opt = options[key];\r\n        if (opt == null)\r\n            continue;\r\n        validateProp(key, resolvedValues[key], opt, !hasOwn(rawProps, key) && !hasOwn(rawProps, hyphenate(key)));\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction validateProp(name, value, prop, isAbsent) {\r\n    const { type, required, validator } = prop;\r\n    // required!\r\n    if (required && isAbsent) {\r\n        warn('Missing required prop: \"' + name + '\"');\r\n        return;\r\n    }\r\n    // missing but optional\r\n    if (value == null && !prop.required) {\r\n        return;\r\n    }\r\n    // type check\r\n    if (type != null && type !== true) {\r\n        let isValid = false;\r\n        const types = isArray(type) ? type : [type];\r\n        const expectedTypes = [];\r\n        // value is valid as long as one of the specified types match\r\n        for (let i = 0; i < types.length && !isValid; i++) {\r\n            const { valid, expectedType } = assertType(value, types[i]);\r\n            expectedTypes.push(expectedType || '');\r\n            isValid = valid;\r\n        }\r\n        if (!isValid) {\r\n            warn(getInvalidTypeMessage(name, value, expectedTypes));\r\n            return;\r\n        }\r\n    }\r\n    // custom validator\r\n    if (validator && !validator(value)) {\r\n        warn('Invalid prop: custom validator check failed for prop \"' + name + '\".');\r\n    }\r\n}\r\nconst isSimpleType = /*#__PURE__*/ makeMap('String,Number,Boolean,Function,Symbol,BigInt');\r\n/**\r\n * dev only\r\n */\r\nfunction assertType(value, type) {\r\n    let valid;\r\n    const expectedType = getType(type);\r\n    if (isSimpleType(expectedType)) {\r\n        const t = typeof value;\r\n        valid = t === expectedType.toLowerCase();\r\n        // for primitive wrapper objects\r\n        if (!valid && t === 'object') {\r\n            valid = value instanceof type;\r\n        }\r\n    }\r\n    else if (expectedType === 'Object') {\r\n        valid = isObject$1(value);\r\n    }\r\n    else if (expectedType === 'Array') {\r\n        valid = isArray(value);\r\n    }\r\n    else {\r\n        valid = value instanceof type;\r\n    }\r\n    return {\r\n        valid,\r\n        expectedType\r\n    };\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction getInvalidTypeMessage(name, value, expectedTypes) {\r\n    let message = `Invalid prop: type check failed for prop \"${name}\".` +\r\n        ` Expected ${expectedTypes.map(capitalize).join(', ')}`;\r\n    const expectedType = expectedTypes[0];\r\n    const receivedType = toRawType(value);\r\n    const expectedValue = styleValue(value, expectedType);\r\n    const receivedValue = styleValue(value, receivedType);\r\n    // check if we need to specify expected value\r\n    if (expectedTypes.length === 1 &&\r\n        isExplicable(expectedType) &&\r\n        !isBoolean(expectedType, receivedType)) {\r\n        message += ` with value ${expectedValue}`;\r\n    }\r\n    message += `, got ${receivedType} `;\r\n    // check if we need to specify received value\r\n    if (isExplicable(receivedType)) {\r\n        message += `with value ${receivedValue}.`;\r\n    }\r\n    return message;\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction styleValue(value, type) {\r\n    if (type === 'String') {\r\n        return `\"${value}\"`;\r\n    }\r\n    else if (type === 'Number') {\r\n        return `${Number(value)}`;\r\n    }\r\n    else {\r\n        return `${value}`;\r\n    }\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isExplicable(type) {\r\n    const explicitTypes = ['string', 'number', 'boolean'];\r\n    return explicitTypes.some(elem => type.toLowerCase() === elem);\r\n}\r\n/**\r\n * dev only\r\n */\r\nfunction isBoolean(...args) {\r\n    return args.some(elem => elem.toLowerCase() === 'boolean');\r\n}\n\nconst isInternalKey = (key) => key[0] === '_' || key === '$stable';\r\nconst normalizeSlotValue = (value) => isArray(value)\r\n    ? value.map(normalizeVNode)\r\n    : [normalizeVNode(value)];\r\nconst normalizeSlot = (key, rawSlot, ctx) => {\r\n    const normalized = withCtx((props) => {\r\n        if ((process.env.NODE_ENV !== 'production') && currentInstance) {\r\n            warn(`Slot \"${key}\" invoked outside of the render function: ` +\r\n                `this will not track dependencies used in the slot. ` +\r\n                `Invoke the slot function inside the render function instead.`);\r\n        }\r\n        return normalizeSlotValue(rawSlot(props));\r\n    }, ctx);\r\n    normalized._c = false;\r\n    return normalized;\r\n};\r\nconst normalizeObjectSlots = (rawSlots, slots, instance) => {\r\n    const ctx = rawSlots._ctx;\r\n    for (const key in rawSlots) {\r\n        if (isInternalKey(key))\r\n            continue;\r\n        const value = rawSlots[key];\r\n        if (isFunction$1(value)) {\r\n            slots[key] = normalizeSlot(key, value, ctx);\r\n        }\r\n        else if (value != null) {\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                !(false )) {\r\n                warn(`Non-function value encountered for slot \"${key}\". ` +\r\n                    `Prefer function slots for better performance.`);\r\n            }\r\n            const normalized = normalizeSlotValue(value);\r\n            slots[key] = () => normalized;\r\n        }\r\n    }\r\n};\r\nconst normalizeVNodeSlots = (instance, children) => {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        !isKeepAlive(instance.vnode) &&\r\n        !(false )) {\r\n        warn(`Non-function value encountered for default slot. ` +\r\n            `Prefer function slots for better performance.`);\r\n    }\r\n    const normalized = normalizeSlotValue(children);\r\n    instance.slots.default = () => normalized;\r\n};\r\nconst initSlots = (instance, children) => {\r\n    if (instance.vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // users can get the shallow readonly version of the slots object through `this.$slots`,\r\n            // we should avoid the proxy object polluting the slots of the internal instance\r\n            instance.slots = toRaw(children);\r\n            // make compiler marker non-enumerable\r\n            def(children, '_', type);\r\n        }\r\n        else {\r\n            normalizeObjectSlots(children, (instance.slots = {}));\r\n        }\r\n    }\r\n    else {\r\n        instance.slots = {};\r\n        if (children) {\r\n            normalizeVNodeSlots(instance, children);\r\n        }\r\n    }\r\n    def(instance.slots, InternalObjectKey, 1);\r\n};\r\nconst updateSlots = (instance, children, optimized) => {\r\n    const { vnode, slots } = instance;\r\n    let needDeletionCheck = true;\r\n    let deletionComparisonTarget = EMPTY_OBJ;\r\n    if (vnode.shapeFlag & 32 /* SLOTS_CHILDREN */) {\r\n        const type = children._;\r\n        if (type) {\r\n            // compiled slots.\r\n            if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n                // Parent was HMR updated so slot content may have changed.\r\n                // force update slots and mark instance for hmr as well\r\n                extend(slots, children);\r\n            }\r\n            else if (optimized && type === 1 /* STABLE */) {\r\n                // compiled AND stable.\r\n                // no need to update, and skip stale slots removal.\r\n                needDeletionCheck = false;\r\n            }\r\n            else {\r\n                // compiled but dynamic (v-if/v-for on slots) - update slots, but skip\r\n                // normalization.\r\n                extend(slots, children);\r\n                // #2893\r\n                // when rendering the optimized slots by manually written render function,\r\n                // we need to delete the `slots._` flag if necessary to make subsequent updates reliable,\r\n                // i.e. let the `renderSlot` create the bailed Fragment\r\n                if (!optimized && type === 1 /* STABLE */) {\r\n                    delete slots._;\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            needDeletionCheck = !children.$stable;\r\n            normalizeObjectSlots(children, slots);\r\n        }\r\n        deletionComparisonTarget = children;\r\n    }\r\n    else if (children) {\r\n        // non slot object children (direct value) passed to a component\r\n        normalizeVNodeSlots(instance, children);\r\n        deletionComparisonTarget = { default: 1 };\r\n    }\r\n    // delete stale slots\r\n    if (needDeletionCheck) {\r\n        for (const key in slots) {\r\n            if (!isInternalKey(key) && !(key in deletionComparisonTarget)) {\r\n                delete slots[key];\r\n            }\r\n        }\r\n    }\r\n};\n\n/**\r\nRuntime helper for applying directives to a vnode. Example usage:\r\n\nconst comp = resolveComponent('comp')\r\nconst foo = resolveDirective('foo')\r\nconst bar = resolveDirective('bar')\r\n\nreturn withDirectives(h(comp), [\r\n  [foo, this.x],\r\n  [bar, this.y]\r\n])\r\n*/\r\nconst isBuiltInDirective = /*#__PURE__*/ makeMap('bind,cloak,else-if,else,for,html,if,model,on,once,pre,show,slot,text');\r\nfunction validateDirectiveName(name) {\r\n    if (isBuiltInDirective(name)) {\r\n        warn('Do not use built-in directive ids as custom directive id: ' + name);\r\n    }\r\n}\r\n/**\r\n * Adds directives to a VNode.\r\n */\r\nfunction withDirectives(vnode, directives) {\r\n    const internalInstance = currentRenderingInstance;\r\n    if (internalInstance === null) {\r\n        (process.env.NODE_ENV !== 'production') && warn(`withDirectives can only be used inside render functions.`);\r\n        return vnode;\r\n    }\r\n    const instance = internalInstance.proxy;\r\n    const bindings = vnode.dirs || (vnode.dirs = []);\r\n    for (let i = 0; i < directives.length; i++) {\r\n        let [dir, value, arg, modifiers = EMPTY_OBJ] = directives[i];\r\n        if (isFunction$1(dir)) {\r\n            dir = {\r\n                mounted: dir,\r\n                updated: dir\r\n            };\r\n        }\r\n        bindings.push({\r\n            dir,\r\n            instance,\r\n            value,\r\n            oldValue: void 0,\r\n            arg,\r\n            modifiers\r\n        });\r\n    }\r\n    return vnode;\r\n}\r\nfunction invokeDirectiveHook(vnode, prevVNode, instance, name) {\r\n    const bindings = vnode.dirs;\r\n    const oldBindings = prevVNode && prevVNode.dirs;\r\n    for (let i = 0; i < bindings.length; i++) {\r\n        const binding = bindings[i];\r\n        if (oldBindings) {\r\n            binding.oldValue = oldBindings[i].value;\r\n        }\r\n        let hook = binding.dir[name];\r\n        if (hook) {\r\n            // disable tracking inside all lifecycle hooks\r\n            // since they can potentially be called inside effects.\r\n            pauseTracking();\r\n            callWithAsyncErrorHandling(hook, instance, 8 /* DIRECTIVE_HOOK */, [\r\n                vnode.el,\r\n                binding,\r\n                vnode,\r\n                prevVNode\r\n            ]);\r\n            resetTracking();\r\n        }\r\n    }\r\n}\n\nfunction createAppContext() {\r\n    return {\r\n        app: null,\r\n        config: {\r\n            isNativeTag: NO,\r\n            performance: false,\r\n            globalProperties: {},\r\n            optionMergeStrategies: {},\r\n            errorHandler: undefined,\r\n            warnHandler: undefined,\r\n            compilerOptions: {}\r\n        },\r\n        mixins: [],\r\n        components: {},\r\n        directives: {},\r\n        provides: Object.create(null),\r\n        optionsCache: new WeakMap(),\r\n        propsCache: new WeakMap(),\r\n        emitsCache: new WeakMap()\r\n    };\r\n}\r\nlet uid = 0;\r\nfunction createAppAPI(render, hydrate) {\r\n    return function createApp(rootComponent, rootProps = null) {\r\n        if (rootProps != null && !isObject$1(rootProps)) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`root props passed to app.mount() must be an object.`);\r\n            rootProps = null;\r\n        }\r\n        const context = createAppContext();\r\n        const installedPlugins = new Set();\r\n        let isMounted = false;\r\n        const app = (context.app = {\r\n            _uid: uid++,\r\n            _component: rootComponent,\r\n            _props: rootProps,\r\n            _container: null,\r\n            _context: context,\r\n            _instance: null,\r\n            version,\r\n            get config() {\r\n                return context.config;\r\n            },\r\n            set config(v) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`app.config cannot be replaced. Modify individual options instead.`);\r\n                }\r\n            },\r\n            use(plugin, ...options) {\r\n                if (installedPlugins.has(plugin)) {\r\n                    (process.env.NODE_ENV !== 'production') && warn(`Plugin has already been applied to target app.`);\r\n                }\r\n                else if (plugin && isFunction$1(plugin.install)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin.install(app, ...options);\r\n                }\r\n                else if (isFunction$1(plugin)) {\r\n                    installedPlugins.add(plugin);\r\n                    plugin(app, ...options);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`A plugin must either be a function or an object with an \"install\" ` +\r\n                        `function.`);\r\n                }\r\n                return app;\r\n            },\r\n            mixin(mixin) {\r\n                if (__VUE_OPTIONS_API__) {\r\n                    if (!context.mixins.includes(mixin)) {\r\n                        context.mixins.push(mixin);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Mixin has already been applied to target app' +\r\n                            (mixin.name ? `: ${mixin.name}` : ''));\r\n                    }\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Mixins are only available in builds supporting Options API');\r\n                }\r\n                return app;\r\n            },\r\n            component(name, component) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateComponentName(name, context.config);\r\n                }\r\n                if (!component) {\r\n                    return context.components[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.components[name]) {\r\n                    warn(`Component \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.components[name] = component;\r\n                return app;\r\n            },\r\n            directive(name, directive) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    validateDirectiveName(name);\r\n                }\r\n                if (!directive) {\r\n                    return context.directives[name];\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') && context.directives[name]) {\r\n                    warn(`Directive \"${name}\" has already been registered in target app.`);\r\n                }\r\n                context.directives[name] = directive;\r\n                return app;\r\n            },\r\n            mount(rootContainer, isHydrate, isSVG) {\r\n                if (!isMounted) {\r\n                    const vnode = createVNode(rootComponent, rootProps);\r\n                    // store app context on the root VNode.\r\n                    // this will be set on the root instance on initial mount.\r\n                    vnode.appContext = context;\r\n                    // HMR root reload\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        context.reload = () => {\r\n                            render(cloneVNode(vnode), rootContainer, isSVG);\r\n                        };\r\n                    }\r\n                    if (isHydrate && hydrate) {\r\n                        hydrate(vnode, rootContainer);\r\n                    }\r\n                    else {\r\n                        render(vnode, rootContainer, isSVG);\r\n                    }\r\n                    isMounted = true;\r\n                    app._container = rootContainer;\r\n                    rootContainer.__vue_app__ = app;\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = vnode.component;\r\n                        devtoolsInitApp(app, version);\r\n                    }\r\n                    return vnode.component.proxy;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`App has already been mounted.\\n` +\r\n                        `If you want to remount the same app, move your app creation logic ` +\r\n                        `into a factory function and create fresh app instances for each ` +\r\n                        `mount - e.g. \\`const createMyApp = () => createApp(App)\\``);\r\n                }\r\n            },\r\n            unmount() {\r\n                if (isMounted) {\r\n                    render(null, app._container);\r\n                    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                        app._instance = null;\r\n                        devtoolsUnmountApp(app);\r\n                    }\r\n                    delete app._container.__vue_app__;\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`Cannot unmount an app that is not mounted.`);\r\n                }\r\n            },\r\n            provide(key, value) {\r\n                if ((process.env.NODE_ENV !== 'production') && key in context.provides) {\r\n                    warn(`App already provides property with key \"${String(key)}\". ` +\r\n                        `It will be overwritten with the new value.`);\r\n                }\r\n                // TypeScript doesn't allow symbols as index type\r\n                // https://github.com/Microsoft/TypeScript/issues/24587\r\n                context.provides[key] = value;\r\n                return app;\r\n            }\r\n        });\r\n        return app;\r\n    };\r\n}\n\nlet hasMismatch = false;\r\nconst isSVGContainer = (container) => /svg/.test(container.namespaceURI) && container.tagName !== 'foreignObject';\r\nconst isComment = (node) => node.nodeType === 8 /* COMMENT */;\r\n// Note: hydration is DOM-specific\r\n// But we have to place it in core due to tight coupling with core - splitting\r\n// it out creates a ton of unnecessary complexity.\r\n// Hydration also depends on some renderer internal logic which needs to be\r\n// passed in via arguments.\r\nfunction createHydrationFunctions(rendererInternals) {\r\n    const { mt: mountComponent, p: patch, o: { patchProp, nextSibling, parentNode, remove, insert, createComment } } = rendererInternals;\r\n    const hydrate = (vnode, container) => {\r\n        if (!container.hasChildNodes()) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to hydrate existing markup but container is empty. ` +\r\n                    `Performing full mount instead.`);\r\n            patch(null, vnode, container);\r\n            flushPostFlushCbs();\r\n            return;\r\n        }\r\n        hasMismatch = false;\r\n        hydrateNode(container.firstChild, vnode, null, null, null);\r\n        flushPostFlushCbs();\r\n        if (hasMismatch && !false) {\r\n            // this error should show up in production\r\n            console.error(`Hydration completed but contains mismatches.`);\r\n        }\r\n    };\r\n    const hydrateNode = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized = false) => {\r\n        const isFragmentStart = isComment(node) && node.data === '[';\r\n        const onMismatch = () => handleMismatch(node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragmentStart);\r\n        const { type, ref, shapeFlag } = vnode;\r\n        const domType = node.nodeType;\r\n        vnode.el = node;\r\n        let nextNode = null;\r\n        switch (type) {\r\n            case Text:\r\n                if (domType !== 3 /* TEXT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    if (node.data !== vnode.children) {\r\n                        hasMismatch = true;\r\n                        (process.env.NODE_ENV !== 'production') &&\r\n                            warn(`Hydration text mismatch:` +\r\n                                `\\n- Client: ${JSON.stringify(node.data)}` +\r\n                                `\\n- Server: ${JSON.stringify(vnode.children)}`);\r\n                        node.data = vnode.children;\r\n                    }\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Comment$1:\r\n                if (domType !== 8 /* COMMENT */ || isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = nextSibling(node);\r\n                }\r\n                break;\r\n            case Static:\r\n                if (domType !== 1 /* ELEMENT */) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    // determine anchor, adopt content\r\n                    nextNode = node;\r\n                    // if the static vnode has its content stripped during build,\r\n                    // adopt it from the server-rendered HTML.\r\n                    const needToAdoptContent = !vnode.children.length;\r\n                    for (let i = 0; i < vnode.staticCount; i++) {\r\n                        if (needToAdoptContent)\r\n                            vnode.children += nextNode.outerHTML;\r\n                        if (i === vnode.staticCount - 1) {\r\n                            vnode.anchor = nextNode;\r\n                        }\r\n                        nextNode = nextSibling(nextNode);\r\n                    }\r\n                    return nextNode;\r\n                }\r\n                break;\r\n            case Fragment:\r\n                if (!isFragmentStart) {\r\n                    nextNode = onMismatch();\r\n                }\r\n                else {\r\n                    nextNode = hydrateFragment(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                }\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    if (domType !== 1 /* ELEMENT */ ||\r\n                        vnode.type.toLowerCase() !==\r\n                            node.tagName.toLowerCase()) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = hydrateElement(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    // when setting up the render effect, if the initial vnode already\r\n                    // has .el set, the component will perform hydration instead of mount\r\n                    // on its sub-tree.\r\n                    vnode.slotScopeIds = slotScopeIds;\r\n                    const container = parentNode(node);\r\n                    mountComponent(vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), optimized);\r\n                    // component may be async, so in the case of fragments we cannot rely\r\n                    // on component's rendered output to determine the end of the fragment\r\n                    // instead, we do a lookahead to find the end anchor node.\r\n                    nextNode = isFragmentStart\r\n                        ? locateClosingAsyncAnchor(node)\r\n                        : nextSibling(node);\r\n                    // #3787\r\n                    // if component is async, it may get moved / unmounted before its\r\n                    // inner component is loaded, so we need to give it a placeholder\r\n                    // vnode that matches its adopted DOM.\r\n                    if (isAsyncWrapper(vnode)) {\r\n                        let subTree;\r\n                        if (isFragmentStart) {\r\n                            subTree = createVNode(Fragment);\r\n                            subTree.anchor = nextNode\r\n                                ? nextNode.previousSibling\r\n                                : container.lastChild;\r\n                        }\r\n                        else {\r\n                            subTree =\r\n                                node.nodeType === 3 ? createTextVNode('') : createVNode('div');\r\n                        }\r\n                        subTree.el = node;\r\n                        vnode.component.subTree = subTree;\r\n                    }\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    if (domType !== 8 /* COMMENT */) {\r\n                        nextNode = onMismatch();\r\n                    }\r\n                    else {\r\n                        nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, rendererInternals, hydrateChildren);\r\n                    }\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    nextNode = vnode.type.hydrate(node, vnode, parentComponent, parentSuspense, isSVGContainer(parentNode(node)), slotScopeIds, optimized, rendererInternals, hydrateNode);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid HostVNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode);\r\n        }\r\n        return nextNode;\r\n    };\r\n    const hydrateElement = (el, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!vnode.dynamicChildren;\r\n        const { type, props, patchFlag, shapeFlag, dirs } = vnode;\r\n        // #4006 for form elements with non-string v-model value bindings\r\n        // e.g. <option :value=\"obj\">, <input type=\"checkbox\" :true-value=\"1\">\r\n        const forcePatchValue = (type === 'input' && dirs) || type === 'option';\r\n        // skip props & children if this is hoisted static nodes\r\n        if (forcePatchValue || patchFlag !== -1 /* HOISTED */) {\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                if (forcePatchValue ||\r\n                    !optimized ||\r\n                    (patchFlag & 16 /* FULL_PROPS */ ||\r\n                        patchFlag & 32 /* HYDRATE_EVENTS */)) {\r\n                    for (const key in props) {\r\n                        if ((forcePatchValue && key.endsWith('value')) ||\r\n                            (isOn(key) && !isReservedProp(key))) {\r\n                            patchProp(el, key, null, props[key]);\r\n                        }\r\n                    }\r\n                }\r\n                else if (props.onClick) {\r\n                    // Fast path for click listeners (which is most often) to avoid\r\n                    // iterating through props.\r\n                    patchProp(el, 'onClick', null, props.onClick);\r\n                }\r\n            }\r\n            // vnode / directive hooks\r\n            let vnodeHooks;\r\n            if ((vnodeHooks = props && props.onVnodeBeforeMount)) {\r\n                invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n            }\r\n            if ((vnodeHooks = props && props.onVnodeMounted) || dirs) {\r\n                queueEffectWithSuspense(() => {\r\n                    vnodeHooks && invokeVNodeHook(vnodeHooks, parentComponent, vnode);\r\n                    dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n                }, parentSuspense);\r\n            }\r\n            // children\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */ &&\r\n                // skip if element has innerHTML / textContent\r\n                !(props && (props.innerHTML || props.textContent))) {\r\n                let next = hydrateChildren(el.firstChild, vnode, el, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                let hasWarned = false;\r\n                while (next) {\r\n                    hasMismatch = true;\r\n                    if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                        warn(`Hydration children mismatch in <${vnode.type}>: ` +\r\n                            `server rendered element contains more child nodes than client vdom.`);\r\n                        hasWarned = true;\r\n                    }\r\n                    // The SSRed DOM contains more nodes than it should. Remove them.\r\n                    const cur = next;\r\n                    next = next.nextSibling;\r\n                    remove(cur);\r\n                }\r\n            }\r\n            else if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                if (el.textContent !== vnode.children) {\r\n                    hasMismatch = true;\r\n                    (process.env.NODE_ENV !== 'production') &&\r\n                        warn(`Hydration text content mismatch in <${vnode.type}>:\\n` +\r\n                            `- Client: ${el.textContent}\\n` +\r\n                            `- Server: ${vnode.children}`);\r\n                    el.textContent = vnode.children;\r\n                }\r\n            }\r\n        }\r\n        return el.nextSibling;\r\n    };\r\n    const hydrateChildren = (node, parentVNode, container, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        optimized = optimized || !!parentVNode.dynamicChildren;\r\n        const children = parentVNode.children;\r\n        const l = children.length;\r\n        let hasWarned = false;\r\n        for (let i = 0; i < l; i++) {\r\n            const vnode = optimized\r\n                ? children[i]\r\n                : (children[i] = normalizeVNode(children[i]));\r\n            if (node) {\r\n                node = hydrateNode(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            else if (vnode.type === Text && !vnode.children) {\r\n                continue;\r\n            }\r\n            else {\r\n                hasMismatch = true;\r\n                if ((process.env.NODE_ENV !== 'production') && !hasWarned) {\r\n                    warn(`Hydration children mismatch in <${container.tagName.toLowerCase()}>: ` +\r\n                        `server rendered element contains fewer child nodes than client vdom.`);\r\n                    hasWarned = true;\r\n                }\r\n                // the SSRed DOM didn't contain enough nodes. Mount the missing ones.\r\n                patch(null, vnode, container, null, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    const hydrateFragment = (node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized) => {\r\n        const { slotScopeIds: fragmentSlotScopeIds } = vnode;\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        const container = parentNode(node);\r\n        const next = hydrateChildren(nextSibling(node), vnode, container, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n        if (next && isComment(next) && next.data === ']') {\r\n            return nextSibling((vnode.anchor = next));\r\n        }\r\n        else {\r\n            // fragment didn't hydrate successfully, since we didn't get a end anchor\r\n            // back. This should have led to node/children mismatch warnings.\r\n            hasMismatch = true;\r\n            // since the anchor is missing, we need to create one and insert it\r\n            insert((vnode.anchor = createComment(`]`)), container, next);\r\n            return next;\r\n        }\r\n    };\r\n    const handleMismatch = (node, vnode, parentComponent, parentSuspense, slotScopeIds, isFragment) => {\r\n        hasMismatch = true;\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`Hydration node mismatch:\\n- Client vnode:`, vnode.type, `\\n- Server rendered DOM:`, node, node.nodeType === 3 /* TEXT */\r\n                ? `(text)`\r\n                : isComment(node) && node.data === '['\r\n                    ? `(start of fragment)`\r\n                    : ``);\r\n        vnode.el = null;\r\n        if (isFragment) {\r\n            // remove excessive fragment nodes\r\n            const end = locateClosingAsyncAnchor(node);\r\n            while (true) {\r\n                const next = nextSibling(node);\r\n                if (next && next !== end) {\r\n                    remove(next);\r\n                }\r\n                else {\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        const next = nextSibling(node);\r\n        const container = parentNode(node);\r\n        remove(node);\r\n        patch(null, vnode, container, next, parentComponent, parentSuspense, isSVGContainer(container), slotScopeIds);\r\n        return next;\r\n    };\r\n    const locateClosingAsyncAnchor = (node) => {\r\n        let match = 0;\r\n        while (node) {\r\n            node = nextSibling(node);\r\n            if (node && isComment(node)) {\r\n                if (node.data === '[')\r\n                    match++;\r\n                if (node.data === ']') {\r\n                    if (match === 0) {\r\n                        return nextSibling(node);\r\n                    }\r\n                    else {\r\n                        match--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return node;\r\n    };\r\n    return [hydrate, hydrateNode];\r\n}\n\nlet supported;\r\nlet perf;\r\nfunction startMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        perf.mark(`vue-${type}-${instance.uid}`);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfStart(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction endMeasure(instance, type) {\r\n    if (instance.appContext.config.performance && isSupported()) {\r\n        const startTag = `vue-${type}-${instance.uid}`;\r\n        const endTag = startTag + `:end`;\r\n        perf.mark(endTag);\r\n        perf.measure(`<${formatComponentName(instance, instance.type)}> ${type}`, startTag, endTag);\r\n        perf.clearMarks(startTag);\r\n        perf.clearMarks(endTag);\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        devtoolsPerfEnd(instance, type, supported ? perf.now() : Date.now());\r\n    }\r\n}\r\nfunction isSupported() {\r\n    if (supported !== undefined) {\r\n        return supported;\r\n    }\r\n    /* eslint-disable no-restricted-globals */\r\n    if (typeof window !== 'undefined' && window.performance) {\r\n        supported = true;\r\n        perf = window.performance;\r\n    }\r\n    else {\r\n        supported = false;\r\n    }\r\n    /* eslint-enable no-restricted-globals */\r\n    return supported;\r\n}\n\n/**\r\n * This is only called in esm-bundler builds.\r\n * It is called when a renderer is created, in `baseCreateRenderer` so that\r\n * importing runtime-core is side-effects free.\r\n *\r\n * istanbul-ignore-next\r\n */\r\nfunction initFeatureFlags() {\r\n    let needWarn = false;\r\n    if (typeof __VUE_OPTIONS_API__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_OPTIONS_API__ = true;\r\n    }\r\n    if (typeof __VUE_PROD_DEVTOOLS__ !== 'boolean') {\r\n        needWarn = true;\r\n        getGlobalThis().__VUE_PROD_DEVTOOLS__ = false;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') && needWarn) {\r\n        console.warn(`You are running the esm-bundler build of Vue. It is recommended to ` +\r\n            `configure your bundler to explicitly replace feature flag globals ` +\r\n            `with boolean literals to get proper tree-shaking in the final bundle. ` +\r\n            `See http://link.vuejs.org/feature-flags for more details.`);\r\n    }\r\n}\n\nconst prodEffectOptions = {\r\n    scheduler: queueJob,\r\n    // #1801, #2043 component render effects should allow recursive updates\r\n    allowRecurse: true\r\n};\r\nfunction createDevEffectOptions(instance) {\r\n    return {\r\n        scheduler: queueJob,\r\n        allowRecurse: true,\r\n        onTrack: instance.rtc ? e => invokeArrayFns(instance.rtc, e) : void 0,\r\n        onTrigger: instance.rtg ? e => invokeArrayFns(instance.rtg, e) : void 0\r\n    };\r\n}\r\nconst queuePostRenderEffect = queueEffectWithSuspense\r\n    ;\r\nconst setRef = (rawRef, oldRawRef, parentSuspense, vnode, isUnmount = false) => {\r\n    if (isArray(rawRef)) {\r\n        rawRef.forEach((r, i) => setRef(r, oldRawRef && (isArray(oldRawRef) ? oldRawRef[i] : oldRawRef), parentSuspense, vnode, isUnmount));\r\n        return;\r\n    }\r\n    if (isAsyncWrapper(vnode) && !isUnmount) {\r\n        // when mounting async components, nothing needs to be done,\r\n        // because the template ref is forwarded to inner component\r\n        return;\r\n    }\r\n    const refValue = vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */\r\n        ? getExposeProxy(vnode.component) || vnode.component.proxy\r\n        : vnode.el;\r\n    const value = isUnmount ? null : refValue;\r\n    const { i: owner, r: ref } = rawRef;\r\n    if ((process.env.NODE_ENV !== 'production') && !owner) {\r\n        warn(`Missing ref owner context. ref cannot be used on hoisted vnodes. ` +\r\n            `A vnode with ref must be created inside the render function.`);\r\n        return;\r\n    }\r\n    const oldRef = oldRawRef && oldRawRef.r;\r\n    const refs = owner.refs === EMPTY_OBJ ? (owner.refs = {}) : owner.refs;\r\n    const setupState = owner.setupState;\r\n    // dynamic ref changed. unset old ref\r\n    if (oldRef != null && oldRef !== ref) {\r\n        if (isString(oldRef)) {\r\n            refs[oldRef] = null;\r\n            if (hasOwn(setupState, oldRef)) {\r\n                setupState[oldRef] = null;\r\n            }\r\n        }\r\n        else if (isRef(oldRef)) {\r\n            oldRef.value = null;\r\n        }\r\n    }\r\n    if (isString(ref)) {\r\n        const doSet = () => {\r\n            {\r\n                refs[ref] = value;\r\n            }\r\n            if (hasOwn(setupState, ref)) {\r\n                setupState[ref] = value;\r\n            }\r\n        };\r\n        // #1789: for non-null values, set them after render\r\n        // null values means this is unmount and it should not overwrite another\r\n        // ref with the same key\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isRef(ref)) {\r\n        const doSet = () => {\r\n            ref.value = value;\r\n        };\r\n        if (value) {\r\n            doSet.id = -1;\r\n            queuePostRenderEffect(doSet, parentSuspense);\r\n        }\r\n        else {\r\n            doSet();\r\n        }\r\n    }\r\n    else if (isFunction$1(ref)) {\r\n        callWithErrorHandling(ref, owner, 12 /* FUNCTION_REF */, [value, refs]);\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn('Invalid template ref type:', value, `(${typeof value})`);\r\n    }\r\n};\r\n/**\r\n * The createRenderer function accepts two generic arguments:\r\n * HostNode and HostElement, corresponding to Node and Element types in the\r\n * host environment. For example, for runtime-dom, HostNode would be the DOM\r\n * `Node` interface and HostElement would be the DOM `Element` interface.\r\n *\r\n * Custom renderers can pass in the platform specific types like this:\r\n *\r\n * ``` js\r\n * const { render, createApp } = createRenderer<Node, Element>({\r\n *   patchProp,\r\n *   ...nodeOps\r\n * })\r\n * ```\r\n */\r\nfunction createRenderer(options) {\r\n    return baseCreateRenderer(options);\r\n}\r\n// Separate API for creating hydration-enabled renderer.\r\n// Hydration logic is only used when calling this function, making it\r\n// tree-shakable.\r\nfunction createHydrationRenderer(options) {\r\n    return baseCreateRenderer(options, createHydrationFunctions);\r\n}\r\n// implementation\r\nfunction baseCreateRenderer(options, createHydrationFns) {\r\n    // compile-time feature flags check\r\n    {\r\n        initFeatureFlags();\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n        const target = getGlobalThis();\r\n        target.__VUE__ = true;\r\n        setDevtoolsHook(target.__VUE_DEVTOOLS_GLOBAL_HOOK__);\r\n    }\r\n    const { insert: hostInsert, remove: hostRemove, patchProp: hostPatchProp, forcePatchProp: hostForcePatchProp, createElement: hostCreateElement, createText: hostCreateText, createComment: hostCreateComment, setText: hostSetText, setElementText: hostSetElementText, parentNode: hostParentNode, nextSibling: hostNextSibling, setScopeId: hostSetScopeId = NOOP, cloneNode: hostCloneNode, insertStaticContent: hostInsertStaticContent } = options;\r\n    // Note: functions inside this closure should use `const xxx = () => {}`\r\n    // style in order to prevent being inlined by minifiers.\r\n    const patch = (n1, n2, container, anchor = null, parentComponent = null, parentSuspense = null, isSVG = false, slotScopeIds = null, optimized = false) => {\r\n        // patching & not same type, unmount old tree\r\n        if (n1 && !isSameVNodeType(n1, n2)) {\r\n            anchor = getNextHostNode(n1);\r\n            unmount(n1, parentComponent, parentSuspense, true);\r\n            n1 = null;\r\n        }\r\n        if (n2.patchFlag === -2 /* BAIL */) {\r\n            optimized = false;\r\n            n2.dynamicChildren = null;\r\n        }\r\n        const { type, ref, shapeFlag } = n2;\r\n        switch (type) {\r\n            case Text:\r\n                processText(n1, n2, container, anchor);\r\n                break;\r\n            case Comment$1:\r\n                processCommentNode(n1, n2, container, anchor);\r\n                break;\r\n            case Static:\r\n                if (n1 == null) {\r\n                    mountStaticNode(n2, container, anchor, isSVG);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    patchStaticNode(n1, n2, container, isSVG);\r\n                }\r\n                break;\r\n            case Fragment:\r\n                processFragment(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                break;\r\n            default:\r\n                if (shapeFlag & 1 /* ELEMENT */) {\r\n                    processElement(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 6 /* COMPONENT */) {\r\n                    processComponent(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (shapeFlag & 64 /* TELEPORT */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if (shapeFlag & 128 /* SUSPENSE */) {\r\n                    type.process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals);\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn('Invalid VNode type:', type, `(${typeof type})`);\r\n                }\r\n        }\r\n        // set ref\r\n        if (ref != null && parentComponent) {\r\n            setRef(ref, n1 && n1.ref, parentSuspense, n2 || n1, !n2);\r\n        }\r\n    };\r\n    const processText = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateText(n2.children)), container, anchor);\r\n        }\r\n        else {\r\n            const el = (n2.el = n1.el);\r\n            if (n2.children !== n1.children) {\r\n                hostSetText(el, n2.children);\r\n            }\r\n        }\r\n    };\r\n    const processCommentNode = (n1, n2, container, anchor) => {\r\n        if (n1 == null) {\r\n            hostInsert((n2.el = hostCreateComment(n2.children || '')), container, anchor);\r\n        }\r\n        else {\r\n            // there's no support for dynamic comments\r\n            n2.el = n1.el;\r\n        }\r\n    };\r\n    const mountStaticNode = (n2, container, anchor, isSVG) => {\r\n        // static nodes are only present when used with compiler-dom/runtime-dom\r\n        // which guarantees presence of hostInsertStaticContent.\r\n        const nodes = hostInsertStaticContent(n2.children, container, anchor, isSVG, \r\n        // pass cached nodes if the static node is being mounted multiple times\r\n        // so that runtime-dom can simply cloneNode() instead of inserting new\r\n        // HTML\r\n        n2.staticCache);\r\n        // first mount - this is the orignal hoisted vnode. cache nodes.\r\n        if (!n2.el) {\r\n            n2.staticCache = nodes;\r\n        }\r\n        n2.el = nodes[0];\r\n        n2.anchor = nodes[nodes.length - 1];\r\n    };\r\n    /**\r\n     * Dev / HMR only\r\n     */\r\n    const patchStaticNode = (n1, n2, container, isSVG) => {\r\n        // static nodes are only patched during dev for HMR\r\n        if (n2.children !== n1.children) {\r\n            const anchor = hostNextSibling(n1.anchor);\r\n            // remove existing\r\n            removeStaticNode(n1);\r\n            [n2.el, n2.anchor] = hostInsertStaticContent(n2.children, container, anchor, isSVG);\r\n        }\r\n        else {\r\n            n2.el = n1.el;\r\n            n2.anchor = n1.anchor;\r\n        }\r\n    };\r\n    const moveStaticNode = ({ el, anchor }, container, nextSibling) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostInsert(el, container, nextSibling);\r\n            el = next;\r\n        }\r\n        hostInsert(anchor, container, nextSibling);\r\n    };\r\n    const removeStaticNode = ({ el, anchor }) => {\r\n        let next;\r\n        while (el && el !== anchor) {\r\n            next = hostNextSibling(el);\r\n            hostRemove(el);\r\n            el = next;\r\n        }\r\n        hostRemove(anchor);\r\n    };\r\n    const processElement = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        isSVG = isSVG || n2.type === 'svg';\r\n        if (n1 == null) {\r\n            mountElement(n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            patchElement(n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const mountElement = (vnode, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let el;\r\n        let vnodeHook;\r\n        const { type, props, shapeFlag, transition, patchFlag, dirs } = vnode;\r\n        if (!(process.env.NODE_ENV !== 'production') &&\r\n            vnode.el &&\r\n            hostCloneNode !== undefined &&\r\n            patchFlag === -1 /* HOISTED */) {\r\n            // If a vnode has non-null el, it means it's being reused.\r\n            // Only static vnodes can be reused, so its mounted DOM nodes should be\r\n            // exactly the same, and we can simply do a clone here.\r\n            // only do this in production since cloned trees cannot be HMR updated.\r\n            el = vnode.el = hostCloneNode(vnode.el);\r\n        }\r\n        else {\r\n            el = vnode.el = hostCreateElement(vnode.type, isSVG, props && props.is, props);\r\n            // mount children first, since some props may rely on child content\r\n            // being already rendered, e.g. `<select value>`\r\n            if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                hostSetElementText(el, vnode.children);\r\n            }\r\n            else if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                mountChildren(vnode.children, el, null, parentComponent, parentSuspense, isSVG && type !== 'foreignObject', slotScopeIds, optimized || !!vnode.dynamicChildren);\r\n            }\r\n            if (dirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'created');\r\n            }\r\n            // props\r\n            if (props) {\r\n                for (const key in props) {\r\n                    if (!isReservedProp(key)) {\r\n                        hostPatchProp(el, key, null, props[key], isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n                if ((vnodeHook = props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                }\r\n            }\r\n            // scopeId\r\n            setScopeId(el, vnode, vnode.scopeId, slotScopeIds, parentComponent);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            Object.defineProperty(el, '__vnode', {\r\n                value: vnode,\r\n                enumerable: false\r\n            });\r\n            Object.defineProperty(el, '__vueParentComponent', {\r\n                value: parentComponent,\r\n                enumerable: false\r\n            });\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(vnode, null, parentComponent, 'beforeMount');\r\n        }\r\n        // #1583 For inside suspense + suspense not resolved case, enter hook should call when suspense resolved\r\n        // #1689 For inside suspense + suspense resolved case, just call it\r\n        const needCallTransitionHooks = (!parentSuspense || (parentSuspense && !parentSuspense.pendingBranch)) &&\r\n            transition &&\r\n            !transition.persisted;\r\n        if (needCallTransitionHooks) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        hostInsert(el, container, anchor);\r\n        if ((vnodeHook = props && props.onVnodeMounted) ||\r\n            needCallTransitionHooks ||\r\n            dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                needCallTransitionHooks && transition.enter(el);\r\n                dirs && invokeDirectiveHook(vnode, null, parentComponent, 'mounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const setScopeId = (el, vnode, scopeId, slotScopeIds, parentComponent) => {\r\n        if (scopeId) {\r\n            hostSetScopeId(el, scopeId);\r\n        }\r\n        if (slotScopeIds) {\r\n            for (let i = 0; i < slotScopeIds.length; i++) {\r\n                hostSetScopeId(el, slotScopeIds[i]);\r\n            }\r\n        }\r\n        if (parentComponent) {\r\n            let subTree = parentComponent.subTree;\r\n            if ((process.env.NODE_ENV !== 'production') &&\r\n                subTree.patchFlag > 0 &&\r\n                subTree.patchFlag & 2048 /* DEV_ROOT_FRAGMENT */) {\r\n                subTree =\r\n                    filterSingleRoot(subTree.children) || subTree;\r\n            }\r\n            if (vnode === subTree) {\r\n                const parentVNode = parentComponent.vnode;\r\n                setScopeId(el, parentVNode, parentVNode.scopeId, parentVNode.slotScopeIds, parentComponent.parent);\r\n            }\r\n        }\r\n    };\r\n    const mountChildren = (children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            const child = (children[i] = optimized\r\n                ? cloneIfMounted(children[i])\r\n                : normalizeVNode(children[i]));\r\n            patch(null, child, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n    };\r\n    const patchElement = (n1, n2, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const el = (n2.el = n1.el);\r\n        let { patchFlag, dynamicChildren, dirs } = n2;\r\n        // #1426 take the old vnode's patch flag into account since user may clone a\r\n        // compiler-generated vnode, which de-opts to FULL_PROPS\r\n        patchFlag |= n1.patchFlag & 16 /* FULL_PROPS */;\r\n        const oldProps = n1.props || EMPTY_OBJ;\r\n        const newProps = n2.props || EMPTY_OBJ;\r\n        let vnodeHook;\r\n        if ((vnodeHook = newProps.onVnodeBeforeUpdate)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n        }\r\n        if (dirs) {\r\n            invokeDirectiveHook(n2, n1, parentComponent, 'beforeUpdate');\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (patchFlag > 0) {\r\n            // the presence of a patchFlag means this element's render code was\r\n            // generated by the compiler and can take the fast path.\r\n            // in this path old node and new node are guaranteed to have the same shape\r\n            // (i.e. at the exact same position in the source template)\r\n            if (patchFlag & 16 /* FULL_PROPS */) {\r\n                // element props contain dynamic keys, full diff needed\r\n                patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n            }\r\n            else {\r\n                // class\r\n                // this flag is matched when the element has dynamic class bindings.\r\n                if (patchFlag & 2 /* CLASS */) {\r\n                    if (oldProps.class !== newProps.class) {\r\n                        hostPatchProp(el, 'class', null, newProps.class, isSVG);\r\n                    }\r\n                }\r\n                // style\r\n                // this flag is matched when the element has dynamic style bindings\r\n                if (patchFlag & 4 /* STYLE */) {\r\n                    hostPatchProp(el, 'style', oldProps.style, newProps.style, isSVG);\r\n                }\r\n                // props\r\n                // This flag is matched when the element has dynamic prop/attr bindings\r\n                // other than class and style. The keys of dynamic prop/attrs are saved for\r\n                // faster iteration.\r\n                // Note dynamic keys like :[foo]=\"bar\" will cause this optimization to\r\n                // bail out and go through a full diff because we need to unset the old key\r\n                if (patchFlag & 8 /* PROPS */) {\r\n                    // if the flag is present then dynamicProps must be non-null\r\n                    const propsToUpdate = n2.dynamicProps;\r\n                    for (let i = 0; i < propsToUpdate.length; i++) {\r\n                        const key = propsToUpdate[i];\r\n                        const prev = oldProps[key];\r\n                        const next = newProps[key];\r\n                        if (next !== prev ||\r\n                            (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                            hostPatchProp(el, key, prev, next, isSVG, n1.children, parentComponent, parentSuspense, unmountChildren);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n            // text\r\n            // This flag is matched when the element has only dynamic text children.\r\n            if (patchFlag & 1 /* TEXT */) {\r\n                if (n1.children !== n2.children) {\r\n                    hostSetElementText(el, n2.children);\r\n                }\r\n            }\r\n        }\r\n        else if (!optimized && dynamicChildren == null) {\r\n            // unoptimized, full diff\r\n            patchProps(el, n2, oldProps, newProps, parentComponent, parentSuspense, isSVG);\r\n        }\r\n        const areChildrenSVG = isSVG && n2.type !== 'foreignObject';\r\n        if (dynamicChildren) {\r\n            patchBlockChildren(n1.dynamicChildren, dynamicChildren, el, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds);\r\n            if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                traverseStaticChildren(n1, n2);\r\n            }\r\n        }\r\n        else if (!optimized) {\r\n            // full diff\r\n            patchChildren(n1, n2, el, null, parentComponent, parentSuspense, areChildrenSVG, slotScopeIds, false);\r\n        }\r\n        if ((vnodeHook = newProps.onVnodeUpdated) || dirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, n2, n1);\r\n                dirs && invokeDirectiveHook(n2, n1, parentComponent, 'updated');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    // The fast path for blocks.\r\n    const patchBlockChildren = (oldChildren, newChildren, fallbackContainer, parentComponent, parentSuspense, isSVG, slotScopeIds) => {\r\n        for (let i = 0; i < newChildren.length; i++) {\r\n            const oldVNode = oldChildren[i];\r\n            const newVNode = newChildren[i];\r\n            // Determine the container (parent element) for the patch.\r\n            const container = \r\n            // oldVNode may be an errored async setup() component inside Suspense\r\n            // which will not have a mounted element\r\n            oldVNode.el &&\r\n                // - In the case of a Fragment, we need to provide the actual parent\r\n                // of the Fragment itself so it can move its children.\r\n                (oldVNode.type === Fragment ||\r\n                    // - In the case of different nodes, there is going to be a replacement\r\n                    // which also requires the correct parent container\r\n                    !isSameVNodeType(oldVNode, newVNode) ||\r\n                    // - In the case of a component, it could contain anything.\r\n                    oldVNode.shapeFlag & 6 /* COMPONENT */ ||\r\n                    oldVNode.shapeFlag & 64 /* TELEPORT */)\r\n                ? hostParentNode(oldVNode.el)\r\n                : // In other cases, the parent container is not actually used so we\r\n                    // just pass the block element here to avoid a DOM parentNode call.\r\n                    fallbackContainer;\r\n            patch(oldVNode, newVNode, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, true);\r\n        }\r\n    };\r\n    const patchProps = (el, vnode, oldProps, newProps, parentComponent, parentSuspense, isSVG) => {\r\n        if (oldProps !== newProps) {\r\n            for (const key in newProps) {\r\n                // empty string is not valid prop\r\n                if (isReservedProp(key))\r\n                    continue;\r\n                const next = newProps[key];\r\n                const prev = oldProps[key];\r\n                if (next !== prev ||\r\n                    (hostForcePatchProp && hostForcePatchProp(el, key))) {\r\n                    hostPatchProp(el, key, prev, next, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                }\r\n            }\r\n            if (oldProps !== EMPTY_OBJ) {\r\n                for (const key in oldProps) {\r\n                    if (!isReservedProp(key) && !(key in newProps)) {\r\n                        hostPatchProp(el, key, oldProps[key], null, isSVG, vnode.children, parentComponent, parentSuspense, unmountChildren);\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const processFragment = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        const fragmentStartAnchor = (n2.el = n1 ? n1.el : hostCreateText(''));\r\n        const fragmentEndAnchor = (n2.anchor = n1 ? n1.anchor : hostCreateText(''));\r\n        let { patchFlag, dynamicChildren, slotScopeIds: fragmentSlotScopeIds } = n2;\r\n        if (dynamicChildren) {\r\n            optimized = true;\r\n        }\r\n        // check if this is a slot fragment with :slotted scope ids\r\n        if (fragmentSlotScopeIds) {\r\n            slotScopeIds = slotScopeIds\r\n                ? slotScopeIds.concat(fragmentSlotScopeIds)\r\n                : fragmentSlotScopeIds;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            // HMR updated, force full diff\r\n            patchFlag = 0;\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            hostInsert(fragmentStartAnchor, container, anchor);\r\n            hostInsert(fragmentEndAnchor, container, anchor);\r\n            // a fragment can only have array children\r\n            // since they are either generated by the compiler, or implicitly created\r\n            // from arrays.\r\n            mountChildren(n2.children, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        else {\r\n            if (patchFlag > 0 &&\r\n                patchFlag & 64 /* STABLE_FRAGMENT */ &&\r\n                dynamicChildren &&\r\n                // #2715 the previous fragment could've been a BAILed one as a result\r\n                // of renderSlot() with no valid children\r\n                n1.dynamicChildren) {\r\n                // a stable fragment (template root or <template v-for>) doesn't need to\r\n                // patch children order, but it may contain dynamicChildren.\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, container, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                if ((process.env.NODE_ENV !== 'production') && parentComponent && parentComponent.type.__hmrId) {\r\n                    traverseStaticChildren(n1, n2);\r\n                }\r\n                else if (\r\n                // #2080 if the stable fragment has a key, it's a <template v-for> that may\r\n                //  get moved around. Make sure all root level vnodes inherit el.\r\n                // #2134 or if it's a component root, it may also get moved around\r\n                // as the component is being moved.\r\n                n2.key != null ||\r\n                    (parentComponent && n2 === parentComponent.subTree)) {\r\n                    traverseStaticChildren(n1, n2, true /* shallow */);\r\n                }\r\n            }\r\n            else {\r\n                // keyed / unkeyed, or manual fragments.\r\n                // for keyed & unkeyed, since they are compiler generated from v-for,\r\n                // each child is guaranteed to be a block so the fragment will never\r\n                // have dynamicChildren.\r\n                patchChildren(n1, n2, container, fragmentEndAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n        }\r\n    };\r\n    const processComponent = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        n2.slotScopeIds = slotScopeIds;\r\n        if (n1 == null) {\r\n            if (n2.shapeFlag & 512 /* COMPONENT_KEPT_ALIVE */) {\r\n                parentComponent.ctx.activate(n2, container, anchor, isSVG, optimized);\r\n            }\r\n            else {\r\n                mountComponent(n2, container, anchor, parentComponent, parentSuspense, isSVG, optimized);\r\n            }\r\n        }\r\n        else {\r\n            updateComponent(n1, n2, optimized);\r\n        }\r\n    };\r\n    const mountComponent = (initialVNode, container, anchor, parentComponent, parentSuspense, isSVG, optimized) => {\r\n        const instance = (initialVNode.component = createComponentInstance(initialVNode, parentComponent, parentSuspense));\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            registerHMR(instance);\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            pushWarningContext(initialVNode);\r\n            startMeasure(instance, `mount`);\r\n        }\r\n        // inject renderer internals for keepAlive\r\n        if (isKeepAlive(initialVNode)) {\r\n            instance.ctx.renderer = internals;\r\n        }\r\n        // resolve props and slots for setup context\r\n        {\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                startMeasure(instance, `init`);\r\n            }\r\n            setupComponent(instance);\r\n            if ((process.env.NODE_ENV !== 'production')) {\r\n                endMeasure(instance, `init`);\r\n            }\r\n        }\r\n        // setup() is async. This component relies on async logic to be resolved\r\n        // before proceeding\r\n        if (instance.asyncDep) {\r\n            parentSuspense && parentSuspense.registerDep(instance, setupRenderEffect);\r\n            // Give it a placeholder if this is not hydration\r\n            // TODO handle self-defined fallback\r\n            if (!initialVNode.el) {\r\n                const placeholder = (instance.subTree = createVNode(Comment$1));\r\n                processCommentNode(null, placeholder, container, anchor);\r\n            }\r\n            return;\r\n        }\r\n        setupRenderEffect(instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            popWarningContext();\r\n            endMeasure(instance, `mount`);\r\n        }\r\n    };\r\n    const updateComponent = (n1, n2, optimized) => {\r\n        const instance = (n2.component = n1.component);\r\n        if (shouldUpdateComponent(n1, n2, optimized)) {\r\n            if (instance.asyncDep &&\r\n                !instance.asyncResolved) {\r\n                // async & still pending - just update props and slots\r\n                // since the component's reactive effect for render isn't set-up yet\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(n2);\r\n                }\r\n                updateComponentPreRender(instance, n2, optimized);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n                return;\r\n            }\r\n            else {\r\n                // normal update\r\n                instance.next = n2;\r\n                // in case the child component is also queued, remove it to avoid\r\n                // double updating the same child component in the same flush.\r\n                invalidateJob(instance.update);\r\n                // instance.update is the reactive effect runner.\r\n                instance.update();\r\n            }\r\n        }\r\n        else {\r\n            // no update needed. just copy over properties\r\n            n2.component = n1.component;\r\n            n2.el = n1.el;\r\n            instance.vnode = n2;\r\n        }\r\n    };\r\n    const setupRenderEffect = (instance, initialVNode, container, anchor, parentSuspense, isSVG, optimized) => {\r\n        // create reactive effect for rendering\r\n        instance.update = effect(function componentEffect() {\r\n            if (!instance.isMounted) {\r\n                let vnodeHook;\r\n                const { el, props } = initialVNode;\r\n                const { bm, m, parent } = instance;\r\n                // beforeMount hook\r\n                if (bm) {\r\n                    invokeArrayFns(bm);\r\n                }\r\n                // onVnodeBeforeMount\r\n                if ((vnodeHook = props && props.onVnodeBeforeMount)) {\r\n                    invokeVNodeHook(vnodeHook, parent, initialVNode);\r\n                }\r\n                if (el && hydrateNode) {\r\n                    // vnode has adopted host node - perform hydration instead of mount.\r\n                    const hydrateSubTree = () => {\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `render`);\r\n                        }\r\n                        instance.subTree = renderComponentRoot(instance);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `render`);\r\n                        }\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            startMeasure(instance, `hydrate`);\r\n                        }\r\n                        hydrateNode(el, instance.subTree, instance, parentSuspense, null);\r\n                        if ((process.env.NODE_ENV !== 'production')) {\r\n                            endMeasure(instance, `hydrate`);\r\n                        }\r\n                    };\r\n                    if (isAsyncWrapper(initialVNode)) {\r\n                        initialVNode.type.__asyncLoader().then(\r\n                        // note: we are moving the render call into an async callback,\r\n                        // which means it won't track dependencies - but it's ok because\r\n                        // a server-rendered async wrapper is already in resolved state\r\n                        // and it will never need to change.\r\n                        () => !instance.isUnmounted && hydrateSubTree());\r\n                    }\r\n                    else {\r\n                        hydrateSubTree();\r\n                    }\r\n                }\r\n                else {\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `render`);\r\n                    }\r\n                    const subTree = (instance.subTree = renderComponentRoot(instance));\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `render`);\r\n                    }\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        startMeasure(instance, `patch`);\r\n                    }\r\n                    patch(null, subTree, container, anchor, instance, parentSuspense, isSVG);\r\n                    if ((process.env.NODE_ENV !== 'production')) {\r\n                        endMeasure(instance, `patch`);\r\n                    }\r\n                    initialVNode.el = subTree.el;\r\n                }\r\n                // mounted hook\r\n                if (m) {\r\n                    queuePostRenderEffect(m, parentSuspense);\r\n                }\r\n                // onVnodeMounted\r\n                if ((vnodeHook = props && props.onVnodeMounted)) {\r\n                    const scopedInitialVNode = initialVNode;\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, scopedInitialVNode), parentSuspense);\r\n                }\r\n                // activated hook for keep-alive roots.\r\n                // #1742 activated hook must be accessed after first render\r\n                // since the hook may be injected by a child keep-alive\r\n                if (initialVNode.shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n                    instance.a && queuePostRenderEffect(instance.a, parentSuspense);\r\n                }\r\n                instance.isMounted = true;\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentAdded(instance);\r\n                }\r\n                // #2458: deference mount-only object parameters to prevent memleaks\r\n                initialVNode = container = anchor = null;\r\n            }\r\n            else {\r\n                // updateComponent\r\n                // This is triggered by mutation of component's own state (next: null)\r\n                // OR parent calling processComponent (next: VNode)\r\n                let { next, bu, u, parent, vnode } = instance;\r\n                let originNext = next;\r\n                let vnodeHook;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    pushWarningContext(next || instance.vnode);\r\n                }\r\n                if (next) {\r\n                    next.el = vnode.el;\r\n                    updateComponentPreRender(instance, next, optimized);\r\n                }\r\n                else {\r\n                    next = vnode;\r\n                }\r\n                // beforeUpdate hook\r\n                if (bu) {\r\n                    invokeArrayFns(bu);\r\n                }\r\n                // onVnodeBeforeUpdate\r\n                if ((vnodeHook = next.props && next.props.onVnodeBeforeUpdate)) {\r\n                    invokeVNodeHook(vnodeHook, parent, next, vnode);\r\n                }\r\n                // render\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `render`);\r\n                }\r\n                const nextTree = renderComponentRoot(instance);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `render`);\r\n                }\r\n                const prevTree = instance.subTree;\r\n                instance.subTree = nextTree;\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `patch`);\r\n                }\r\n                patch(prevTree, nextTree, \r\n                // parent may have changed if it's in a teleport\r\n                hostParentNode(prevTree.el), \r\n                // anchor may have changed if it's in a fragment\r\n                getNextHostNode(prevTree), instance, parentSuspense, isSVG);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `patch`);\r\n                }\r\n                next.el = nextTree.el;\r\n                if (originNext === null) {\r\n                    // self-triggered update. In case of HOC, update parent component\r\n                    // vnode el. HOC is indicated by parent instance's subTree pointing\r\n                    // to child component's vnode\r\n                    updateHOCHostEl(instance, nextTree.el);\r\n                }\r\n                // updated hook\r\n                if (u) {\r\n                    queuePostRenderEffect(u, parentSuspense);\r\n                }\r\n                // onVnodeUpdated\r\n                if ((vnodeHook = next.props && next.props.onVnodeUpdated)) {\r\n                    queuePostRenderEffect(() => invokeVNodeHook(vnodeHook, parent, next, vnode), parentSuspense);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n                    devtoolsComponentUpdated(instance);\r\n                }\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    popWarningContext();\r\n                }\r\n            }\r\n        }, (process.env.NODE_ENV !== 'production') ? createDevEffectOptions(instance) : prodEffectOptions);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            // @ts-ignore\r\n            instance.update.ownerInstance = instance;\r\n        }\r\n    };\r\n    const updateComponentPreRender = (instance, nextVNode, optimized) => {\r\n        nextVNode.component = instance;\r\n        const prevProps = instance.vnode.props;\r\n        instance.vnode = nextVNode;\r\n        instance.next = null;\r\n        updateProps(instance, nextVNode.props, prevProps, optimized);\r\n        updateSlots(instance, nextVNode.children, optimized);\r\n        pauseTracking();\r\n        // props update may have triggered pre-flush watchers.\r\n        // flush them before the render update.\r\n        flushPreFlushCbs(undefined, instance.update);\r\n        resetTracking();\r\n    };\r\n    const patchChildren = (n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized = false) => {\r\n        const c1 = n1 && n1.children;\r\n        const prevShapeFlag = n1 ? n1.shapeFlag : 0;\r\n        const c2 = n2.children;\r\n        const { patchFlag, shapeFlag } = n2;\r\n        // fast path\r\n        if (patchFlag > 0) {\r\n            if (patchFlag & 128 /* KEYED_FRAGMENT */) {\r\n                // this could be either fully-keyed or mixed (some keyed some not)\r\n                // presence of patchFlag means children are guaranteed to be arrays\r\n                patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n            else if (patchFlag & 256 /* UNKEYED_FRAGMENT */) {\r\n                // unkeyed\r\n                patchUnkeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                return;\r\n            }\r\n        }\r\n        // children has 3 possibilities: text, array or no children.\r\n        if (shapeFlag & 8 /* TEXT_CHILDREN */) {\r\n            // text children fast path\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                unmountChildren(c1, parentComponent, parentSuspense);\r\n            }\r\n            if (c2 !== c1) {\r\n                hostSetElementText(container, c2);\r\n            }\r\n        }\r\n        else {\r\n            if (prevShapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                // prev children was array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    // two arrays, cannot assume anything, do full diff\r\n                    patchKeyedChildren(c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else {\r\n                    // no new children, just unmount old\r\n                    unmountChildren(c1, parentComponent, parentSuspense, true);\r\n                }\r\n            }\r\n            else {\r\n                // prev children was text OR null\r\n                // new children is array OR null\r\n                if (prevShapeFlag & 8 /* TEXT_CHILDREN */) {\r\n                    hostSetElementText(container, '');\r\n                }\r\n                // mount new if array\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const patchUnkeyedChildren = (c1, c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        c1 = c1 || EMPTY_ARR;\r\n        c2 = c2 || EMPTY_ARR;\r\n        const oldLength = c1.length;\r\n        const newLength = c2.length;\r\n        const commonLength = Math.min(oldLength, newLength);\r\n        let i;\r\n        for (i = 0; i < commonLength; i++) {\r\n            const nextChild = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            patch(c1[i], nextChild, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n        }\r\n        if (oldLength > newLength) {\r\n            // remove old\r\n            unmountChildren(c1, parentComponent, parentSuspense, true, false, commonLength);\r\n        }\r\n        else {\r\n            // mount new\r\n            mountChildren(c2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, commonLength);\r\n        }\r\n    };\r\n    // can be all-keyed or mixed\r\n    const patchKeyedChildren = (c1, c2, container, parentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized) => {\r\n        let i = 0;\r\n        const l2 = c2.length;\r\n        let e1 = c1.length - 1; // prev ending index\r\n        let e2 = l2 - 1; // next ending index\r\n        // 1. sync from start\r\n        // (a b) c\r\n        // (a b) d e\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[i];\r\n            const n2 = (c2[i] = optimized\r\n                ? cloneIfMounted(c2[i])\r\n                : normalizeVNode(c2[i]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            i++;\r\n        }\r\n        // 2. sync from end\r\n        // a (b c)\r\n        // d e (b c)\r\n        while (i <= e1 && i <= e2) {\r\n            const n1 = c1[e1];\r\n            const n2 = (c2[e2] = optimized\r\n                ? cloneIfMounted(c2[e2])\r\n                : normalizeVNode(c2[e2]));\r\n            if (isSameVNodeType(n1, n2)) {\r\n                patch(n1, n2, container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n            }\r\n            else {\r\n                break;\r\n            }\r\n            e1--;\r\n            e2--;\r\n        }\r\n        // 3. common sequence + mount\r\n        // (a b)\r\n        // (a b) c\r\n        // i = 2, e1 = 1, e2 = 2\r\n        // (a b)\r\n        // c (a b)\r\n        // i = 0, e1 = -1, e2 = 0\r\n        if (i > e1) {\r\n            if (i <= e2) {\r\n                const nextPos = e2 + 1;\r\n                const anchor = nextPos < l2 ? c2[nextPos].el : parentAnchor;\r\n                while (i <= e2) {\r\n                    patch(null, (c2[i] = optimized\r\n                        ? cloneIfMounted(c2[i])\r\n                        : normalizeVNode(c2[i])), container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    i++;\r\n                }\r\n            }\r\n        }\r\n        // 4. common sequence + unmount\r\n        // (a b) c\r\n        // (a b)\r\n        // i = 2, e1 = 2, e2 = 1\r\n        // a (b c)\r\n        // (b c)\r\n        // i = 0, e1 = 0, e2 = -1\r\n        else if (i > e2) {\r\n            while (i <= e1) {\r\n                unmount(c1[i], parentComponent, parentSuspense, true);\r\n                i++;\r\n            }\r\n        }\r\n        // 5. unknown sequence\r\n        // [i ... e1 + 1]: a b [c d e] f g\r\n        // [i ... e2 + 1]: a b [e d c h] f g\r\n        // i = 2, e1 = 4, e2 = 5\r\n        else {\r\n            const s1 = i; // prev starting index\r\n            const s2 = i; // next starting index\r\n            // 5.1 build key:index map for newChildren\r\n            const keyToNewIndexMap = new Map();\r\n            for (i = s2; i <= e2; i++) {\r\n                const nextChild = (c2[i] = optimized\r\n                    ? cloneIfMounted(c2[i])\r\n                    : normalizeVNode(c2[i]));\r\n                if (nextChild.key != null) {\r\n                    if ((process.env.NODE_ENV !== 'production') && keyToNewIndexMap.has(nextChild.key)) {\r\n                        warn(`Duplicate keys found during update:`, JSON.stringify(nextChild.key), `Make sure keys are unique.`);\r\n                    }\r\n                    keyToNewIndexMap.set(nextChild.key, i);\r\n                }\r\n            }\r\n            // 5.2 loop through old children left to be patched and try to patch\r\n            // matching nodes & remove nodes that are no longer present\r\n            let j;\r\n            let patched = 0;\r\n            const toBePatched = e2 - s2 + 1;\r\n            let moved = false;\r\n            // used to track whether any node has moved\r\n            let maxNewIndexSoFar = 0;\r\n            // works as Map<newIndex, oldIndex>\r\n            // Note that oldIndex is offset by +1\r\n            // and oldIndex = 0 is a special value indicating the new node has\r\n            // no corresponding old node.\r\n            // used for determining longest stable subsequence\r\n            const newIndexToOldIndexMap = new Array(toBePatched);\r\n            for (i = 0; i < toBePatched; i++)\r\n                newIndexToOldIndexMap[i] = 0;\r\n            for (i = s1; i <= e1; i++) {\r\n                const prevChild = c1[i];\r\n                if (patched >= toBePatched) {\r\n                    // all new children have been patched so this can only be a removal\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                    continue;\r\n                }\r\n                let newIndex;\r\n                if (prevChild.key != null) {\r\n                    newIndex = keyToNewIndexMap.get(prevChild.key);\r\n                }\r\n                else {\r\n                    // key-less node, try to locate a key-less node of the same type\r\n                    for (j = s2; j <= e2; j++) {\r\n                        if (newIndexToOldIndexMap[j - s2] === 0 &&\r\n                            isSameVNodeType(prevChild, c2[j])) {\r\n                            newIndex = j;\r\n                            break;\r\n                        }\r\n                    }\r\n                }\r\n                if (newIndex === undefined) {\r\n                    unmount(prevChild, parentComponent, parentSuspense, true);\r\n                }\r\n                else {\r\n                    newIndexToOldIndexMap[newIndex - s2] = i + 1;\r\n                    if (newIndex >= maxNewIndexSoFar) {\r\n                        maxNewIndexSoFar = newIndex;\r\n                    }\r\n                    else {\r\n                        moved = true;\r\n                    }\r\n                    patch(prevChild, c2[newIndex], container, null, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                    patched++;\r\n                }\r\n            }\r\n            // 5.3 move and mount\r\n            // generate longest stable subsequence only when nodes have moved\r\n            const increasingNewIndexSequence = moved\r\n                ? getSequence(newIndexToOldIndexMap)\r\n                : EMPTY_ARR;\r\n            j = increasingNewIndexSequence.length - 1;\r\n            // looping backwards so that we can use last patched node as anchor\r\n            for (i = toBePatched - 1; i >= 0; i--) {\r\n                const nextIndex = s2 + i;\r\n                const nextChild = c2[nextIndex];\r\n                const anchor = nextIndex + 1 < l2 ? c2[nextIndex + 1].el : parentAnchor;\r\n                if (newIndexToOldIndexMap[i] === 0) {\r\n                    // mount new\r\n                    patch(null, nextChild, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n                else if (moved) {\r\n                    // move if:\r\n                    // There is no stable subsequence (e.g. a reverse)\r\n                    // OR current node is not among the stable sequence\r\n                    if (j < 0 || i !== increasingNewIndexSequence[j]) {\r\n                        move(nextChild, container, anchor, 2 /* REORDER */);\r\n                    }\r\n                    else {\r\n                        j--;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    };\r\n    const move = (vnode, container, anchor, moveType, parentSuspense = null) => {\r\n        const { el, type, transition, children, shapeFlag } = vnode;\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            move(vnode.component.subTree, container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 128 /* SUSPENSE */) {\r\n            vnode.suspense.move(container, anchor, moveType);\r\n            return;\r\n        }\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type.move(vnode, container, anchor, internals);\r\n            return;\r\n        }\r\n        if (type === Fragment) {\r\n            hostInsert(el, container, anchor);\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, anchor, moveType);\r\n            }\r\n            hostInsert(vnode.anchor, container, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            moveStaticNode(vnode, container, anchor);\r\n            return;\r\n        }\r\n        // single nodes\r\n        const needTransition = moveType !== 2 /* REORDER */ &&\r\n            shapeFlag & 1 /* ELEMENT */ &&\r\n            transition;\r\n        if (needTransition) {\r\n            if (moveType === 0 /* ENTER */) {\r\n                transition.beforeEnter(el);\r\n                hostInsert(el, container, anchor);\r\n                queuePostRenderEffect(() => transition.enter(el), parentSuspense);\r\n            }\r\n            else {\r\n                const { leave, delayLeave, afterLeave } = transition;\r\n                const remove = () => hostInsert(el, container, anchor);\r\n                const performLeave = () => {\r\n                    leave(el, () => {\r\n                        remove();\r\n                        afterLeave && afterLeave();\r\n                    });\r\n                };\r\n                if (delayLeave) {\r\n                    delayLeave(el, remove, performLeave);\r\n                }\r\n                else {\r\n                    performLeave();\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            hostInsert(el, container, anchor);\r\n        }\r\n    };\r\n    const unmount = (vnode, parentComponent, parentSuspense, doRemove = false, optimized = false) => {\r\n        const { type, props, ref, children, dynamicChildren, shapeFlag, patchFlag, dirs } = vnode;\r\n        // unset ref\r\n        if (ref != null) {\r\n            setRef(ref, null, parentSuspense, vnode, true);\r\n        }\r\n        if (shapeFlag & 256 /* COMPONENT_SHOULD_KEEP_ALIVE */) {\r\n            parentComponent.ctx.deactivate(vnode);\r\n            return;\r\n        }\r\n        const shouldInvokeDirs = shapeFlag & 1 /* ELEMENT */ && dirs;\r\n        let vnodeHook;\r\n        if ((vnodeHook = props && props.onVnodeBeforeUnmount)) {\r\n            invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n        }\r\n        if (shapeFlag & 6 /* COMPONENT */) {\r\n            unmountComponent(vnode.component, parentSuspense, doRemove);\r\n        }\r\n        else {\r\n            if (shapeFlag & 128 /* SUSPENSE */) {\r\n                vnode.suspense.unmount(parentSuspense, doRemove);\r\n                return;\r\n            }\r\n            if (shouldInvokeDirs) {\r\n                invokeDirectiveHook(vnode, null, parentComponent, 'beforeUnmount');\r\n            }\r\n            if (shapeFlag & 64 /* TELEPORT */) {\r\n                vnode.type.remove(vnode, parentComponent, parentSuspense, optimized, internals, doRemove);\r\n            }\r\n            else if (dynamicChildren &&\r\n                // #1153: fast path should not be taken for non-stable (v-for) fragments\r\n                (type !== Fragment ||\r\n                    (patchFlag > 0 && patchFlag & 64 /* STABLE_FRAGMENT */))) {\r\n                // fast path for block nodes: only need to unmount dynamic children.\r\n                unmountChildren(dynamicChildren, parentComponent, parentSuspense, false, true);\r\n            }\r\n            else if ((type === Fragment &&\r\n                (patchFlag & 128 /* KEYED_FRAGMENT */ ||\r\n                    patchFlag & 256 /* UNKEYED_FRAGMENT */)) ||\r\n                (!optimized && shapeFlag & 16 /* ARRAY_CHILDREN */)) {\r\n                unmountChildren(children, parentComponent, parentSuspense);\r\n            }\r\n            if (doRemove) {\r\n                remove(vnode);\r\n            }\r\n        }\r\n        if ((vnodeHook = props && props.onVnodeUnmounted) || shouldInvokeDirs) {\r\n            queuePostRenderEffect(() => {\r\n                vnodeHook && invokeVNodeHook(vnodeHook, parentComponent, vnode);\r\n                shouldInvokeDirs &&\r\n                    invokeDirectiveHook(vnode, null, parentComponent, 'unmounted');\r\n            }, parentSuspense);\r\n        }\r\n    };\r\n    const remove = vnode => {\r\n        const { type, el, anchor, transition } = vnode;\r\n        if (type === Fragment) {\r\n            removeFragment(el, anchor);\r\n            return;\r\n        }\r\n        if (type === Static) {\r\n            removeStaticNode(vnode);\r\n            return;\r\n        }\r\n        const performRemove = () => {\r\n            hostRemove(el);\r\n            if (transition && !transition.persisted && transition.afterLeave) {\r\n                transition.afterLeave();\r\n            }\r\n        };\r\n        if (vnode.shapeFlag & 1 /* ELEMENT */ &&\r\n            transition &&\r\n            !transition.persisted) {\r\n            const { leave, delayLeave } = transition;\r\n            const performLeave = () => leave(el, performRemove);\r\n            if (delayLeave) {\r\n                delayLeave(vnode.el, performRemove, performLeave);\r\n            }\r\n            else {\r\n                performLeave();\r\n            }\r\n        }\r\n        else {\r\n            performRemove();\r\n        }\r\n    };\r\n    const removeFragment = (cur, end) => {\r\n        // For fragments, directly remove all contained DOM nodes.\r\n        // (fragment child nodes cannot have transition)\r\n        let next;\r\n        while (cur !== end) {\r\n            next = hostNextSibling(cur);\r\n            hostRemove(cur);\r\n            cur = next;\r\n        }\r\n        hostRemove(end);\r\n    };\r\n    const unmountComponent = (instance, parentSuspense, doRemove) => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.type.__hmrId) {\r\n            unregisterHMR(instance);\r\n        }\r\n        const { bum, effects, update, subTree, um } = instance;\r\n        // beforeUnmount hook\r\n        if (bum) {\r\n            invokeArrayFns(bum);\r\n        }\r\n        if (effects) {\r\n            for (let i = 0; i < effects.length; i++) {\r\n                stop(effects[i]);\r\n            }\r\n        }\r\n        // update may be null if a component is unmounted before its async\r\n        // setup has resolved.\r\n        if (update) {\r\n            stop(update);\r\n            unmount(subTree, instance, parentSuspense, doRemove);\r\n        }\r\n        // unmounted hook\r\n        if (um) {\r\n            queuePostRenderEffect(um, parentSuspense);\r\n        }\r\n        queuePostRenderEffect(() => {\r\n            instance.isUnmounted = true;\r\n        }, parentSuspense);\r\n        // A component with async dep inside a pending suspense is unmounted before\r\n        // its async dep resolves. This should remove the dep from the suspense, and\r\n        // cause the suspense to resolve immediately if that was the last dep.\r\n        if (parentSuspense &&\r\n            parentSuspense.pendingBranch &&\r\n            !parentSuspense.isUnmounted &&\r\n            instance.asyncDep &&\r\n            !instance.asyncResolved &&\r\n            instance.suspenseId === parentSuspense.pendingId) {\r\n            parentSuspense.deps--;\r\n            if (parentSuspense.deps === 0) {\r\n                parentSuspense.resolve();\r\n            }\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            devtoolsComponentRemoved(instance);\r\n        }\r\n    };\r\n    const unmountChildren = (children, parentComponent, parentSuspense, doRemove = false, optimized = false, start = 0) => {\r\n        for (let i = start; i < children.length; i++) {\r\n            unmount(children[i], parentComponent, parentSuspense, doRemove, optimized);\r\n        }\r\n    };\r\n    const getNextHostNode = vnode => {\r\n        if (vnode.shapeFlag & 6 /* COMPONENT */) {\r\n            return getNextHostNode(vnode.component.subTree);\r\n        }\r\n        if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n            return vnode.suspense.next();\r\n        }\r\n        return hostNextSibling((vnode.anchor || vnode.el));\r\n    };\r\n    const render = (vnode, container, isSVG) => {\r\n        if (vnode == null) {\r\n            if (container._vnode) {\r\n                unmount(container._vnode, null, null, true);\r\n            }\r\n        }\r\n        else {\r\n            patch(container._vnode || null, vnode, container, null, null, null, isSVG);\r\n        }\r\n        flushPostFlushCbs();\r\n        container._vnode = vnode;\r\n    };\r\n    const internals = {\r\n        p: patch,\r\n        um: unmount,\r\n        m: move,\r\n        r: remove,\r\n        mt: mountComponent,\r\n        mc: mountChildren,\r\n        pc: patchChildren,\r\n        pbc: patchBlockChildren,\r\n        n: getNextHostNode,\r\n        o: options\r\n    };\r\n    let hydrate;\r\n    let hydrateNode;\r\n    if (createHydrationFns) {\r\n        [hydrate, hydrateNode] = createHydrationFns(internals);\r\n    }\r\n    return {\r\n        render,\r\n        hydrate,\r\n        createApp: createAppAPI(render, hydrate)\r\n    };\r\n}\r\nfunction invokeVNodeHook(hook, instance, vnode, prevVNode = null) {\r\n    callWithAsyncErrorHandling(hook, instance, 7 /* VNODE_HOOK */, [\r\n        vnode,\r\n        prevVNode\r\n    ]);\r\n}\r\n/**\r\n * #1156\r\n * When a component is HMR-enabled, we need to make sure that all static nodes\r\n * inside a block also inherit the DOM element from the previous tree so that\r\n * HMR updates (which are full updates) can retrieve the element for patching.\r\n *\r\n * #2080\r\n * Inside keyed `template` fragment static children, if a fragment is moved,\r\n * the children will always moved so that need inherit el form previous nodes\r\n * to ensure correct moved position.\r\n */\r\nfunction traverseStaticChildren(n1, n2, shallow = false) {\r\n    const ch1 = n1.children;\r\n    const ch2 = n2.children;\r\n    if (isArray(ch1) && isArray(ch2)) {\r\n        for (let i = 0; i < ch1.length; i++) {\r\n            // this is only called in the optimized path so array children are\r\n            // guaranteed to be vnodes\r\n            const c1 = ch1[i];\r\n            let c2 = ch2[i];\r\n            if (c2.shapeFlag & 1 /* ELEMENT */ && !c2.dynamicChildren) {\r\n                if (c2.patchFlag <= 0 || c2.patchFlag === 32 /* HYDRATE_EVENTS */) {\r\n                    c2 = ch2[i] = cloneIfMounted(ch2[i]);\r\n                    c2.el = c1.el;\r\n                }\r\n                if (!shallow)\r\n                    traverseStaticChildren(c1, c2);\r\n            }\r\n            // also inherit for comment nodes, but not placeholders (e.g. v-if which\r\n            // would have received .el during block patch)\r\n            if ((process.env.NODE_ENV !== 'production') && c2.type === Comment$1 && !c2.el) {\r\n                c2.el = c1.el;\r\n            }\r\n        }\r\n    }\r\n}\r\n// https://en.wikipedia.org/wiki/Longest_increasing_subsequence\r\nfunction getSequence(arr) {\r\n    const p = arr.slice();\r\n    const result = [0];\r\n    let i, j, u, v, c;\r\n    const len = arr.length;\r\n    for (i = 0; i < len; i++) {\r\n        const arrI = arr[i];\r\n        if (arrI !== 0) {\r\n            j = result[result.length - 1];\r\n            if (arr[j] < arrI) {\r\n                p[i] = j;\r\n                result.push(i);\r\n                continue;\r\n            }\r\n            u = 0;\r\n            v = result.length - 1;\r\n            while (u < v) {\r\n                c = ((u + v) / 2) | 0;\r\n                if (arr[result[c]] < arrI) {\r\n                    u = c + 1;\r\n                }\r\n                else {\r\n                    v = c;\r\n                }\r\n            }\r\n            if (arrI < arr[result[u]]) {\r\n                if (u > 0) {\r\n                    p[i] = result[u - 1];\r\n                }\r\n                result[u] = i;\r\n            }\r\n        }\r\n    }\r\n    u = result.length;\r\n    v = result[u - 1];\r\n    while (u-- > 0) {\r\n        result[u] = v;\r\n        v = p[v];\r\n    }\r\n    return result;\r\n}\n\nconst isTeleport = (type) => type.__isTeleport;\r\nconst isTeleportDisabled = (props) => props && (props.disabled || props.disabled === '');\r\nconst isTargetSVG = (target) => typeof SVGElement !== 'undefined' && target instanceof SVGElement;\r\nconst resolveTarget = (props, select) => {\r\n    const targetSelector = props && props.to;\r\n    if (isString(targetSelector)) {\r\n        if (!select) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current renderer does not support string target for Teleports. ` +\r\n                    `(missing querySelector renderer option)`);\r\n            return null;\r\n        }\r\n        else {\r\n            const target = select(targetSelector);\r\n            if (!target) {\r\n                (process.env.NODE_ENV !== 'production') &&\r\n                    warn(`Failed to locate Teleport target with selector \"${targetSelector}\". ` +\r\n                        `Note the target element must exist before the component is mounted - ` +\r\n                        `i.e. the target cannot be rendered by the component itself, and ` +\r\n                        `ideally should be outside of the entire Vue component tree.`);\r\n            }\r\n            return target;\r\n        }\r\n    }\r\n    else {\r\n        if ((process.env.NODE_ENV !== 'production') && !targetSelector && !isTeleportDisabled(props)) {\r\n            warn(`Invalid Teleport target: ${targetSelector}`);\r\n        }\r\n        return targetSelector;\r\n    }\r\n};\r\nconst TeleportImpl = {\r\n    __isTeleport: true,\r\n    process(n1, n2, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized, internals) {\r\n        const { mc: mountChildren, pc: patchChildren, pbc: patchBlockChildren, o: { insert, querySelector, createText, createComment } } = internals;\r\n        const disabled = isTeleportDisabled(n2.props);\r\n        let { shapeFlag, children, dynamicChildren } = n2;\r\n        // #3302\r\n        // HMR updated, force full diff\r\n        if ((process.env.NODE_ENV !== 'production') && isHmrUpdating) {\r\n            optimized = false;\r\n            dynamicChildren = null;\r\n        }\r\n        if (n1 == null) {\r\n            // insert anchors in the main view\r\n            const placeholder = (n2.el = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport start')\r\n                : createText(''));\r\n            const mainAnchor = (n2.anchor = (process.env.NODE_ENV !== 'production')\r\n                ? createComment('teleport end')\r\n                : createText(''));\r\n            insert(placeholder, container, anchor);\r\n            insert(mainAnchor, container, anchor);\r\n            const target = (n2.target = resolveTarget(n2.props, querySelector));\r\n            const targetAnchor = (n2.targetAnchor = createText(''));\r\n            if (target) {\r\n                insert(targetAnchor, target);\r\n                // #2652 we could be teleporting from a non-SVG tree into an SVG tree\r\n                isSVG = isSVG || isTargetSVG(target);\r\n            }\r\n            else if ((process.env.NODE_ENV !== 'production') && !disabled) {\r\n                warn('Invalid Teleport target on mount:', target, `(${typeof target})`);\r\n            }\r\n            const mount = (container, anchor) => {\r\n                // Teleport *always* has Array children. This is enforced in both the\r\n                // compiler and vnode children normalization.\r\n                if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                    mountChildren(children, container, anchor, parentComponent, parentSuspense, isSVG, slotScopeIds, optimized);\r\n                }\r\n            };\r\n            if (disabled) {\r\n                mount(container, mainAnchor);\r\n            }\r\n            else if (target) {\r\n                mount(target, targetAnchor);\r\n            }\r\n        }\r\n        else {\r\n            // update content\r\n            n2.el = n1.el;\r\n            const mainAnchor = (n2.anchor = n1.anchor);\r\n            const target = (n2.target = n1.target);\r\n            const targetAnchor = (n2.targetAnchor = n1.targetAnchor);\r\n            const wasDisabled = isTeleportDisabled(n1.props);\r\n            const currentContainer = wasDisabled ? container : target;\r\n            const currentAnchor = wasDisabled ? mainAnchor : targetAnchor;\r\n            isSVG = isSVG || isTargetSVG(target);\r\n            if (dynamicChildren) {\r\n                // fast path when the teleport happens to be a block root\r\n                patchBlockChildren(n1.dynamicChildren, dynamicChildren, currentContainer, parentComponent, parentSuspense, isSVG, slotScopeIds);\r\n                // even in block tree mode we need to make sure all root-level nodes\r\n                // in the teleport inherit previous DOM references so that they can\r\n                // be moved in future patches.\r\n                traverseStaticChildren(n1, n2, true);\r\n            }\r\n            else if (!optimized) {\r\n                patchChildren(n1, n2, currentContainer, currentAnchor, parentComponent, parentSuspense, isSVG, slotScopeIds, false);\r\n            }\r\n            if (disabled) {\r\n                if (!wasDisabled) {\r\n                    // enabled -> disabled\r\n                    // move into main container\r\n                    moveTeleport(n2, container, mainAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n            else {\r\n                // target changed\r\n                if ((n2.props && n2.props.to) !== (n1.props && n1.props.to)) {\r\n                    const nextTarget = (n2.target = resolveTarget(n2.props, querySelector));\r\n                    if (nextTarget) {\r\n                        moveTeleport(n2, nextTarget, null, internals, 0 /* TARGET_CHANGE */);\r\n                    }\r\n                    else if ((process.env.NODE_ENV !== 'production')) {\r\n                        warn('Invalid Teleport target on update:', target, `(${typeof target})`);\r\n                    }\r\n                }\r\n                else if (wasDisabled) {\r\n                    // disabled -> enabled\r\n                    // move into teleport target\r\n                    moveTeleport(n2, target, targetAnchor, internals, 1 /* TOGGLE */);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    remove(vnode, parentComponent, parentSuspense, optimized, { um: unmount, o: { remove: hostRemove } }, doRemove) {\r\n        const { shapeFlag, children, anchor, targetAnchor, target, props } = vnode;\r\n        if (target) {\r\n            hostRemove(targetAnchor);\r\n        }\r\n        // an unmounted teleport should always remove its children if not disabled\r\n        if (doRemove || !isTeleportDisabled(props)) {\r\n            hostRemove(anchor);\r\n            if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n                for (let i = 0; i < children.length; i++) {\r\n                    const child = children[i];\r\n                    unmount(child, parentComponent, parentSuspense, true, !!child.dynamicChildren);\r\n                }\r\n            }\r\n        }\r\n    },\r\n    move: moveTeleport,\r\n    hydrate: hydrateTeleport\r\n};\r\nfunction moveTeleport(vnode, container, parentAnchor, { o: { insert }, m: move }, moveType = 2 /* REORDER */) {\r\n    // move target anchor if this is a target change.\r\n    if (moveType === 0 /* TARGET_CHANGE */) {\r\n        insert(vnode.targetAnchor, container, parentAnchor);\r\n    }\r\n    const { el, anchor, shapeFlag, children, props } = vnode;\r\n    const isReorder = moveType === 2 /* REORDER */;\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(el, container, parentAnchor);\r\n    }\r\n    // if this is a re-order and teleport is enabled (content is in target)\r\n    // do not move children. So the opposite is: only move children if this\r\n    // is not a reorder, or the teleport is disabled\r\n    if (!isReorder || isTeleportDisabled(props)) {\r\n        // Teleport has either Array children or no children.\r\n        if (shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            for (let i = 0; i < children.length; i++) {\r\n                move(children[i], container, parentAnchor, 2 /* REORDER */);\r\n            }\r\n        }\r\n    }\r\n    // move main view anchor if this is a re-order.\r\n    if (isReorder) {\r\n        insert(anchor, container, parentAnchor);\r\n    }\r\n}\r\nfunction hydrateTeleport(node, vnode, parentComponent, parentSuspense, slotScopeIds, optimized, { o: { nextSibling, parentNode, querySelector } }, hydrateChildren) {\r\n    const target = (vnode.target = resolveTarget(vnode.props, querySelector));\r\n    if (target) {\r\n        // if multiple teleports rendered to the same target element, we need to\r\n        // pick up from where the last teleport finished instead of the first node\r\n        const targetNode = target._lpa || target.firstChild;\r\n        if (vnode.shapeFlag & 16 /* ARRAY_CHILDREN */) {\r\n            if (isTeleportDisabled(vnode.props)) {\r\n                vnode.anchor = hydrateChildren(nextSibling(node), vnode, parentNode(node), parentComponent, parentSuspense, slotScopeIds, optimized);\r\n                vnode.targetAnchor = targetNode;\r\n            }\r\n            else {\r\n                vnode.anchor = nextSibling(node);\r\n                vnode.targetAnchor = hydrateChildren(targetNode, vnode, target, parentComponent, parentSuspense, slotScopeIds, optimized);\r\n            }\r\n            target._lpa =\r\n                vnode.targetAnchor && nextSibling(vnode.targetAnchor);\r\n        }\r\n    }\r\n    return vnode.anchor && nextSibling(vnode.anchor);\r\n}\r\n// Force-casted public typing for h and TSX props inference\r\nconst Teleport = TeleportImpl;\n\nconst COMPONENTS = 'components';\r\nconst DIRECTIVES = 'directives';\r\n/**\r\n * @private\r\n */\r\nfunction resolveComponent(name, maybeSelfReference) {\r\n    return resolveAsset(COMPONENTS, name, true, maybeSelfReference) || name;\r\n}\r\nconst NULL_DYNAMIC_COMPONENT = Symbol();\r\n/**\r\n * @private\r\n */\r\nfunction resolveDynamicComponent(component) {\r\n    if (isString(component)) {\r\n        return resolveAsset(COMPONENTS, component, false) || component;\r\n    }\r\n    else {\r\n        // invalid types will fallthrough to createVNode and raise warning\r\n        return (component || NULL_DYNAMIC_COMPONENT);\r\n    }\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction resolveDirective(name) {\r\n    return resolveAsset(DIRECTIVES, name);\r\n}\r\n// implementation\r\nfunction resolveAsset(type, name, warnMissing = true, maybeSelfReference = false) {\r\n    const instance = currentRenderingInstance || currentInstance;\r\n    if (instance) {\r\n        const Component = instance.type;\r\n        // explicit self name has highest priority\r\n        if (type === COMPONENTS) {\r\n            const selfName = getComponentName(Component);\r\n            if (selfName &&\r\n                (selfName === name ||\r\n                    selfName === camelize(name) ||\r\n                    selfName === capitalize(camelize(name)))) {\r\n                return Component;\r\n            }\r\n        }\r\n        const res = \r\n        // local registration\r\n        // check instance[type] first which is resolved for options API\r\n        resolve(instance[type] || Component[type], name) ||\r\n            // global registration\r\n            resolve(instance.appContext[type], name);\r\n        if (!res && maybeSelfReference) {\r\n            // fallback to implicit self-reference\r\n            return Component;\r\n        }\r\n        if ((process.env.NODE_ENV !== 'production') && warnMissing && !res) {\r\n            warn(`Failed to resolve ${type.slice(0, -1)}: ${name}`);\r\n        }\r\n        return res;\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`resolve${capitalize(type.slice(0, -1))} ` +\r\n            `can only be used in render() or setup().`);\r\n    }\r\n}\r\nfunction resolve(registry, name) {\r\n    return (registry &&\r\n        (registry[name] ||\r\n            registry[camelize(name)] ||\r\n            registry[capitalize(camelize(name))]));\r\n}\n\nconst Fragment = Symbol((process.env.NODE_ENV !== 'production') ? 'Fragment' : undefined);\r\nconst Text = Symbol((process.env.NODE_ENV !== 'production') ? 'Text' : undefined);\r\nconst Comment$1 = Symbol((process.env.NODE_ENV !== 'production') ? 'Comment' : undefined);\r\nconst Static = Symbol((process.env.NODE_ENV !== 'production') ? 'Static' : undefined);\r\n// Since v-if and v-for are the two possible ways node structure can dynamically\r\n// change, once we consider v-if branches and each v-for fragment a block, we\r\n// can divide a template into nested blocks, and within each block the node\r\n// structure would be stable. This allows us to skip most children diffing\r\n// and only worry about the dynamic nodes (indicated by patch flags).\r\nconst blockStack = [];\r\nlet currentBlock = null;\r\n/**\r\n * Open a block.\r\n * This must be called before `createBlock`. It cannot be part of `createBlock`\r\n * because the children of the block are evaluated before `createBlock` itself\r\n * is called. The generated code typically looks like this:\r\n *\r\n * ```js\r\n * function render() {\r\n *   return (openBlock(),createBlock('div', null, [...]))\r\n * }\r\n * ```\r\n * disableTracking is true when creating a v-for fragment block, since a v-for\r\n * fragment always diffs its children.\r\n *\r\n * @private\r\n */\r\nfunction openBlock(disableTracking = false) {\r\n    blockStack.push((currentBlock = disableTracking ? null : []));\r\n}\r\nfunction closeBlock() {\r\n    blockStack.pop();\r\n    currentBlock = blockStack[blockStack.length - 1] || null;\r\n}\r\n// Whether we should be tracking dynamic child nodes inside a block.\r\n// Only tracks when this value is > 0\r\n// We are not using a simple boolean because this value may need to be\r\n// incremented/decremented by nested usage of v-once (see below)\r\nlet isBlockTreeEnabled = 1;\r\n/**\r\n * Block tracking sometimes needs to be disabled, for example during the\r\n * creation of a tree that needs to be cached by v-once. The compiler generates\r\n * code like this:\r\n *\r\n * ``` js\r\n * _cache[1] || (\r\n *   setBlockTracking(-1),\r\n *   _cache[1] = createVNode(...),\r\n *   setBlockTracking(1),\r\n *   _cache[1]\r\n * )\r\n * ```\r\n *\r\n * @private\r\n */\r\nfunction setBlockTracking(value) {\r\n    isBlockTreeEnabled += value;\r\n}\r\n/**\r\n * Create a block root vnode. Takes the same exact arguments as `createVNode`.\r\n * A block root keeps track of dynamic nodes within the block in the\r\n * `dynamicChildren` array.\r\n *\r\n * @private\r\n */\r\nfunction createBlock(type, props, children, patchFlag, dynamicProps) {\r\n    const vnode = createVNode(type, props, children, patchFlag, dynamicProps, true /* isBlock: prevent a block from tracking itself */);\r\n    // save current block children on the block vnode\r\n    vnode.dynamicChildren =\r\n        isBlockTreeEnabled > 0 ? currentBlock || EMPTY_ARR : null;\r\n    // close block\r\n    closeBlock();\r\n    // a block is always going to be patched, so track it as a child of its\r\n    // parent block\r\n    if (isBlockTreeEnabled > 0 && currentBlock) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction isVNode(value) {\r\n    return value ? value.__v_isVNode === true : false;\r\n}\r\nfunction isSameVNodeType(n1, n2) {\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        n2.shapeFlag & 6 /* COMPONENT */ &&\r\n        hmrDirtyComponents.has(n2.type)) {\r\n        // HMR only: if the component has been hot-updated, force a reload.\r\n        return false;\r\n    }\r\n    return n1.type === n2.type && n1.key === n2.key;\r\n}\r\nlet vnodeArgsTransformer;\r\n/**\r\n * Internal API for registering an arguments transform for createVNode\r\n * used for creating stubs in the test-utils\r\n * It is *internal* but needs to be exposed for test-utils to pick up proper\r\n * typings\r\n */\r\nfunction transformVNodeArgs(transformer) {\r\n    vnodeArgsTransformer = transformer;\r\n}\r\nconst createVNodeWithArgsTransform = (...args) => {\r\n    return _createVNode(...(vnodeArgsTransformer\r\n        ? vnodeArgsTransformer(args, currentRenderingInstance)\r\n        : args));\r\n};\r\nconst InternalObjectKey = `__vInternal`;\r\nconst normalizeKey = ({ key }) => key != null ? key : null;\r\nconst normalizeRef = ({ ref }) => {\r\n    return (ref != null\r\n        ? isString(ref) || isRef(ref) || isFunction$1(ref)\r\n            ? { i: currentRenderingInstance, r: ref }\r\n            : ref\r\n        : null);\r\n};\r\nconst createVNode = ((process.env.NODE_ENV !== 'production')\r\n    ? createVNodeWithArgsTransform\r\n    : _createVNode);\r\nfunction _createVNode(type, props = null, children = null, patchFlag = 0, dynamicProps = null, isBlockNode = false) {\r\n    if (!type || type === NULL_DYNAMIC_COMPONENT) {\r\n        if ((process.env.NODE_ENV !== 'production') && !type) {\r\n            warn(`Invalid vnode type when creating vnode: ${type}.`);\r\n        }\r\n        type = Comment$1;\r\n    }\r\n    if (isVNode(type)) {\r\n        // createVNode receiving an existing vnode. This happens in cases like\r\n        // <component :is=\"vnode\"/>\r\n        // #2078 make sure to merge refs during the clone instead of overwriting it\r\n        const cloned = cloneVNode(type, props, true /* mergeRef: true */);\r\n        if (children) {\r\n            normalizeChildren(cloned, children);\r\n        }\r\n        return cloned;\r\n    }\r\n    // class component normalization.\r\n    if (isClassComponent(type)) {\r\n        type = type.__vccOpts;\r\n    }\r\n    // class & style normalization.\r\n    if (props) {\r\n        // for reactive or proxy objects, we need to clone it to enable mutation.\r\n        if (isProxy(props) || InternalObjectKey in props) {\r\n            props = extend({}, props);\r\n        }\r\n        let { class: klass, style } = props;\r\n        if (klass && !isString(klass)) {\r\n            props.class = normalizeClass(klass);\r\n        }\r\n        if (isObject$1(style)) {\r\n            // reactive state objects need to be cloned since they are likely to be\r\n            // mutated\r\n            if (isProxy(style) && !isArray(style)) {\r\n                style = extend({}, style);\r\n            }\r\n            props.style = normalizeStyle(style);\r\n        }\r\n    }\r\n    // encode the vnode type information into a bitmap\r\n    const shapeFlag = isString(type)\r\n        ? 1 /* ELEMENT */\r\n        : isSuspense(type)\r\n            ? 128 /* SUSPENSE */\r\n            : isTeleport(type)\r\n                ? 64 /* TELEPORT */\r\n                : isObject$1(type)\r\n                    ? 4 /* STATEFUL_COMPONENT */\r\n                    : isFunction$1(type)\r\n                        ? 2 /* FUNCTIONAL_COMPONENT */\r\n                        : 0;\r\n    if ((process.env.NODE_ENV !== 'production') && shapeFlag & 4 /* STATEFUL_COMPONENT */ && isProxy(type)) {\r\n        type = toRaw(type);\r\n        warn(`Vue received a Component which was made a reactive object. This can ` +\r\n            `lead to unnecessary performance overhead, and should be avoided by ` +\r\n            `marking the component with \\`markRaw\\` or using \\`shallowRef\\` ` +\r\n            `instead of \\`ref\\`.`, `\\nComponent that was made reactive: `, type);\r\n    }\r\n    const vnode = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type,\r\n        props,\r\n        key: props && normalizeKey(props),\r\n        ref: props && normalizeRef(props),\r\n        scopeId: currentScopeId,\r\n        slotScopeIds: null,\r\n        children: null,\r\n        component: null,\r\n        suspense: null,\r\n        ssContent: null,\r\n        ssFallback: null,\r\n        dirs: null,\r\n        transition: null,\r\n        el: null,\r\n        anchor: null,\r\n        target: null,\r\n        targetAnchor: null,\r\n        shapeFlag,\r\n        patchFlag,\r\n        dynamicProps,\r\n        dynamicChildren: null,\r\n        appContext: null\r\n    };\r\n    // validate key\r\n    if ((process.env.NODE_ENV !== 'production') && vnode.key !== vnode.key) {\r\n        warn(`VNode created with invalid key (NaN). VNode type:`, vnode.type);\r\n    }\r\n    normalizeChildren(vnode, children);\r\n    // normalize suspense children\r\n    if (shapeFlag & 128 /* SUSPENSE */) {\r\n        type.normalize(vnode);\r\n    }\r\n    if (isBlockTreeEnabled > 0 &&\r\n        // avoid a block node from tracking itself\r\n        !isBlockNode &&\r\n        // has current parent block\r\n        currentBlock &&\r\n        // presence of a patch flag indicates this node needs patching on updates.\r\n        // component nodes also should always be patched, because even if the\r\n        // component doesn't need to update, it needs to persist the instance on to\r\n        // the next vnode so that it can be properly unmounted later.\r\n        (patchFlag > 0 || shapeFlag & 6 /* COMPONENT */) &&\r\n        // the EVENTS flag is only for hydration and if it is the only flag, the\r\n        // vnode should not be considered dynamic due to handler caching.\r\n        patchFlag !== 32 /* HYDRATE_EVENTS */) {\r\n        currentBlock.push(vnode);\r\n    }\r\n    return vnode;\r\n}\r\nfunction cloneVNode(vnode, extraProps, mergeRef = false) {\r\n    // This is intentionally NOT using spread or extend to avoid the runtime\r\n    // key enumeration cost.\r\n    const { props, ref, patchFlag, children } = vnode;\r\n    const mergedProps = extraProps ? mergeProps(props || {}, extraProps) : props;\r\n    const cloned = {\r\n        __v_isVNode: true,\r\n        __v_skip: true,\r\n        type: vnode.type,\r\n        props: mergedProps,\r\n        key: mergedProps && normalizeKey(mergedProps),\r\n        ref: extraProps && extraProps.ref\r\n            ? // #2078 in the case of <component :is=\"vnode\" ref=\"extra\"/>\r\n                // if the vnode itself already has a ref, cloneVNode will need to merge\r\n                // the refs so the single vnode can be set on multiple refs\r\n                mergeRef && ref\r\n                    ? isArray(ref)\r\n                        ? ref.concat(normalizeRef(extraProps))\r\n                        : [ref, normalizeRef(extraProps)]\r\n                    : normalizeRef(extraProps)\r\n            : ref,\r\n        scopeId: vnode.scopeId,\r\n        slotScopeIds: vnode.slotScopeIds,\r\n        children: (process.env.NODE_ENV !== 'production') && patchFlag === -1 /* HOISTED */ && isArray(children)\r\n            ? children.map(deepCloneVNode)\r\n            : children,\r\n        target: vnode.target,\r\n        targetAnchor: vnode.targetAnchor,\r\n        staticCount: vnode.staticCount,\r\n        staticCache: vnode.staticCache,\r\n        shapeFlag: vnode.shapeFlag,\r\n        // if the vnode is cloned with extra props, we can no longer assume its\r\n        // existing patch flag to be reliable and need to add the FULL_PROPS flag.\r\n        // note: perserve flag for fragments since they use the flag for children\r\n        // fast paths only.\r\n        patchFlag: extraProps && vnode.type !== Fragment\r\n            ? patchFlag === -1 // hoisted node\r\n                ? 16 /* FULL_PROPS */\r\n                : patchFlag | 16 /* FULL_PROPS */\r\n            : patchFlag,\r\n        dynamicProps: vnode.dynamicProps,\r\n        dynamicChildren: vnode.dynamicChildren,\r\n        appContext: vnode.appContext,\r\n        dirs: vnode.dirs,\r\n        transition: vnode.transition,\r\n        // These should technically only be non-null on mounted VNodes. However,\r\n        // they *should* be copied for kept-alive vnodes. So we just always copy\r\n        // them since them being non-null during a mount doesn't affect the logic as\r\n        // they will simply be overwritten.\r\n        component: vnode.component,\r\n        suspense: vnode.suspense,\r\n        ssContent: vnode.ssContent && cloneVNode(vnode.ssContent),\r\n        ssFallback: vnode.ssFallback && cloneVNode(vnode.ssFallback),\r\n        el: vnode.el,\r\n        anchor: vnode.anchor\r\n    };\r\n    return cloned;\r\n}\r\n/**\r\n * Dev only, for HMR of hoisted vnodes reused in v-for\r\n * https://github.com/vitejs/vite/issues/2022\r\n */\r\nfunction deepCloneVNode(vnode) {\r\n    const cloned = cloneVNode(vnode);\r\n    if (isArray(vnode.children)) {\r\n        cloned.children = vnode.children.map(deepCloneVNode);\r\n    }\r\n    return cloned;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createTextVNode(text = ' ', flag = 0) {\r\n    return createVNode(Text, null, text, flag);\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createStaticVNode(content, numberOfNodes) {\r\n    // A static vnode can contain multiple stringified elements, and the number\r\n    // of elements is necessary for hydration.\r\n    const vnode = createVNode(Static, null, content);\r\n    vnode.staticCount = numberOfNodes;\r\n    return vnode;\r\n}\r\n/**\r\n * @private\r\n */\r\nfunction createCommentVNode(text = '', \r\n// when used as the v-else branch, the comment node must be created as a\r\n// block to ensure correct updates.\r\nasBlock = false) {\r\n    return asBlock\r\n        ? (openBlock(), createBlock(Comment$1, null, text))\r\n        : createVNode(Comment$1, null, text);\r\n}\r\nfunction normalizeVNode(child) {\r\n    if (child == null || typeof child === 'boolean') {\r\n        // empty placeholder\r\n        return createVNode(Comment$1);\r\n    }\r\n    else if (isArray(child)) {\r\n        // fragment\r\n        return createVNode(Fragment, null, \r\n        // #3666, avoid reference pollution when reusing vnode\r\n        child.slice());\r\n    }\r\n    else if (typeof child === 'object') {\r\n        // already vnode, this should be the most common since compiled templates\r\n        // always produce all-vnode children arrays\r\n        return cloneIfMounted(child);\r\n    }\r\n    else {\r\n        // strings and numbers\r\n        return createVNode(Text, null, String(child));\r\n    }\r\n}\r\n// optimized normalization for template-compiled render fns\r\nfunction cloneIfMounted(child) {\r\n    return child.el === null ? child : cloneVNode(child);\r\n}\r\nfunction normalizeChildren(vnode, children) {\r\n    let type = 0;\r\n    const { shapeFlag } = vnode;\r\n    if (children == null) {\r\n        children = null;\r\n    }\r\n    else if (isArray(children)) {\r\n        type = 16 /* ARRAY_CHILDREN */;\r\n    }\r\n    else if (typeof children === 'object') {\r\n        if (shapeFlag & 1 /* ELEMENT */ || shapeFlag & 64 /* TELEPORT */) {\r\n            // Normalize slot to plain children for plain element and Teleport\r\n            const slot = children.default;\r\n            if (slot) {\r\n                // _c marker is added by withCtx() indicating this is a compiled slot\r\n                slot._c && (slot._d = false);\r\n                normalizeChildren(vnode, slot());\r\n                slot._c && (slot._d = true);\r\n            }\r\n            return;\r\n        }\r\n        else {\r\n            type = 32 /* SLOTS_CHILDREN */;\r\n            const slotFlag = children._;\r\n            if (!slotFlag && !(InternalObjectKey in children)) {\r\n                children._ctx = currentRenderingInstance;\r\n            }\r\n            else if (slotFlag === 3 /* FORWARDED */ && currentRenderingInstance) {\r\n                // a child component receives forwarded slots from the parent.\r\n                // its slot type is determined by its parent's slot type.\r\n                if (currentRenderingInstance.slots._ === 1 /* STABLE */) {\r\n                    children._ = 1 /* STABLE */;\r\n                }\r\n                else {\r\n                    children._ = 2 /* DYNAMIC */;\r\n                    vnode.patchFlag |= 1024 /* DYNAMIC_SLOTS */;\r\n                }\r\n            }\r\n        }\r\n    }\r\n    else if (isFunction$1(children)) {\r\n        children = { default: children, _ctx: currentRenderingInstance };\r\n        type = 32 /* SLOTS_CHILDREN */;\r\n    }\r\n    else {\r\n        children = String(children);\r\n        // force teleport children to array so it can be moved around\r\n        if (shapeFlag & 64 /* TELEPORT */) {\r\n            type = 16 /* ARRAY_CHILDREN */;\r\n            children = [createTextVNode(children)];\r\n        }\r\n        else {\r\n            type = 8 /* TEXT_CHILDREN */;\r\n        }\r\n    }\r\n    vnode.children = children;\r\n    vnode.shapeFlag |= type;\r\n}\r\nfunction mergeProps(...args) {\r\n    const ret = extend({}, args[0]);\r\n    for (let i = 1; i < args.length; i++) {\r\n        const toMerge = args[i];\r\n        for (const key in toMerge) {\r\n            if (key === 'class') {\r\n                if (ret.class !== toMerge.class) {\r\n                    ret.class = normalizeClass([ret.class, toMerge.class]);\r\n                }\r\n            }\r\n            else if (key === 'style') {\r\n                ret.style = normalizeStyle([ret.style, toMerge.style]);\r\n            }\r\n            else if (isOn(key)) {\r\n                const existing = ret[key];\r\n                const incoming = toMerge[key];\r\n                if (existing !== incoming) {\r\n                    ret[key] = existing\r\n                        ? [].concat(existing, incoming)\r\n                        : incoming;\r\n                }\r\n            }\r\n            else if (key !== '') {\r\n                ret[key] = toMerge[key];\r\n            }\r\n        }\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Actual implementation\r\n */\r\nfunction renderList(source, renderItem) {\r\n    let ret;\r\n    if (isArray(source) || isString(source)) {\r\n        ret = new Array(source.length);\r\n        for (let i = 0, l = source.length; i < l; i++) {\r\n            ret[i] = renderItem(source[i], i);\r\n        }\r\n    }\r\n    else if (typeof source === 'number') {\r\n        if ((process.env.NODE_ENV !== 'production') && !Number.isInteger(source)) {\r\n            warn(`The v-for range expect an integer value but got ${source}.`);\r\n            return [];\r\n        }\r\n        ret = new Array(source);\r\n        for (let i = 0; i < source; i++) {\r\n            ret[i] = renderItem(i + 1, i);\r\n        }\r\n    }\r\n    else if (isObject$1(source)) {\r\n        if (source[Symbol.iterator]) {\r\n            ret = Array.from(source, renderItem);\r\n        }\r\n        else {\r\n            const keys = Object.keys(source);\r\n            ret = new Array(keys.length);\r\n            for (let i = 0, l = keys.length; i < l; i++) {\r\n                const key = keys[i];\r\n                ret[i] = renderItem(source[key], key, i);\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        ret = [];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * Compiler runtime helper for creating dynamic slots object\r\n * @private\r\n */\r\nfunction createSlots(slots, dynamicSlots) {\r\n    for (let i = 0; i < dynamicSlots.length; i++) {\r\n        const slot = dynamicSlots[i];\r\n        // array of dynamic slot generated by <template v-for=\"...\" #[...]>\r\n        if (isArray(slot)) {\r\n            for (let j = 0; j < slot.length; j++) {\r\n                slots[slot[j].name] = slot[j].fn;\r\n            }\r\n        }\r\n        else if (slot) {\r\n            // conditional single slot generated by <template v-if=\"...\" #foo>\r\n            slots[slot.name] = slot.fn;\r\n        }\r\n    }\r\n    return slots;\r\n}\n\n/**\r\n * Compiler runtime helper for rendering `<slot/>`\r\n * @private\r\n */\r\nfunction renderSlot(slots, name, props = {}, \r\n// this is not a user-facing function, so the fallback is always generated by\r\n// the compiler and guaranteed to be a function returning an array\r\nfallback, noSlotted) {\r\n    let slot = slots[name];\r\n    if ((process.env.NODE_ENV !== 'production') && slot && slot.length > 1) {\r\n        warn(`SSR-optimized slot function detected in a non-SSR-optimized render ` +\r\n            `function. You need to mark this component with $dynamic-slots in the ` +\r\n            `parent template.`);\r\n        slot = () => [];\r\n    }\r\n    // a compiled slot disables block tracking by default to avoid manual\r\n    // invocation interfering with template-based block tracking, but in\r\n    // `renderSlot` we can be sure that it's template-based so we can force\r\n    // enable it.\r\n    if (slot && slot._c) {\r\n        slot._d = false;\r\n    }\r\n    openBlock();\r\n    const validSlotContent = slot && ensureValidVNode(slot(props));\r\n    const rendered = createBlock(Fragment, { key: props.key || `_${name}` }, validSlotContent || (fallback ? fallback() : []), validSlotContent && slots._ === 1 /* STABLE */\r\n        ? 64 /* STABLE_FRAGMENT */\r\n        : -2 /* BAIL */);\r\n    if (!noSlotted && rendered.scopeId) {\r\n        rendered.slotScopeIds = [rendered.scopeId + '-s'];\r\n    }\r\n    if (slot && slot._c) {\r\n        slot._d = true;\r\n    }\r\n    return rendered;\r\n}\r\nfunction ensureValidVNode(vnodes) {\r\n    return vnodes.some(child => {\r\n        if (!isVNode(child))\r\n            return true;\r\n        if (child.type === Comment$1)\r\n            return false;\r\n        if (child.type === Fragment &&\r\n            !ensureValidVNode(child.children))\r\n            return false;\r\n        return true;\r\n    })\r\n        ? vnodes\r\n        : null;\r\n}\n\n/**\r\n * For prefixing keys in v-on=\"obj\" with \"on\"\r\n * @private\r\n */\r\nfunction toHandlers(obj) {\r\n    const ret = {};\r\n    if ((process.env.NODE_ENV !== 'production') && !isObject$1(obj)) {\r\n        warn(`v-on with no argument expects an object value.`);\r\n        return ret;\r\n    }\r\n    for (const key in obj) {\r\n        ret[toHandlerKey(key)] = obj[key];\r\n    }\r\n    return ret;\r\n}\n\n/**\r\n * #2437 In Vue 3, functional components do not have a public instance proxy but\r\n * they exist in the internal parent chain. For code that relies on traversing\r\n * public $parent chains, skip functional ones and go to the parent instead.\r\n */\r\nconst getPublicInstance = (i) => {\r\n    if (!i)\r\n        return null;\r\n    if (isStatefulComponent(i))\r\n        return getExposeProxy(i) || i.proxy;\r\n    return getPublicInstance(i.parent);\r\n};\r\nconst publicPropertiesMap = extend(Object.create(null), {\r\n    $: i => i,\r\n    $el: i => i.vnode.el,\r\n    $data: i => i.data,\r\n    $props: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.props) : i.props),\r\n    $attrs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.attrs) : i.attrs),\r\n    $slots: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.slots) : i.slots),\r\n    $refs: i => ((process.env.NODE_ENV !== 'production') ? shallowReadonly(i.refs) : i.refs),\r\n    $parent: i => getPublicInstance(i.parent),\r\n    $root: i => getPublicInstance(i.root),\r\n    $emit: i => i.emit,\r\n    $options: i => (__VUE_OPTIONS_API__ ? resolveMergedOptions(i) : i.type),\r\n    $forceUpdate: i => () => queueJob(i.update),\r\n    $nextTick: i => nextTick.bind(i.proxy),\r\n    $watch: i => (__VUE_OPTIONS_API__ ? instanceWatch.bind(i) : NOOP)\r\n});\r\nconst PublicInstanceProxyHandlers = {\r\n    get({ _: instance }, key) {\r\n        const { ctx, setupState, data, props, accessCache, type, appContext } = instance;\r\n        // for internal formatters to know that this is a Vue instance\r\n        if ((process.env.NODE_ENV !== 'production') && key === '__isVue') {\r\n            return true;\r\n        }\r\n        // prioritize <script setup> bindings during dev.\r\n        // this allows even properties that start with _ or $ to be used - so that\r\n        // it aligns with the production behavior where the render fn is inlined and\r\n        // indeed has access to all declared variables.\r\n        if ((process.env.NODE_ENV !== 'production') &&\r\n            setupState !== EMPTY_OBJ &&\r\n            setupState.__isScriptSetup &&\r\n            hasOwn(setupState, key)) {\r\n            return setupState[key];\r\n        }\r\n        // data / props / ctx\r\n        // This getter gets called for every property access on the render context\r\n        // during render and is a major hotspot. The most expensive part of this\r\n        // is the multiple hasOwn() calls. It's much faster to do a simple property\r\n        // access on a plain object, so we use an accessCache object (with null\r\n        // prototype) to memoize what access type a key corresponds to.\r\n        let normalizedProps;\r\n        if (key[0] !== '$') {\r\n            const n = accessCache[key];\r\n            if (n !== undefined) {\r\n                switch (n) {\r\n                    case 0 /* SETUP */:\r\n                        return setupState[key];\r\n                    case 1 /* DATA */:\r\n                        return data[key];\r\n                    case 3 /* CONTEXT */:\r\n                        return ctx[key];\r\n                    case 2 /* PROPS */:\r\n                        return props[key];\r\n                    // default: just fallthrough\r\n                }\r\n            }\r\n            else if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n                accessCache[key] = 0 /* SETUP */;\r\n                return setupState[key];\r\n            }\r\n            else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n                accessCache[key] = 1 /* DATA */;\r\n                return data[key];\r\n            }\r\n            else if (\r\n            // only cache other properties when instance has declared (thus stable)\r\n            // props\r\n            (normalizedProps = instance.propsOptions[0]) &&\r\n                hasOwn(normalizedProps, key)) {\r\n                accessCache[key] = 2 /* PROPS */;\r\n                return props[key];\r\n            }\r\n            else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n                accessCache[key] = 3 /* CONTEXT */;\r\n                return ctx[key];\r\n            }\r\n            else if (!__VUE_OPTIONS_API__ || shouldCacheAccess) {\r\n                accessCache[key] = 4 /* OTHER */;\r\n            }\r\n        }\r\n        const publicGetter = publicPropertiesMap[key];\r\n        let cssModule, globalProperties;\r\n        // public $xxx properties\r\n        if (publicGetter) {\r\n            if (key === '$attrs') {\r\n                track(instance, \"get\" /* GET */, key);\r\n                (process.env.NODE_ENV !== 'production') && markAttrsAccessed();\r\n            }\r\n            return publicGetter(instance);\r\n        }\r\n        else if (\r\n        // css module (injected by vue-loader)\r\n        (cssModule = type.__cssModules) &&\r\n            (cssModule = cssModule[key])) {\r\n            return cssModule;\r\n        }\r\n        else if (ctx !== EMPTY_OBJ && hasOwn(ctx, key)) {\r\n            // user may set custom properties to `this` that start with `$`\r\n            accessCache[key] = 3 /* CONTEXT */;\r\n            return ctx[key];\r\n        }\r\n        else if (\r\n        // global properties\r\n        ((globalProperties = appContext.config.globalProperties),\r\n            hasOwn(globalProperties, key))) {\r\n            {\r\n                return globalProperties[key];\r\n            }\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production') &&\r\n            currentRenderingInstance &&\r\n            (!isString(key) ||\r\n                // #1091 avoid internal isRef/isVNode checks on component instance leading\r\n                // to infinite warning loop\r\n                key.indexOf('__v') !== 0)) {\r\n            if (data !== EMPTY_OBJ &&\r\n                (key[0] === '$' || key[0] === '_') &&\r\n                hasOwn(data, key)) {\r\n                warn(`Property ${JSON.stringify(key)} must be accessed via $data because it starts with a reserved ` +\r\n                    `character (\"$\" or \"_\") and is not proxied on the render context.`);\r\n            }\r\n            else if (instance === currentRenderingInstance) {\r\n                warn(`Property ${JSON.stringify(key)} was accessed during render ` +\r\n                    `but is not defined on instance.`);\r\n            }\r\n        }\r\n    },\r\n    set({ _: instance }, key, value) {\r\n        const { data, setupState, ctx } = instance;\r\n        if (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) {\r\n            setupState[key] = value;\r\n        }\r\n        else if (data !== EMPTY_OBJ && hasOwn(data, key)) {\r\n            data[key] = value;\r\n        }\r\n        else if (hasOwn(instance.props, key)) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate prop \"${key}\". Props are readonly.`, instance);\r\n            return false;\r\n        }\r\n        if (key[0] === '$' && key.slice(1) in instance) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Attempting to mutate public property \"${key}\". ` +\r\n                    `Properties starting with $ are reserved and readonly.`, instance);\r\n            return false;\r\n        }\r\n        else {\r\n            if ((process.env.NODE_ENV !== 'production') && key in instance.appContext.config.globalProperties) {\r\n                Object.defineProperty(ctx, key, {\r\n                    enumerable: true,\r\n                    configurable: true,\r\n                    value\r\n                });\r\n            }\r\n            else {\r\n                ctx[key] = value;\r\n            }\r\n        }\r\n        return true;\r\n    },\r\n    has({ _: { data, setupState, accessCache, ctx, appContext, propsOptions } }, key) {\r\n        let normalizedProps;\r\n        return (accessCache[key] !== undefined ||\r\n            (data !== EMPTY_OBJ && hasOwn(data, key)) ||\r\n            (setupState !== EMPTY_OBJ && hasOwn(setupState, key)) ||\r\n            ((normalizedProps = propsOptions[0]) && hasOwn(normalizedProps, key)) ||\r\n            hasOwn(ctx, key) ||\r\n            hasOwn(publicPropertiesMap, key) ||\r\n            hasOwn(appContext.config.globalProperties, key));\r\n    }\r\n};\r\nif ((process.env.NODE_ENV !== 'production') && !false) {\r\n    PublicInstanceProxyHandlers.ownKeys = (target) => {\r\n        warn(`Avoid app logic that relies on enumerating keys on a component instance. ` +\r\n            `The keys will be empty in production mode to avoid performance overhead.`);\r\n        return Reflect.ownKeys(target);\r\n    };\r\n}\r\nconst RuntimeCompiledPublicInstanceProxyHandlers = extend({}, PublicInstanceProxyHandlers, {\r\n    get(target, key) {\r\n        // fast path for unscopables when using `with` block\r\n        if (key === Symbol.unscopables) {\r\n            return;\r\n        }\r\n        return PublicInstanceProxyHandlers.get(target, key, target);\r\n    },\r\n    has(_, key) {\r\n        const has = key[0] !== '_' && !isGloballyWhitelisted(key);\r\n        if ((process.env.NODE_ENV !== 'production') && !has && PublicInstanceProxyHandlers.has(_, key)) {\r\n            warn(`Property ${JSON.stringify(key)} should not start with _ which is a reserved prefix for Vue internals.`);\r\n        }\r\n        return has;\r\n    }\r\n});\r\n// In dev mode, the proxy target exposes the same properties as seen on `this`\r\n// for easier console inspection. In prod mode it will be an empty object so\r\n// these properties definitions can be skipped.\r\nfunction createRenderContext(instance) {\r\n    const target = {};\r\n    // expose internal instance for proxy handlers\r\n    Object.defineProperty(target, `_`, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        get: () => instance\r\n    });\r\n    // expose public properties\r\n    Object.keys(publicPropertiesMap).forEach(key => {\r\n        Object.defineProperty(target, key, {\r\n            configurable: true,\r\n            enumerable: false,\r\n            get: () => publicPropertiesMap[key](instance),\r\n            // intercepted by the proxy so no need for implementation,\r\n            // but needed to prevent set errors\r\n            set: NOOP\r\n        });\r\n    });\r\n    return target;\r\n}\r\n// dev only\r\nfunction exposePropsOnRenderContext(instance) {\r\n    const { ctx, propsOptions: [propsOptions] } = instance;\r\n    if (propsOptions) {\r\n        Object.keys(propsOptions).forEach(key => {\r\n            Object.defineProperty(ctx, key, {\r\n                enumerable: true,\r\n                configurable: true,\r\n                get: () => instance.props[key],\r\n                set: NOOP\r\n            });\r\n        });\r\n    }\r\n}\r\n// dev only\r\nfunction exposeSetupStateOnRenderContext(instance) {\r\n    const { ctx, setupState } = instance;\r\n    Object.keys(toRaw(setupState)).forEach(key => {\r\n        if (!setupState.__isScriptSetup && (key[0] === '$' || key[0] === '_')) {\r\n            warn(`setup() return property ${JSON.stringify(key)} should not start with \"$\" or \"_\" ` +\r\n                `which are reserved prefixes for Vue internals.`);\r\n            return;\r\n        }\r\n        Object.defineProperty(ctx, key, {\r\n            enumerable: true,\r\n            configurable: true,\r\n            get: () => setupState[key],\r\n            set: NOOP\r\n        });\r\n    });\r\n}\n\nconst emptyAppContext = createAppContext();\r\nlet uid$1 = 0;\r\nfunction createComponentInstance(vnode, parent, suspense) {\r\n    const type = vnode.type;\r\n    // inherit parent app context - or - if root, adopt from root vnode\r\n    const appContext = (parent ? parent.appContext : vnode.appContext) || emptyAppContext;\r\n    const instance = {\r\n        uid: uid$1++,\r\n        vnode,\r\n        type,\r\n        parent,\r\n        appContext,\r\n        root: null,\r\n        next: null,\r\n        subTree: null,\r\n        update: null,\r\n        render: null,\r\n        proxy: null,\r\n        exposed: null,\r\n        exposeProxy: null,\r\n        withProxy: null,\r\n        effects: null,\r\n        provides: parent ? parent.provides : Object.create(appContext.provides),\r\n        accessCache: null,\r\n        renderCache: [],\r\n        // local resovled assets\r\n        components: null,\r\n        directives: null,\r\n        // resolved props and emits options\r\n        propsOptions: normalizePropsOptions(type, appContext),\r\n        emitsOptions: normalizeEmitsOptions(type, appContext),\r\n        // emit\r\n        emit: null,\r\n        emitted: null,\r\n        // props default value\r\n        propsDefaults: EMPTY_OBJ,\r\n        // inheritAttrs\r\n        inheritAttrs: type.inheritAttrs,\r\n        // state\r\n        ctx: EMPTY_OBJ,\r\n        data: EMPTY_OBJ,\r\n        props: EMPTY_OBJ,\r\n        attrs: EMPTY_OBJ,\r\n        slots: EMPTY_OBJ,\r\n        refs: EMPTY_OBJ,\r\n        setupState: EMPTY_OBJ,\r\n        setupContext: null,\r\n        // suspense related\r\n        suspense,\r\n        suspenseId: suspense ? suspense.pendingId : 0,\r\n        asyncDep: null,\r\n        asyncResolved: false,\r\n        // lifecycle hooks\r\n        // not using enums here because it results in computed properties\r\n        isMounted: false,\r\n        isUnmounted: false,\r\n        isDeactivated: false,\r\n        bc: null,\r\n        c: null,\r\n        bm: null,\r\n        m: null,\r\n        bu: null,\r\n        u: null,\r\n        um: null,\r\n        bum: null,\r\n        da: null,\r\n        a: null,\r\n        rtg: null,\r\n        rtc: null,\r\n        ec: null,\r\n        sp: null\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        instance.ctx = createRenderContext(instance);\r\n    }\r\n    else {\r\n        instance.ctx = { _: instance };\r\n    }\r\n    instance.root = parent ? parent.root : instance;\r\n    instance.emit = emit.bind(null, instance);\r\n    return instance;\r\n}\r\nlet currentInstance = null;\r\nconst getCurrentInstance = () => currentInstance || currentRenderingInstance;\r\nconst setCurrentInstance = (instance) => {\r\n    currentInstance = instance;\r\n};\r\nconst isBuiltInTag = /*#__PURE__*/ makeMap('slot,component');\r\nfunction validateComponentName(name, config) {\r\n    const appIsNativeTag = config.isNativeTag || NO;\r\n    if (isBuiltInTag(name) || appIsNativeTag(name)) {\r\n        warn('Do not use built-in or reserved HTML elements as component id: ' + name);\r\n    }\r\n}\r\nfunction isStatefulComponent(instance) {\r\n    return instance.vnode.shapeFlag & 4 /* STATEFUL_COMPONENT */;\r\n}\r\nlet isInSSRComponentSetup = false;\r\nfunction setupComponent(instance, isSSR = false) {\r\n    isInSSRComponentSetup = isSSR;\r\n    const { props, children } = instance.vnode;\r\n    const isStateful = isStatefulComponent(instance);\r\n    initProps(instance, props, isStateful, isSSR);\r\n    initSlots(instance, children);\r\n    const setupResult = isStateful\r\n        ? setupStatefulComponent(instance, isSSR)\r\n        : undefined;\r\n    isInSSRComponentSetup = false;\r\n    return setupResult;\r\n}\r\nfunction setupStatefulComponent(instance, isSSR) {\r\n    const Component = instance.type;\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        if (Component.name) {\r\n            validateComponentName(Component.name, instance.appContext.config);\r\n        }\r\n        if (Component.components) {\r\n            const names = Object.keys(Component.components);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateComponentName(names[i], instance.appContext.config);\r\n            }\r\n        }\r\n        if (Component.directives) {\r\n            const names = Object.keys(Component.directives);\r\n            for (let i = 0; i < names.length; i++) {\r\n                validateDirectiveName(names[i]);\r\n            }\r\n        }\r\n        if (Component.compilerOptions && isRuntimeOnly()) {\r\n            warn(`\"compilerOptions\" is only supported when using a build of Vue that ` +\r\n                `includes the runtime compiler. Since you are using a runtime-only ` +\r\n                `build, the options should be passed via your build tool config instead.`);\r\n        }\r\n    }\r\n    // 0. create render proxy property access cache\r\n    instance.accessCache = Object.create(null);\r\n    // 1. create public instance / render proxy\r\n    // also mark it raw so it's never observed\r\n    instance.proxy = markRaw(new Proxy(instance.ctx, PublicInstanceProxyHandlers));\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        exposePropsOnRenderContext(instance);\r\n    }\r\n    // 2. call setup()\r\n    const { setup } = Component;\r\n    if (setup) {\r\n        const setupContext = (instance.setupContext =\r\n            setup.length > 1 ? createSetupContext(instance) : null);\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        const setupResult = callWithErrorHandling(setup, instance, 0 /* SETUP_FUNCTION */, [(process.env.NODE_ENV !== 'production') ? shallowReadonly(instance.props) : instance.props, setupContext]);\r\n        resetTracking();\r\n        currentInstance = null;\r\n        if (isPromise$1(setupResult)) {\r\n            const unsetInstance = () => {\r\n                currentInstance = null;\r\n            };\r\n            setupResult.then(unsetInstance, unsetInstance);\r\n            if (isSSR) {\r\n                // return the promise so server-renderer can wait on it\r\n                return setupResult\r\n                    .then((resolvedResult) => {\r\n                    handleSetupResult(instance, resolvedResult, isSSR);\r\n                })\r\n                    .catch(e => {\r\n                    handleError(e, instance, 0 /* SETUP_FUNCTION */);\r\n                });\r\n            }\r\n            else {\r\n                // async setup returned Promise.\r\n                // bail here and wait for re-entry.\r\n                instance.asyncDep = setupResult;\r\n            }\r\n        }\r\n        else {\r\n            handleSetupResult(instance, setupResult, isSSR);\r\n        }\r\n    }\r\n    else {\r\n        finishComponentSetup(instance, isSSR);\r\n    }\r\n}\r\nfunction handleSetupResult(instance, setupResult, isSSR) {\r\n    if (isFunction$1(setupResult)) {\r\n        // setup returned an inline render function\r\n        {\r\n            instance.render = setupResult;\r\n        }\r\n    }\r\n    else if (isObject$1(setupResult)) {\r\n        if ((process.env.NODE_ENV !== 'production') && isVNode(setupResult)) {\r\n            warn(`setup() should not return VNodes directly - ` +\r\n                `return a render function instead.`);\r\n        }\r\n        // setup returned bindings.\r\n        // assuming a render function compiled from template is present.\r\n        if ((process.env.NODE_ENV !== 'production') || __VUE_PROD_DEVTOOLS__) {\r\n            instance.devtoolsRawSetupState = setupResult;\r\n        }\r\n        instance.setupState = proxyRefs(setupResult);\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            exposeSetupStateOnRenderContext(instance);\r\n        }\r\n    }\r\n    else if ((process.env.NODE_ENV !== 'production') && setupResult !== undefined) {\r\n        warn(`setup() should return an object. Received: ${setupResult === null ? 'null' : typeof setupResult}`);\r\n    }\r\n    finishComponentSetup(instance, isSSR);\r\n}\r\nlet compile;\r\n// dev only\r\nconst isRuntimeOnly = () => !compile;\r\n/**\r\n * For runtime-dom to register the compiler.\r\n * Note the exported method uses any to avoid d.ts relying on the compiler types.\r\n */\r\nfunction registerRuntimeCompiler(_compile) {\r\n    compile = _compile;\r\n}\r\nfunction finishComponentSetup(instance, isSSR, skipOptions) {\r\n    const Component = instance.type;\r\n    // template / render function normalization\r\n    if (!instance.render) {\r\n        // could be set from setup()\r\n        if (compile && !Component.render) {\r\n            const template = Component.template;\r\n            if (template) {\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    startMeasure(instance, `compile`);\r\n                }\r\n                const { isCustomElement, compilerOptions } = instance.appContext.config;\r\n                const { delimiters, compilerOptions: componentCompilerOptions } = Component;\r\n                const finalCompilerOptions = extend(extend({\r\n                    isCustomElement,\r\n                    delimiters\r\n                }, compilerOptions), componentCompilerOptions);\r\n                Component.render = compile(template, finalCompilerOptions);\r\n                if ((process.env.NODE_ENV !== 'production')) {\r\n                    endMeasure(instance, `compile`);\r\n                }\r\n            }\r\n        }\r\n        instance.render = (Component.render || NOOP);\r\n        // for runtime-compiled render functions using `with` blocks, the render\r\n        // proxy used needs a different `has` handler which is more performant and\r\n        // also only allows a whitelist of globals to fallthrough.\r\n        if (instance.render._rc) {\r\n            instance.withProxy = new Proxy(instance.ctx, RuntimeCompiledPublicInstanceProxyHandlers);\r\n        }\r\n    }\r\n    // support for 2.x options\r\n    if (__VUE_OPTIONS_API__ && !(false )) {\r\n        currentInstance = instance;\r\n        pauseTracking();\r\n        applyOptions(instance);\r\n        resetTracking();\r\n        currentInstance = null;\r\n    }\r\n    // warn missing template/render\r\n    // the runtime compilation of template in SSR is done by server-render\r\n    if ((process.env.NODE_ENV !== 'production') && !Component.render && instance.render === NOOP && !isSSR) {\r\n        /* istanbul ignore if */\r\n        if (!compile && Component.template) {\r\n            warn(`Component provided template option but ` +\r\n                `runtime compilation is not supported in this build of Vue.` +\r\n                (` Configure your bundler to alias \"vue\" to \"vue/dist/vue.esm-bundler.js\".`\r\n                    ) /* should not happen */);\r\n        }\r\n        else {\r\n            warn(`Component is missing template or render function.`);\r\n        }\r\n    }\r\n}\r\nconst attrDevProxyHandlers = {\r\n    get: (target, key) => {\r\n        markAttrsAccessed();\r\n        return target[key];\r\n    },\r\n    set: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    },\r\n    deleteProperty: () => {\r\n        warn(`setupContext.attrs is readonly.`);\r\n        return false;\r\n    }\r\n};\r\nfunction createSetupContext(instance) {\r\n    const expose = exposed => {\r\n        if ((process.env.NODE_ENV !== 'production') && instance.exposed) {\r\n            warn(`expose() should be called only once per setup().`);\r\n        }\r\n        instance.exposed = exposed || {};\r\n    };\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        let attrs;\r\n        // We use getters in dev in case libs like test-utils overwrite instance\r\n        // properties (overwrites should not be done in prod)\r\n        return Object.freeze({\r\n            get attrs() {\r\n                return (attrs || (attrs = new Proxy(instance.attrs, attrDevProxyHandlers)));\r\n            },\r\n            get slots() {\r\n                return shallowReadonly(instance.slots);\r\n            },\r\n            get emit() {\r\n                return (event, ...args) => instance.emit(event, ...args);\r\n            },\r\n            expose\r\n        });\r\n    }\r\n    else {\r\n        return {\r\n            attrs: instance.attrs,\r\n            slots: instance.slots,\r\n            emit: instance.emit,\r\n            expose\r\n        };\r\n    }\r\n}\r\nfunction getExposeProxy(instance) {\r\n    if (instance.exposed) {\r\n        return (instance.exposeProxy ||\r\n            (instance.exposeProxy = new Proxy(proxyRefs(markRaw(instance.exposed)), {\r\n                get(target, key) {\r\n                    if (key in target) {\r\n                        return target[key];\r\n                    }\r\n                    else if (key in publicPropertiesMap) {\r\n                        return publicPropertiesMap[key](instance);\r\n                    }\r\n                }\r\n            })));\r\n    }\r\n}\r\n// record effects created during a component's setup() so that they can be\r\n// stopped when the component unmounts\r\nfunction recordInstanceBoundEffect(effect, instance = currentInstance) {\r\n    if (instance) {\r\n        (instance.effects || (instance.effects = [])).push(effect);\r\n    }\r\n}\r\nconst classifyRE = /(?:^|[-_])(\\w)/g;\r\nconst classify = (str) => str.replace(classifyRE, c => c.toUpperCase()).replace(/[-_]/g, '');\r\nfunction getComponentName(Component) {\r\n    return isFunction$1(Component)\r\n        ? Component.displayName || Component.name\r\n        : Component.name;\r\n}\r\n/* istanbul ignore next */\r\nfunction formatComponentName(instance, Component, isRoot = false) {\r\n    let name = getComponentName(Component);\r\n    if (!name && Component.__file) {\r\n        const match = Component.__file.match(/([^/\\\\]+)\\.\\w+$/);\r\n        if (match) {\r\n            name = match[1];\r\n        }\r\n    }\r\n    if (!name && instance && instance.parent) {\r\n        // try to infer the name based on reverse resolution\r\n        const inferFromRegistry = (registry) => {\r\n            for (const key in registry) {\r\n                if (registry[key] === Component) {\r\n                    return key;\r\n                }\r\n            }\r\n        };\r\n        name =\r\n            inferFromRegistry(instance.components ||\r\n                instance.parent.type.components) || inferFromRegistry(instance.appContext.components);\r\n    }\r\n    return name ? classify(name) : isRoot ? `App` : `Anonymous`;\r\n}\r\nfunction isClassComponent(value) {\r\n    return isFunction$1(value) && '__vccOpts' in value;\r\n}\n\nfunction computed(getterOrOptions) {\r\n    const c = computed$1(getterOrOptions);\r\n    recordInstanceBoundEffect(c.effect);\r\n    return c;\r\n}\n\n(process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\n(process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\n\n// dev only\r\nconst warnRuntimeUsage = (method) => warn(`${method}() is a compiler-hint helper that is only usable inside ` +\r\n    `<script setup> of a single file component. Its arguments should be ` +\r\n    `compiled away and passing it at runtime has no effect.`);\r\n// implementation\r\nfunction defineProps() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineProps`);\r\n    }\r\n    return null;\r\n}\r\n// implementation\r\nfunction defineEmits() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineEmits`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @deprecated use `defineEmits` instead.\r\n */\r\nconst defineEmit = defineEmits;\r\n/**\r\n * Vue `<script setup>` compiler macro for declaring a component's exposed\r\n * instance properties when it is accessed by a parent component via template\r\n * refs.\r\n *\r\n * `<script setup>` components are closed by default - i.e. varaibles inside\r\n * the `<script setup>` scope is not exposed to parent unless explicitly exposed\r\n * via `defineExpose`.\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the\r\n * output and should **not** be actually called at runtime.\r\n */\r\nfunction defineExpose(exposed) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`defineExpose`);\r\n    }\r\n}\r\n/**\r\n * Vue `<script setup>` compiler macro for providing props default values when\r\n * using type-based `defineProps` decalration.\r\n *\r\n * Example usage:\r\n * ```ts\r\n * withDefaults(defineProps<{\r\n *   size?: number\r\n *   labels?: string[]\r\n * }>(), {\r\n *   size: 3,\r\n *   labels: () => ['default label']\r\n * })\r\n * ```\r\n *\r\n * This is only usable inside `<script setup>`, is compiled away in the output\r\n * and should **not** be actually called at runtime.\r\n */\r\nfunction withDefaults(props, defaults) {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warnRuntimeUsage(`withDefaults`);\r\n    }\r\n    return null;\r\n}\r\n/**\r\n * @deprecated use `useSlots` and `useAttrs` instead.\r\n */\r\nfunction useContext() {\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        warn(`\\`useContext()\\` has been deprecated and will be removed in the ` +\r\n            `next minor release. Use \\`useSlots()\\` and \\`useAttrs()\\` instead.`);\r\n    }\r\n    return getContext();\r\n}\r\nfunction useSlots() {\r\n    return getContext().slots;\r\n}\r\nfunction useAttrs() {\r\n    return getContext().attrs;\r\n}\r\nfunction getContext() {\r\n    const i = getCurrentInstance();\r\n    if ((process.env.NODE_ENV !== 'production') && !i) {\r\n        warn(`useContext() called without active instance.`);\r\n    }\r\n    return i.setupContext || (i.setupContext = createSetupContext(i));\r\n}\r\n/**\r\n * Runtime helper for merging default declarations. Imported by compiled code\r\n * only.\r\n * @internal\r\n */\r\nfunction mergeDefaults(\r\n// the base props is compiler-generated and guaranteed to be in this shape.\r\nprops, defaults) {\r\n    for (const key in defaults) {\r\n        const val = props[key];\r\n        if (val) {\r\n            val.default = defaults[key];\r\n        }\r\n        else if (val === null) {\r\n            props[key] = { default: defaults[key] };\r\n        }\r\n        else if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`props default key \"${key}\" has no corresponding declaration.`);\r\n        }\r\n    }\r\n    return props;\r\n}\r\n/**\r\n * Runtime helper for storing and resuming current instance context in\r\n * async setup().\r\n */\r\nfunction withAsyncContext(awaitable) {\r\n    const ctx = getCurrentInstance();\r\n    setCurrentInstance(null); // unset after storing instance\r\n    if ((process.env.NODE_ENV !== 'production') && !ctx) {\r\n        warn(`withAsyncContext() called when there is no active context instance.`);\r\n    }\r\n    return isPromise(awaitable)\r\n        ? awaitable.then(res => {\r\n            setCurrentInstance(ctx);\r\n            return res;\r\n        }, err => {\r\n            setCurrentInstance(ctx);\r\n            throw err;\r\n        })\r\n        : awaitable;\r\n}\n\n// Actual implementation\r\nfunction h(type, propsOrChildren, children) {\r\n    const l = arguments.length;\r\n    if (l === 2) {\r\n        if (isObject$1(propsOrChildren) && !isArray(propsOrChildren)) {\r\n            // single vnode without props\r\n            if (isVNode(propsOrChildren)) {\r\n                return createVNode(type, null, [propsOrChildren]);\r\n            }\r\n            // props without children\r\n            return createVNode(type, propsOrChildren);\r\n        }\r\n        else {\r\n            // omit props\r\n            return createVNode(type, null, propsOrChildren);\r\n        }\r\n    }\r\n    else {\r\n        if (l > 3) {\r\n            children = Array.prototype.slice.call(arguments, 2);\r\n        }\r\n        else if (l === 3 && isVNode(children)) {\r\n            children = [children];\r\n        }\r\n        return createVNode(type, propsOrChildren, children);\r\n    }\r\n}\n\nconst ssrContextKey = Symbol((process.env.NODE_ENV !== 'production') ? `ssrContext` : ``);\r\nconst useSSRContext = () => {\r\n    {\r\n        const ctx = inject(ssrContextKey);\r\n        if (!ctx) {\r\n            warn(`Server rendering context not provided. Make sure to only call ` +\r\n                `useSSRContext() conditionally in the server build.`);\r\n        }\r\n        return ctx;\r\n    }\r\n};\n\nfunction initCustomFormatter() {\r\n    /* eslint-disable no-restricted-globals */\r\n    if (!(process.env.NODE_ENV !== 'production') || typeof window === 'undefined') {\r\n        return;\r\n    }\r\n    const vueStyle = { style: 'color:#3ba776' };\r\n    const numberStyle = { style: 'color:#0b1bc9' };\r\n    const stringStyle = { style: 'color:#b62e24' };\r\n    const keywordStyle = { style: 'color:#9d288c' };\r\n    // custom formatter for Chrome\r\n    // https://www.mattzeunert.com/2016/02/19/custom-chrome-devtools-object-formatters.html\r\n    const formatter = {\r\n        header(obj) {\r\n            // TODO also format ComponentPublicInstance & ctx.slots/attrs in setup\r\n            if (!isObject$1(obj)) {\r\n                return null;\r\n            }\r\n            if (obj.__isVue) {\r\n                return ['div', vueStyle, `VueInstance`];\r\n            }\r\n            else if (isRef(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, genRefFlag(obj)],\r\n                    '<',\r\n                    formatValue(obj.value),\r\n                    `>`\r\n                ];\r\n            }\r\n            else if (isReactive(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Reactive'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    `>${isReadonly(obj) ? ` (readonly)` : ``}`\r\n                ];\r\n            }\r\n            else if (isReadonly(obj)) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ['span', vueStyle, 'Readonly'],\r\n                    '<',\r\n                    formatValue(obj),\r\n                    '>'\r\n                ];\r\n            }\r\n            return null;\r\n        },\r\n        hasBody(obj) {\r\n            return obj && obj.__isVue;\r\n        },\r\n        body(obj) {\r\n            if (obj && obj.__isVue) {\r\n                return [\r\n                    'div',\r\n                    {},\r\n                    ...formatInstance(obj.$)\r\n                ];\r\n            }\r\n        }\r\n    };\r\n    function formatInstance(instance) {\r\n        const blocks = [];\r\n        if (instance.type.props && instance.props) {\r\n            blocks.push(createInstanceBlock('props', toRaw(instance.props)));\r\n        }\r\n        if (instance.setupState !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('setup', instance.setupState));\r\n        }\r\n        if (instance.data !== EMPTY_OBJ) {\r\n            blocks.push(createInstanceBlock('data', toRaw(instance.data)));\r\n        }\r\n        const computed = extractKeys(instance, 'computed');\r\n        if (computed) {\r\n            blocks.push(createInstanceBlock('computed', computed));\r\n        }\r\n        const injected = extractKeys(instance, 'inject');\r\n        if (injected) {\r\n            blocks.push(createInstanceBlock('injected', injected));\r\n        }\r\n        blocks.push([\r\n            'div',\r\n            {},\r\n            [\r\n                'span',\r\n                {\r\n                    style: keywordStyle.style + ';opacity:0.66'\r\n                },\r\n                '$ (internal): '\r\n            ],\r\n            ['object', { object: instance }]\r\n        ]);\r\n        return blocks;\r\n    }\r\n    function createInstanceBlock(type, target) {\r\n        target = extend({}, target);\r\n        if (!Object.keys(target).length) {\r\n            return ['span', {}];\r\n        }\r\n        return [\r\n            'div',\r\n            { style: 'line-height:1.25em;margin-bottom:0.6em' },\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'color:#476582'\r\n                },\r\n                type\r\n            ],\r\n            [\r\n                'div',\r\n                {\r\n                    style: 'padding-left:1.25em'\r\n                },\r\n                ...Object.keys(target).map(key => {\r\n                    return [\r\n                        'div',\r\n                        {},\r\n                        ['span', keywordStyle, key + ': '],\r\n                        formatValue(target[key], false)\r\n                    ];\r\n                })\r\n            ]\r\n        ];\r\n    }\r\n    function formatValue(v, asRaw = true) {\r\n        if (typeof v === 'number') {\r\n            return ['span', numberStyle, v];\r\n        }\r\n        else if (typeof v === 'string') {\r\n            return ['span', stringStyle, JSON.stringify(v)];\r\n        }\r\n        else if (typeof v === 'boolean') {\r\n            return ['span', keywordStyle, v];\r\n        }\r\n        else if (isObject$1(v)) {\r\n            return ['object', { object: asRaw ? toRaw(v) : v }];\r\n        }\r\n        else {\r\n            return ['span', stringStyle, String(v)];\r\n        }\r\n    }\r\n    function extractKeys(instance, type) {\r\n        const Comp = instance.type;\r\n        if (isFunction$1(Comp)) {\r\n            return;\r\n        }\r\n        const extracted = {};\r\n        for (const key in instance.ctx) {\r\n            if (isKeyOfType(Comp, key, type)) {\r\n                extracted[key] = instance.ctx[key];\r\n            }\r\n        }\r\n        return extracted;\r\n    }\r\n    function isKeyOfType(Comp, key, type) {\r\n        const opts = Comp[type];\r\n        if ((isArray(opts) && opts.includes(key)) ||\r\n            (isObject$1(opts) && key in opts)) {\r\n            return true;\r\n        }\r\n        if (Comp.extends && isKeyOfType(Comp.extends, key, type)) {\r\n            return true;\r\n        }\r\n        if (Comp.mixins && Comp.mixins.some(m => isKeyOfType(m, key, type))) {\r\n            return true;\r\n        }\r\n    }\r\n    function genRefFlag(v) {\r\n        if (v._shallow) {\r\n            return `ShallowRef`;\r\n        }\r\n        if (v.effect) {\r\n            return `ComputedRef`;\r\n        }\r\n        return `Ref`;\r\n    }\r\n    if (window.devtoolsFormatters) {\r\n        window.devtoolsFormatters.push(formatter);\r\n    }\r\n    else {\r\n        window.devtoolsFormatters = [formatter];\r\n    }\r\n}\n\n// Core API ------------------------------------------------------------------\r\nconst version = \"3.1.4\";\r\n/**\r\n * SSR utils for \\@vue/server-renderer. Only exposed in cjs builds.\r\n * @internal\r\n */\r\nconst ssrUtils = (null);\r\n/**\r\n * @internal only exposed in compat builds\r\n */\r\nconst resolveFilter = null;\r\n/**\r\n * @internal only exposed in compat builds.\r\n */\r\nconst compatUtils = (null);\n\nexport { BaseTransition, Comment$1 as Comment, Fragment, KeepAlive, Static, Suspense, Teleport, Text, callWithAsyncErrorHandling, callWithErrorHandling, cloneVNode, compatUtils, computed, createBlock, createCommentVNode, createHydrationRenderer, createRenderer, createSlots, createStaticVNode, createTextVNode, createVNode, defineAsyncComponent, defineComponent, defineEmit, defineEmits, defineExpose, defineProps, devtools, getCurrentInstance, getTransitionRawChildren, h, handleError, initCustomFormatter, inject, isRuntimeOnly, isVNode, mergeDefaults, mergeProps, nextTick, onActivated, onBeforeMount, onBeforeUnmount, onBeforeUpdate, onDeactivated, onErrorCaptured, onMounted, onRenderTracked, onRenderTriggered, onServerPrefetch, onUnmounted, onUpdated, openBlock, popScopeId, provide, pushScopeId, queuePostFlushCb, registerRuntimeCompiler, renderList, renderSlot, resolveComponent, resolveDirective, resolveDynamicComponent, resolveFilter, resolveTransitionHooks, setBlockTracking, setDevtoolsHook, setTransitionHooks, ssrContextKey, ssrUtils, toHandlers, transformVNodeArgs, useAttrs, useContext, useSSRContext, useSlots, useTransitionState, version, warn, watch, watchEffect, withAsyncContext, withCtx, withDefaults, withDirectives, withScopeId };\n","import { camelize, warn, callWithAsyncErrorHandling, getCurrentInstance, onMounted, watchEffect, onUpdated, Fragment, h, BaseTransition, useTransitionState, toRaw, getTransitionRawChildren, setTransitionHooks, resolveTransitionHooks, createVNode, createRenderer, isRuntimeOnly, createHydrationRenderer } from '@vue/runtime-core';\nexport * from '@vue/runtime-core';\nimport { isString, isArray, hyphenate, capitalize, isSpecialBooleanAttr, isOn, isModelListener, isFunction, EMPTY_OBJ, extend, isObject, toNumber, invokeArrayFns, looseIndexOf, isSet, looseEqual, isHTMLTag, isSVGTag } from '@vue/shared';\n\nconst svgNS = 'http://www.w3.org/2000/svg';\r\nconst doc = (typeof document !== 'undefined' ? document : null);\r\nconst nodeOps = {\r\n    insert: (child, parent, anchor) => {\r\n        parent.insertBefore(child, anchor || null);\r\n    },\r\n    remove: child => {\r\n        const parent = child.parentNode;\r\n        if (parent) {\r\n            parent.removeChild(child);\r\n        }\r\n    },\r\n    createElement: (tag, isSVG, is, props) => {\r\n        const el = isSVG\r\n            ? doc.createElementNS(svgNS, tag)\r\n            : doc.createElement(tag, is ? { is } : undefined);\r\n        if (tag === 'select' && props && props.multiple != null) {\r\n            el.setAttribute('multiple', props.multiple);\r\n        }\r\n        return el;\r\n    },\r\n    createText: text => doc.createTextNode(text),\r\n    createComment: text => doc.createComment(text),\r\n    setText: (node, text) => {\r\n        node.nodeValue = text;\r\n    },\r\n    setElementText: (el, text) => {\r\n        el.textContent = text;\r\n    },\r\n    parentNode: node => node.parentNode,\r\n    nextSibling: node => node.nextSibling,\r\n    querySelector: selector => doc.querySelector(selector),\r\n    setScopeId(el, id) {\r\n        el.setAttribute(id, '');\r\n    },\r\n    cloneNode(el) {\r\n        const cloned = el.cloneNode(true);\r\n        // #3072\r\n        // - in `patchDOMProp`, we store the actual value in the `el._value` property.\r\n        // - normally, elements using `:value` bindings will not be hoisted, but if\r\n        //   the bound value is a constant, e.g. `:value=\"true\"` - they do get\r\n        //   hoisted.\r\n        // - in production, hoisted nodes are cloned when subsequent inserts, but\r\n        //   cloneNode() does not copy the custom property we attached.\r\n        // - This may need to account for other custom DOM properties we attach to\r\n        //   elements in addition to `_value` in the future.\r\n        if (`_value` in el) {\r\n            cloned._value = el._value;\r\n        }\r\n        return cloned;\r\n    },\r\n    // __UNSAFE__\r\n    // Reason: insertAdjacentHTML.\r\n    // Static content here can only come from compiled templates.\r\n    // As long as the user only uses trusted templates, this is safe.\r\n    insertStaticContent(content, parent, anchor, isSVG, cached) {\r\n        if (cached) {\r\n            let first;\r\n            let last;\r\n            let i = 0;\r\n            let l = cached.length;\r\n            for (; i < l; i++) {\r\n                const node = cached[i].cloneNode(true);\r\n                if (i === 0)\r\n                    first = node;\r\n                if (i === l - 1)\r\n                    last = node;\r\n                parent.insertBefore(node, anchor);\r\n            }\r\n            return [first, last];\r\n        }\r\n        // <parent> before | first ... last | anchor </parent>\r\n        const before = anchor ? anchor.previousSibling : parent.lastChild;\r\n        if (anchor) {\r\n            let insertionPoint;\r\n            let usingTempInsertionPoint = false;\r\n            if (anchor instanceof Element) {\r\n                insertionPoint = anchor;\r\n            }\r\n            else {\r\n                // insertAdjacentHTML only works for elements but the anchor is not an\r\n                // element...\r\n                usingTempInsertionPoint = true;\r\n                insertionPoint = isSVG\r\n                    ? doc.createElementNS(svgNS, 'g')\r\n                    : doc.createElement('div');\r\n                parent.insertBefore(insertionPoint, anchor);\r\n            }\r\n            insertionPoint.insertAdjacentHTML('beforebegin', content);\r\n            if (usingTempInsertionPoint) {\r\n                parent.removeChild(insertionPoint);\r\n            }\r\n        }\r\n        else {\r\n            parent.insertAdjacentHTML('beforeend', content);\r\n        }\r\n        let first = before ? before.nextSibling : parent.firstChild;\r\n        const last = anchor ? anchor.previousSibling : parent.lastChild;\r\n        const ret = [];\r\n        while (first) {\r\n            ret.push(first);\r\n            if (first === last)\r\n                break;\r\n            first = first.nextSibling;\r\n        }\r\n        return ret;\r\n    }\r\n};\n\n// compiler should normalize class + :class bindings on the same element\r\n// into a single binding ['staticClass', dynamic]\r\nfunction patchClass(el, value, isSVG) {\r\n    if (value == null) {\r\n        value = '';\r\n    }\r\n    if (isSVG) {\r\n        el.setAttribute('class', value);\r\n    }\r\n    else {\r\n        // directly setting className should be faster than setAttribute in theory\r\n        // if this is an element during a transition, take the temporary transition\r\n        // classes into account.\r\n        const transitionClasses = el._vtc;\r\n        if (transitionClasses) {\r\n            value = (value\r\n                ? [value, ...transitionClasses]\r\n                : [...transitionClasses]).join(' ');\r\n        }\r\n        el.className = value;\r\n    }\r\n}\n\nfunction patchStyle(el, prev, next) {\r\n    const style = el.style;\r\n    if (!next) {\r\n        el.removeAttribute('style');\r\n    }\r\n    else if (isString(next)) {\r\n        if (prev !== next) {\r\n            const current = style.display;\r\n            style.cssText = next;\r\n            // indicates that the `display` of the element is controlled by `v-show`,\r\n            // so we always keep the current `display` value regardless of the `style` value,\r\n            // thus handing over control to `v-show`.\r\n            if ('_vod' in el) {\r\n                style.display = current;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        for (const key in next) {\r\n            setStyle(style, key, next[key]);\r\n        }\r\n        if (prev && !isString(prev)) {\r\n            for (const key in prev) {\r\n                if (next[key] == null) {\r\n                    setStyle(style, key, '');\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\nconst importantRE = /\\s*!important$/;\r\nfunction setStyle(style, name, val) {\r\n    if (isArray(val)) {\r\n        val.forEach(v => setStyle(style, name, v));\r\n    }\r\n    else {\r\n        if (name.startsWith('--')) {\r\n            // custom property definition\r\n            style.setProperty(name, val);\r\n        }\r\n        else {\r\n            const prefixed = autoPrefix(style, name);\r\n            if (importantRE.test(val)) {\r\n                // !important\r\n                style.setProperty(hyphenate(prefixed), val.replace(importantRE, ''), 'important');\r\n            }\r\n            else {\r\n                style[prefixed] = val;\r\n            }\r\n        }\r\n    }\r\n}\r\nconst prefixes = ['Webkit', 'Moz', 'ms'];\r\nconst prefixCache = {};\r\nfunction autoPrefix(style, rawName) {\r\n    const cached = prefixCache[rawName];\r\n    if (cached) {\r\n        return cached;\r\n    }\r\n    let name = camelize(rawName);\r\n    if (name !== 'filter' && name in style) {\r\n        return (prefixCache[rawName] = name);\r\n    }\r\n    name = capitalize(name);\r\n    for (let i = 0; i < prefixes.length; i++) {\r\n        const prefixed = prefixes[i] + name;\r\n        if (prefixed in style) {\r\n            return (prefixCache[rawName] = prefixed);\r\n        }\r\n    }\r\n    return rawName;\r\n}\n\nconst xlinkNS = 'http://www.w3.org/1999/xlink';\r\nfunction patchAttr(el, key, value, isSVG, instance) {\r\n    if (isSVG && key.startsWith('xlink:')) {\r\n        if (value == null) {\r\n            el.removeAttributeNS(xlinkNS, key.slice(6, key.length));\r\n        }\r\n        else {\r\n            el.setAttributeNS(xlinkNS, key, value);\r\n        }\r\n    }\r\n    else {\r\n        // note we are only checking boolean attributes that don't have a\r\n        // corresponding dom prop of the same name here.\r\n        const isBoolean = isSpecialBooleanAttr(key);\r\n        if (value == null || (isBoolean && value === false)) {\r\n            el.removeAttribute(key);\r\n        }\r\n        else {\r\n            el.setAttribute(key, isBoolean ? '' : value);\r\n        }\r\n    }\r\n}\n\n// __UNSAFE__\r\n// functions. The user is responsible for using them with only trusted content.\r\nfunction patchDOMProp(el, key, value, \r\n// the following args are passed only due to potential innerHTML/textContent\r\n// overriding existing VNodes, in which case the old tree must be properly\r\n// unmounted.\r\nprevChildren, parentComponent, parentSuspense, unmountChildren) {\r\n    if (key === 'innerHTML' || key === 'textContent') {\r\n        if (prevChildren) {\r\n            unmountChildren(prevChildren, parentComponent, parentSuspense);\r\n        }\r\n        el[key] = value == null ? '' : value;\r\n        return;\r\n    }\r\n    if (key === 'value' && el.tagName !== 'PROGRESS') {\r\n        // store value as _value as well since\r\n        // non-string values will be stringified.\r\n        el._value = value;\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n        if (value == null) {\r\n            el.removeAttribute(key);\r\n        }\r\n        return;\r\n    }\r\n    if (value === '' || value == null) {\r\n        const type = typeof el[key];\r\n        if (value === '' && type === 'boolean') {\r\n            // e.g. <select multiple> compiles to { multiple: '' }\r\n            el[key] = true;\r\n            return;\r\n        }\r\n        else if (value == null && type === 'string') {\r\n            // e.g. <div :id=\"null\">\r\n            el[key] = '';\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n        else if (type === 'number') {\r\n            // e.g. <img :width=\"null\">\r\n            el[key] = 0;\r\n            el.removeAttribute(key);\r\n            return;\r\n        }\r\n    }\r\n    // some properties perform value validation and throw\r\n    try {\r\n        el[key] = value;\r\n    }\r\n    catch (e) {\r\n        if ((process.env.NODE_ENV !== 'production')) {\r\n            warn(`Failed setting prop \"${key}\" on <${el.tagName.toLowerCase()}>: ` +\r\n                `value ${value} is invalid.`, e);\r\n        }\r\n    }\r\n}\n\n// Async edge case fix requires storing an event listener's attach timestamp.\r\nlet _getNow = Date.now;\r\nlet skipTimestampCheck = false;\r\nif (typeof window !== 'undefined') {\r\n    // Determine what event timestamp the browser is using. Annoyingly, the\r\n    // timestamp can either be hi-res (relative to page load) or low-res\r\n    // (relative to UNIX epoch), so in order to compare time we have to use the\r\n    // same timestamp type when saving the flush timestamp.\r\n    if (_getNow() > document.createEvent('Event').timeStamp) {\r\n        // if the low-res timestamp which is bigger than the event timestamp\r\n        // (which is evaluated AFTER) it means the event is using a hi-res timestamp,\r\n        // and we need to use the hi-res version for event listeners as well.\r\n        _getNow = () => performance.now();\r\n    }\r\n    // #3485: Firefox <= 53 has incorrect Event.timeStamp implementation\r\n    // and does not fire microtasks in between event propagation, so safe to exclude.\r\n    const ffMatch = navigator.userAgent.match(/firefox\\/(\\d+)/i);\r\n    skipTimestampCheck = !!(ffMatch && Number(ffMatch[1]) <= 53);\r\n}\r\n// To avoid the overhead of repeatedly calling performance.now(), we cache\r\n// and use the same timestamp for all event listeners attached in the same tick.\r\nlet cachedNow = 0;\r\nconst p = Promise.resolve();\r\nconst reset = () => {\r\n    cachedNow = 0;\r\n};\r\nconst getNow = () => cachedNow || (p.then(reset), (cachedNow = _getNow()));\r\nfunction addEventListener(el, event, handler, options) {\r\n    el.addEventListener(event, handler, options);\r\n}\r\nfunction removeEventListener(el, event, handler, options) {\r\n    el.removeEventListener(event, handler, options);\r\n}\r\nfunction patchEvent(el, rawName, prevValue, nextValue, instance = null) {\r\n    // vei = vue event invokers\r\n    const invokers = el._vei || (el._vei = {});\r\n    const existingInvoker = invokers[rawName];\r\n    if (nextValue && existingInvoker) {\r\n        // patch\r\n        existingInvoker.value = nextValue;\r\n    }\r\n    else {\r\n        const [name, options] = parseName(rawName);\r\n        if (nextValue) {\r\n            // add\r\n            const invoker = (invokers[rawName] = createInvoker(nextValue, instance));\r\n            addEventListener(el, name, invoker, options);\r\n        }\r\n        else if (existingInvoker) {\r\n            // remove\r\n            removeEventListener(el, name, existingInvoker, options);\r\n            invokers[rawName] = undefined;\r\n        }\r\n    }\r\n}\r\nconst optionsModifierRE = /(?:Once|Passive|Capture)$/;\r\nfunction parseName(name) {\r\n    let options;\r\n    if (optionsModifierRE.test(name)) {\r\n        options = {};\r\n        let m;\r\n        while ((m = name.match(optionsModifierRE))) {\r\n            name = name.slice(0, name.length - m[0].length);\r\n            options[m[0].toLowerCase()] = true;\r\n        }\r\n    }\r\n    return [hyphenate(name.slice(2)), options];\r\n}\r\nfunction createInvoker(initialValue, instance) {\r\n    const invoker = (e) => {\r\n        // async edge case #6566: inner click event triggers patch, event handler\r\n        // attached to outer element during patch, and triggered again. This\r\n        // happens because browsers fire microtask ticks between event propagation.\r\n        // the solution is simple: we save the timestamp when a handler is attached,\r\n        // and the handler would only fire if the event passed to it was fired\r\n        // AFTER it was attached.\r\n        const timeStamp = e.timeStamp || _getNow();\r\n        if (skipTimestampCheck || timeStamp >= invoker.attached - 1) {\r\n            callWithAsyncErrorHandling(patchStopImmediatePropagation(e, invoker.value), instance, 5 /* NATIVE_EVENT_HANDLER */, [e]);\r\n        }\r\n    };\r\n    invoker.value = initialValue;\r\n    invoker.attached = getNow();\r\n    return invoker;\r\n}\r\nfunction patchStopImmediatePropagation(e, value) {\r\n    if (isArray(value)) {\r\n        const originalStop = e.stopImmediatePropagation;\r\n        e.stopImmediatePropagation = () => {\r\n            originalStop.call(e);\r\n            e._stopped = true;\r\n        };\r\n        return value.map(fn => (e) => !e._stopped && fn(e));\r\n    }\r\n    else {\r\n        return value;\r\n    }\r\n}\n\nconst nativeOnRE = /^on[a-z]/;\r\nconst forcePatchProp = (_, key) => key === 'value';\r\nconst patchProp = (el, key, prevValue, nextValue, isSVG = false, prevChildren, parentComponent, parentSuspense, unmountChildren) => {\r\n    switch (key) {\r\n        // special\r\n        case 'class':\r\n            patchClass(el, nextValue, isSVG);\r\n            break;\r\n        case 'style':\r\n            patchStyle(el, prevValue, nextValue);\r\n            break;\r\n        default:\r\n            if (isOn(key)) {\r\n                // ignore v-model listeners\r\n                if (!isModelListener(key)) {\r\n                    patchEvent(el, key, prevValue, nextValue, parentComponent);\r\n                }\r\n            }\r\n            else if (shouldSetAsProp(el, key, nextValue, isSVG)) {\r\n                patchDOMProp(el, key, nextValue, prevChildren, parentComponent, parentSuspense, unmountChildren);\r\n            }\r\n            else {\r\n                // special case for <input v-model type=\"checkbox\"> with\r\n                // :true-value & :false-value\r\n                // store value as dom properties since non-string values will be\r\n                // stringified.\r\n                if (key === 'true-value') {\r\n                    el._trueValue = nextValue;\r\n                }\r\n                else if (key === 'false-value') {\r\n                    el._falseValue = nextValue;\r\n                }\r\n                patchAttr(el, key, nextValue, isSVG);\r\n            }\r\n            break;\r\n    }\r\n};\r\nfunction shouldSetAsProp(el, key, value, isSVG) {\r\n    if (isSVG) {\r\n        // most keys must be set as attribute on svg elements to work\r\n        // ...except innerHTML\r\n        if (key === 'innerHTML') {\r\n            return true;\r\n        }\r\n        // or native onclick with function values\r\n        if (key in el && nativeOnRE.test(key) && isFunction(value)) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n    // spellcheck and draggable are numerated attrs, however their\r\n    // corresponding DOM properties are actually booleans - this leads to\r\n    // setting it with a string \"false\" value leading it to be coerced to\r\n    // `true`, so we need to always treat them as attributes.\r\n    // Note that `contentEditable` doesn't have this problem: its DOM\r\n    // property is also enumerated string values.\r\n    if (key === 'spellcheck' || key === 'draggable') {\r\n        return false;\r\n    }\r\n    // #1787, #2840 form property on form elements is readonly and must be set as\r\n    // attribute.\r\n    if (key === 'form') {\r\n        return false;\r\n    }\r\n    // #1526 <input list> must be set as attribute\r\n    if (key === 'list' && el.tagName === 'INPUT') {\r\n        return false;\r\n    }\r\n    // #2766 <textarea type> must be set as attribute\r\n    if (key === 'type' && el.tagName === 'TEXTAREA') {\r\n        return false;\r\n    }\r\n    // native onclick with string value, must be set as attribute\r\n    if (nativeOnRE.test(key) && isString(value)) {\r\n        return false;\r\n    }\r\n    return key in el;\r\n}\n\nfunction useCssModule(name = '$style') {\r\n    /* istanbul ignore else */\r\n    {\r\n        const instance = getCurrentInstance();\r\n        if (!instance) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`useCssModule must be called inside setup()`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const modules = instance.type.__cssModules;\r\n        if (!modules) {\r\n            (process.env.NODE_ENV !== 'production') && warn(`Current instance does not have CSS modules injected.`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        const mod = modules[name];\r\n        if (!mod) {\r\n            (process.env.NODE_ENV !== 'production') &&\r\n                warn(`Current instance does not have CSS module named \"${name}\".`);\r\n            return EMPTY_OBJ;\r\n        }\r\n        return mod;\r\n    }\r\n}\n\n/**\r\n * Runtime helper for SFC's CSS variable injection feature.\r\n * @private\r\n */\r\nfunction useCssVars(getter) {\r\n    const instance = getCurrentInstance();\r\n    /* istanbul ignore next */\r\n    if (!instance) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`useCssVars is called without current active component instance.`);\r\n        return;\r\n    }\r\n    const setVars = () => setVarsOnVNode(instance.subTree, getter(instance.proxy));\r\n    onMounted(() => watchEffect(setVars, { flush: 'post' }));\r\n    onUpdated(setVars);\r\n}\r\nfunction setVarsOnVNode(vnode, vars) {\r\n    if (vnode.shapeFlag & 128 /* SUSPENSE */) {\r\n        const suspense = vnode.suspense;\r\n        vnode = suspense.activeBranch;\r\n        if (suspense.pendingBranch && !suspense.isHydrating) {\r\n            suspense.effects.push(() => {\r\n                setVarsOnVNode(suspense.activeBranch, vars);\r\n            });\r\n        }\r\n    }\r\n    // drill down HOCs until it's a non-component vnode\r\n    while (vnode.component) {\r\n        vnode = vnode.component.subTree;\r\n    }\r\n    if (vnode.shapeFlag & 1 /* ELEMENT */ && vnode.el) {\r\n        const style = vnode.el.style;\r\n        for (const key in vars) {\r\n            style.setProperty(`--${key}`, vars[key]);\r\n        }\r\n    }\r\n    else if (vnode.type === Fragment) {\r\n        vnode.children.forEach(c => setVarsOnVNode(c, vars));\r\n    }\r\n}\n\nconst TRANSITION = 'transition';\r\nconst ANIMATION = 'animation';\r\n// DOM Transition is a higher-order-component based on the platform-agnostic\r\n// base Transition component, with DOM-specific logic.\r\nconst Transition = (props, { slots }) => h(BaseTransition, resolveTransitionProps(props), slots);\r\nTransition.displayName = 'Transition';\r\nconst DOMTransitionPropsValidators = {\r\n    name: String,\r\n    type: String,\r\n    css: {\r\n        type: Boolean,\r\n        default: true\r\n    },\r\n    duration: [String, Number, Object],\r\n    enterFromClass: String,\r\n    enterActiveClass: String,\r\n    enterToClass: String,\r\n    appearFromClass: String,\r\n    appearActiveClass: String,\r\n    appearToClass: String,\r\n    leaveFromClass: String,\r\n    leaveActiveClass: String,\r\n    leaveToClass: String\r\n};\r\nconst TransitionPropsValidators = (Transition.props = /*#__PURE__*/ extend({}, BaseTransition.props, DOMTransitionPropsValidators));\r\n/**\r\n * #3227 Incoming hooks may be merged into arrays when wrapping Transition\r\n * with custom HOCs.\r\n */\r\nconst callHook = (hook, args = []) => {\r\n    if (isArray(hook)) {\r\n        hook.forEach(h => h(...args));\r\n    }\r\n    else if (hook) {\r\n        hook(...args);\r\n    }\r\n};\r\n/**\r\n * Check if a hook expects a callback (2nd arg), which means the user\r\n * intends to explicitly control the end of the transition.\r\n */\r\nconst hasExplicitCallback = (hook) => {\r\n    return hook\r\n        ? isArray(hook)\r\n            ? hook.some(h => h.length > 1)\r\n            : hook.length > 1\r\n        : false;\r\n};\r\nfunction resolveTransitionProps(rawProps) {\r\n    const baseProps = {};\r\n    for (const key in rawProps) {\r\n        if (!(key in DOMTransitionPropsValidators)) {\r\n            baseProps[key] = rawProps[key];\r\n        }\r\n    }\r\n    if (rawProps.css === false) {\r\n        return baseProps;\r\n    }\r\n    const { name = 'v', type, duration, enterFromClass = `${name}-enter-from`, enterActiveClass = `${name}-enter-active`, enterToClass = `${name}-enter-to`, appearFromClass = enterFromClass, appearActiveClass = enterActiveClass, appearToClass = enterToClass, leaveFromClass = `${name}-leave-from`, leaveActiveClass = `${name}-leave-active`, leaveToClass = `${name}-leave-to` } = rawProps;\r\n    const durations = normalizeDuration(duration);\r\n    const enterDuration = durations && durations[0];\r\n    const leaveDuration = durations && durations[1];\r\n    const { onBeforeEnter, onEnter, onEnterCancelled, onLeave, onLeaveCancelled, onBeforeAppear = onBeforeEnter, onAppear = onEnter, onAppearCancelled = onEnterCancelled } = baseProps;\r\n    const finishEnter = (el, isAppear, done) => {\r\n        removeTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n        removeTransitionClass(el, isAppear ? appearActiveClass : enterActiveClass);\r\n        done && done();\r\n    };\r\n    const finishLeave = (el, done) => {\r\n        removeTransitionClass(el, leaveToClass);\r\n        removeTransitionClass(el, leaveActiveClass);\r\n        done && done();\r\n    };\r\n    const makeEnterHook = (isAppear) => {\r\n        return (el, done) => {\r\n            const hook = isAppear ? onAppear : onEnter;\r\n            const resolve = () => finishEnter(el, isAppear, done);\r\n            callHook(hook, [el, resolve]);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, isAppear ? appearFromClass : enterFromClass);\r\n                addTransitionClass(el, isAppear ? appearToClass : enterToClass);\r\n                if (!hasExplicitCallback(hook)) {\r\n                    whenTransitionEnds(el, type, enterDuration, resolve);\r\n                }\r\n            });\r\n        };\r\n    };\r\n    return extend(baseProps, {\r\n        onBeforeEnter(el) {\r\n            callHook(onBeforeEnter, [el]);\r\n            addTransitionClass(el, enterFromClass);\r\n            addTransitionClass(el, enterActiveClass);\r\n        },\r\n        onBeforeAppear(el) {\r\n            callHook(onBeforeAppear, [el]);\r\n            addTransitionClass(el, appearFromClass);\r\n            addTransitionClass(el, appearActiveClass);\r\n        },\r\n        onEnter: makeEnterHook(false),\r\n        onAppear: makeEnterHook(true),\r\n        onLeave(el, done) {\r\n            const resolve = () => finishLeave(el, done);\r\n            addTransitionClass(el, leaveFromClass);\r\n            // force reflow so *-leave-from classes immediately take effect (#2593)\r\n            forceReflow();\r\n            addTransitionClass(el, leaveActiveClass);\r\n            nextFrame(() => {\r\n                removeTransitionClass(el, leaveFromClass);\r\n                addTransitionClass(el, leaveToClass);\r\n                if (!hasExplicitCallback(onLeave)) {\r\n                    whenTransitionEnds(el, type, leaveDuration, resolve);\r\n                }\r\n            });\r\n            callHook(onLeave, [el, resolve]);\r\n        },\r\n        onEnterCancelled(el) {\r\n            finishEnter(el, false);\r\n            callHook(onEnterCancelled, [el]);\r\n        },\r\n        onAppearCancelled(el) {\r\n            finishEnter(el, true);\r\n            callHook(onAppearCancelled, [el]);\r\n        },\r\n        onLeaveCancelled(el) {\r\n            finishLeave(el);\r\n            callHook(onLeaveCancelled, [el]);\r\n        }\r\n    });\r\n}\r\nfunction normalizeDuration(duration) {\r\n    if (duration == null) {\r\n        return null;\r\n    }\r\n    else if (isObject(duration)) {\r\n        return [NumberOf(duration.enter), NumberOf(duration.leave)];\r\n    }\r\n    else {\r\n        const n = NumberOf(duration);\r\n        return [n, n];\r\n    }\r\n}\r\nfunction NumberOf(val) {\r\n    const res = toNumber(val);\r\n    if ((process.env.NODE_ENV !== 'production'))\r\n        validateDuration(res);\r\n    return res;\r\n}\r\nfunction validateDuration(val) {\r\n    if (typeof val !== 'number') {\r\n        warn(`<transition> explicit duration is not a valid number - ` +\r\n            `got ${JSON.stringify(val)}.`);\r\n    }\r\n    else if (isNaN(val)) {\r\n        warn(`<transition> explicit duration is NaN - ` +\r\n            'the duration expression might be incorrect.');\r\n    }\r\n}\r\nfunction addTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.add(c));\r\n    (el._vtc ||\r\n        (el._vtc = new Set())).add(cls);\r\n}\r\nfunction removeTransitionClass(el, cls) {\r\n    cls.split(/\\s+/).forEach(c => c && el.classList.remove(c));\r\n    const { _vtc } = el;\r\n    if (_vtc) {\r\n        _vtc.delete(cls);\r\n        if (!_vtc.size) {\r\n            el._vtc = undefined;\r\n        }\r\n    }\r\n}\r\nfunction nextFrame(cb) {\r\n    requestAnimationFrame(() => {\r\n        requestAnimationFrame(cb);\r\n    });\r\n}\r\nlet endId = 0;\r\nfunction whenTransitionEnds(el, expectedType, explicitTimeout, resolve) {\r\n    const id = (el._endId = ++endId);\r\n    const resolveIfNotStale = () => {\r\n        if (id === el._endId) {\r\n            resolve();\r\n        }\r\n    };\r\n    if (explicitTimeout) {\r\n        return setTimeout(resolveIfNotStale, explicitTimeout);\r\n    }\r\n    const { type, timeout, propCount } = getTransitionInfo(el, expectedType);\r\n    if (!type) {\r\n        return resolve();\r\n    }\r\n    const endEvent = type + 'end';\r\n    let ended = 0;\r\n    const end = () => {\r\n        el.removeEventListener(endEvent, onEnd);\r\n        resolveIfNotStale();\r\n    };\r\n    const onEnd = (e) => {\r\n        if (e.target === el && ++ended >= propCount) {\r\n            end();\r\n        }\r\n    };\r\n    setTimeout(() => {\r\n        if (ended < propCount) {\r\n            end();\r\n        }\r\n    }, timeout + 1);\r\n    el.addEventListener(endEvent, onEnd);\r\n}\r\nfunction getTransitionInfo(el, expectedType) {\r\n    const styles = window.getComputedStyle(el);\r\n    // JSDOM may return undefined for transition properties\r\n    const getStyleProperties = (key) => (styles[key] || '').split(', ');\r\n    const transitionDelays = getStyleProperties(TRANSITION + 'Delay');\r\n    const transitionDurations = getStyleProperties(TRANSITION + 'Duration');\r\n    const transitionTimeout = getTimeout(transitionDelays, transitionDurations);\r\n    const animationDelays = getStyleProperties(ANIMATION + 'Delay');\r\n    const animationDurations = getStyleProperties(ANIMATION + 'Duration');\r\n    const animationTimeout = getTimeout(animationDelays, animationDurations);\r\n    let type = null;\r\n    let timeout = 0;\r\n    let propCount = 0;\r\n    /* istanbul ignore if */\r\n    if (expectedType === TRANSITION) {\r\n        if (transitionTimeout > 0) {\r\n            type = TRANSITION;\r\n            timeout = transitionTimeout;\r\n            propCount = transitionDurations.length;\r\n        }\r\n    }\r\n    else if (expectedType === ANIMATION) {\r\n        if (animationTimeout > 0) {\r\n            type = ANIMATION;\r\n            timeout = animationTimeout;\r\n            propCount = animationDurations.length;\r\n        }\r\n    }\r\n    else {\r\n        timeout = Math.max(transitionTimeout, animationTimeout);\r\n        type =\r\n            timeout > 0\r\n                ? transitionTimeout > animationTimeout\r\n                    ? TRANSITION\r\n                    : ANIMATION\r\n                : null;\r\n        propCount = type\r\n            ? type === TRANSITION\r\n                ? transitionDurations.length\r\n                : animationDurations.length\r\n            : 0;\r\n    }\r\n    const hasTransform = type === TRANSITION &&\r\n        /\\b(transform|all)(,|$)/.test(styles[TRANSITION + 'Property']);\r\n    return {\r\n        type,\r\n        timeout,\r\n        propCount,\r\n        hasTransform\r\n    };\r\n}\r\nfunction getTimeout(delays, durations) {\r\n    while (delays.length < durations.length) {\r\n        delays = delays.concat(delays);\r\n    }\r\n    return Math.max(...durations.map((d, i) => toMs(d) + toMs(delays[i])));\r\n}\r\n// Old versions of Chromium (below 61.0.3163.100) formats floating pointer\r\n// numbers in a locale-dependent way, using a comma instead of a dot.\r\n// If comma is not replaced with a dot, the input will be rounded down\r\n// (i.e. acting as a floor function) causing unexpected behaviors\r\nfunction toMs(s) {\r\n    return Number(s.slice(0, -1).replace(',', '.')) * 1000;\r\n}\r\n// synchronously force layout to put elements into a certain state\r\nfunction forceReflow() {\r\n    return document.body.offsetHeight;\r\n}\n\nconst positionMap = new WeakMap();\r\nconst newPositionMap = new WeakMap();\r\nconst TransitionGroupImpl = {\r\n    name: 'TransitionGroup',\r\n    props: /*#__PURE__*/ extend({}, TransitionPropsValidators, {\r\n        tag: String,\r\n        moveClass: String\r\n    }),\r\n    setup(props, { slots }) {\r\n        const instance = getCurrentInstance();\r\n        const state = useTransitionState();\r\n        let prevChildren;\r\n        let children;\r\n        onUpdated(() => {\r\n            // children is guaranteed to exist after initial render\r\n            if (!prevChildren.length) {\r\n                return;\r\n            }\r\n            const moveClass = props.moveClass || `${props.name || 'v'}-move`;\r\n            if (!hasCSSTransform(prevChildren[0].el, instance.vnode.el, moveClass)) {\r\n                return;\r\n            }\r\n            // we divide the work into three loops to avoid mixing DOM reads and writes\r\n            // in each iteration - which helps prevent layout thrashing.\r\n            prevChildren.forEach(callPendingCbs);\r\n            prevChildren.forEach(recordPosition);\r\n            const movedChildren = prevChildren.filter(applyTranslation);\r\n            // force reflow to put everything in position\r\n            forceReflow();\r\n            movedChildren.forEach(c => {\r\n                const el = c.el;\r\n                const style = el.style;\r\n                addTransitionClass(el, moveClass);\r\n                style.transform = style.webkitTransform = style.transitionDuration = '';\r\n                const cb = (el._moveCb = (e) => {\r\n                    if (e && e.target !== el) {\r\n                        return;\r\n                    }\r\n                    if (!e || /transform$/.test(e.propertyName)) {\r\n                        el.removeEventListener('transitionend', cb);\r\n                        el._moveCb = null;\r\n                        removeTransitionClass(el, moveClass);\r\n                    }\r\n                });\r\n                el.addEventListener('transitionend', cb);\r\n            });\r\n        });\r\n        return () => {\r\n            const rawProps = toRaw(props);\r\n            const cssTransitionProps = resolveTransitionProps(rawProps);\r\n            let tag = rawProps.tag || Fragment;\r\n            prevChildren = children;\r\n            children = slots.default ? getTransitionRawChildren(slots.default()) : [];\r\n            for (let i = 0; i < children.length; i++) {\r\n                const child = children[i];\r\n                if (child.key != null) {\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                }\r\n                else if ((process.env.NODE_ENV !== 'production')) {\r\n                    warn(`<TransitionGroup> children must be keyed.`);\r\n                }\r\n            }\r\n            if (prevChildren) {\r\n                for (let i = 0; i < prevChildren.length; i++) {\r\n                    const child = prevChildren[i];\r\n                    setTransitionHooks(child, resolveTransitionHooks(child, cssTransitionProps, state, instance));\r\n                    positionMap.set(child, child.el.getBoundingClientRect());\r\n                }\r\n            }\r\n            return createVNode(tag, null, children);\r\n        };\r\n    }\r\n};\r\nconst TransitionGroup = TransitionGroupImpl;\r\nfunction callPendingCbs(c) {\r\n    const el = c.el;\r\n    if (el._moveCb) {\r\n        el._moveCb();\r\n    }\r\n    if (el._enterCb) {\r\n        el._enterCb();\r\n    }\r\n}\r\nfunction recordPosition(c) {\r\n    newPositionMap.set(c, c.el.getBoundingClientRect());\r\n}\r\nfunction applyTranslation(c) {\r\n    const oldPos = positionMap.get(c);\r\n    const newPos = newPositionMap.get(c);\r\n    const dx = oldPos.left - newPos.left;\r\n    const dy = oldPos.top - newPos.top;\r\n    if (dx || dy) {\r\n        const s = c.el.style;\r\n        s.transform = s.webkitTransform = `translate(${dx}px,${dy}px)`;\r\n        s.transitionDuration = '0s';\r\n        return c;\r\n    }\r\n}\r\nfunction hasCSSTransform(el, root, moveClass) {\r\n    // Detect whether an element with the move class applied has\r\n    // CSS transitions. Since the element may be inside an entering\r\n    // transition at this very moment, we make a clone of it and remove\r\n    // all other transition classes applied to ensure only the move class\r\n    // is applied.\r\n    const clone = el.cloneNode();\r\n    if (el._vtc) {\r\n        el._vtc.forEach(cls => {\r\n            cls.split(/\\s+/).forEach(c => c && clone.classList.remove(c));\r\n        });\r\n    }\r\n    moveClass.split(/\\s+/).forEach(c => c && clone.classList.add(c));\r\n    clone.style.display = 'none';\r\n    const container = (root.nodeType === 1\r\n        ? root\r\n        : root.parentNode);\r\n    container.appendChild(clone);\r\n    const { hasTransform } = getTransitionInfo(clone);\r\n    container.removeChild(clone);\r\n    return hasTransform;\r\n}\n\nconst getModelAssigner = (vnode) => {\r\n    const fn = vnode.props['onUpdate:modelValue'];\r\n    return isArray(fn) ? value => invokeArrayFns(fn, value) : fn;\r\n};\r\nfunction onCompositionStart(e) {\r\n    e.target.composing = true;\r\n}\r\nfunction onCompositionEnd(e) {\r\n    const target = e.target;\r\n    if (target.composing) {\r\n        target.composing = false;\r\n        trigger(target, 'input');\r\n    }\r\n}\r\nfunction trigger(el, type) {\r\n    const e = document.createEvent('HTMLEvents');\r\n    e.initEvent(type, true, true);\r\n    el.dispatchEvent(e);\r\n}\r\n// We are exporting the v-model runtime directly as vnode hooks so that it can\r\n// be tree-shaken in case v-model is never used.\r\nconst vModelText = {\r\n    created(el, { modifiers: { lazy, trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        const castToNumber = number || el.type === 'number';\r\n        addEventListener(el, lazy ? 'change' : 'input', e => {\r\n            if (e.target.composing)\r\n                return;\r\n            let domValue = el.value;\r\n            if (trim) {\r\n                domValue = domValue.trim();\r\n            }\r\n            else if (castToNumber) {\r\n                domValue = toNumber(domValue);\r\n            }\r\n            el._assign(domValue);\r\n        });\r\n        if (trim) {\r\n            addEventListener(el, 'change', () => {\r\n                el.value = el.value.trim();\r\n            });\r\n        }\r\n        if (!lazy) {\r\n            addEventListener(el, 'compositionstart', onCompositionStart);\r\n            addEventListener(el, 'compositionend', onCompositionEnd);\r\n            // Safari < 10.2 & UIWebView doesn't fire compositionend when\r\n            // switching focus before confirming composition choice\r\n            // this also fixes the issue where some browsers e.g. iOS Chrome\r\n            // fires \"change\" instead of \"input\" on autocomplete.\r\n            addEventListener(el, 'change', onCompositionEnd);\r\n        }\r\n    },\r\n    // set value on mounted so it's after min/max for type=\"range\"\r\n    mounted(el, { value }) {\r\n        el.value = value == null ? '' : value;\r\n    },\r\n    beforeUpdate(el, { value, modifiers: { trim, number } }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        // avoid clearing unresolved text. #2302\r\n        if (el.composing)\r\n            return;\r\n        if (document.activeElement === el) {\r\n            if (trim && el.value.trim() === value) {\r\n                return;\r\n            }\r\n            if ((number || el.type === 'number') && toNumber(el.value) === value) {\r\n                return;\r\n            }\r\n        }\r\n        const newValue = value == null ? '' : value;\r\n        if (el.value !== newValue) {\r\n            el.value = newValue;\r\n        }\r\n    }\r\n};\r\nconst vModelCheckbox = {\r\n    created(el, _, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            const modelValue = el._modelValue;\r\n            const elementValue = getValue(el);\r\n            const checked = el.checked;\r\n            const assign = el._assign;\r\n            if (isArray(modelValue)) {\r\n                const index = looseIndexOf(modelValue, elementValue);\r\n                const found = index !== -1;\r\n                if (checked && !found) {\r\n                    assign(modelValue.concat(elementValue));\r\n                }\r\n                else if (!checked && found) {\r\n                    const filtered = [...modelValue];\r\n                    filtered.splice(index, 1);\r\n                    assign(filtered);\r\n                }\r\n            }\r\n            else if (isSet(modelValue)) {\r\n                const cloned = new Set(modelValue);\r\n                if (checked) {\r\n                    cloned.add(elementValue);\r\n                }\r\n                else {\r\n                    cloned.delete(elementValue);\r\n                }\r\n                assign(cloned);\r\n            }\r\n            else {\r\n                assign(getCheckboxValue(el, checked));\r\n            }\r\n        });\r\n    },\r\n    // set initial checked on mount to wait for true-value/false-value\r\n    mounted: setChecked,\r\n    beforeUpdate(el, binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        setChecked(el, binding, vnode);\r\n    }\r\n};\r\nfunction setChecked(el, { value, oldValue }, vnode) {\r\n    el._modelValue = value;\r\n    if (isArray(value)) {\r\n        el.checked = looseIndexOf(value, vnode.props.value) > -1;\r\n    }\r\n    else if (isSet(value)) {\r\n        el.checked = value.has(vnode.props.value);\r\n    }\r\n    else if (value !== oldValue) {\r\n        el.checked = looseEqual(value, getCheckboxValue(el, true));\r\n    }\r\n}\r\nconst vModelRadio = {\r\n    created(el, { value }, vnode) {\r\n        el.checked = looseEqual(value, vnode.props.value);\r\n        el._assign = getModelAssigner(vnode);\r\n        addEventListener(el, 'change', () => {\r\n            el._assign(getValue(el));\r\n        });\r\n    },\r\n    beforeUpdate(el, { value, oldValue }, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n        if (value !== oldValue) {\r\n            el.checked = looseEqual(value, vnode.props.value);\r\n        }\r\n    }\r\n};\r\nconst vModelSelect = {\r\n    created(el, { value, modifiers: { number } }, vnode) {\r\n        const isSetModel = isSet(value);\r\n        addEventListener(el, 'change', () => {\r\n            const selectedVal = Array.prototype.filter\r\n                .call(el.options, (o) => o.selected)\r\n                .map((o) => number ? toNumber(getValue(o)) : getValue(o));\r\n            el._assign(el.multiple\r\n                ? isSetModel\r\n                    ? new Set(selectedVal)\r\n                    : selectedVal\r\n                : selectedVal[0]);\r\n        });\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    // set value in mounted & updated because <select> relies on its children\r\n    // <option>s.\r\n    mounted(el, { value }) {\r\n        setSelected(el, value);\r\n    },\r\n    beforeUpdate(el, _binding, vnode) {\r\n        el._assign = getModelAssigner(vnode);\r\n    },\r\n    updated(el, { value }) {\r\n        setSelected(el, value);\r\n    }\r\n};\r\nfunction setSelected(el, value) {\r\n    const isMultiple = el.multiple;\r\n    if (isMultiple && !isArray(value) && !isSet(value)) {\r\n        (process.env.NODE_ENV !== 'production') &&\r\n            warn(`<select multiple v-model> expects an Array or Set value for its binding, ` +\r\n                `but got ${Object.prototype.toString.call(value).slice(8, -1)}.`);\r\n        return;\r\n    }\r\n    for (let i = 0, l = el.options.length; i < l; i++) {\r\n        const option = el.options[i];\r\n        const optionValue = getValue(option);\r\n        if (isMultiple) {\r\n            if (isArray(value)) {\r\n                option.selected = looseIndexOf(value, optionValue) > -1;\r\n            }\r\n            else {\r\n                option.selected = value.has(optionValue);\r\n            }\r\n        }\r\n        else {\r\n            if (looseEqual(getValue(option), value)) {\r\n                if (el.selectedIndex !== i)\r\n                    el.selectedIndex = i;\r\n                return;\r\n            }\r\n        }\r\n    }\r\n    if (!isMultiple && el.selectedIndex !== -1) {\r\n        el.selectedIndex = -1;\r\n    }\r\n}\r\n// retrieve raw value set via :value bindings\r\nfunction getValue(el) {\r\n    return '_value' in el ? el._value : el.value;\r\n}\r\n// retrieve raw value for true-value and false-value set via :true-value or :false-value bindings\r\nfunction getCheckboxValue(el, checked) {\r\n    const key = checked ? '_trueValue' : '_falseValue';\r\n    return key in el ? el[key] : checked;\r\n}\r\nconst vModelDynamic = {\r\n    created(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'created');\r\n    },\r\n    mounted(el, binding, vnode) {\r\n        callModelHook(el, binding, vnode, null, 'mounted');\r\n    },\r\n    beforeUpdate(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'beforeUpdate');\r\n    },\r\n    updated(el, binding, vnode, prevVNode) {\r\n        callModelHook(el, binding, vnode, prevVNode, 'updated');\r\n    }\r\n};\r\nfunction callModelHook(el, binding, vnode, prevVNode, hook) {\r\n    let modelToUse;\r\n    switch (el.tagName) {\r\n        case 'SELECT':\r\n            modelToUse = vModelSelect;\r\n            break;\r\n        case 'TEXTAREA':\r\n            modelToUse = vModelText;\r\n            break;\r\n        default:\r\n            switch (vnode.props && vnode.props.type) {\r\n                case 'checkbox':\r\n                    modelToUse = vModelCheckbox;\r\n                    break;\r\n                case 'radio':\r\n                    modelToUse = vModelRadio;\r\n                    break;\r\n                default:\r\n                    modelToUse = vModelText;\r\n            }\r\n    }\r\n    const fn = modelToUse[hook];\r\n    fn && fn(el, binding, vnode, prevVNode);\r\n}\n\nconst systemModifiers = ['ctrl', 'shift', 'alt', 'meta'];\r\nconst modifierGuards = {\r\n    stop: e => e.stopPropagation(),\r\n    prevent: e => e.preventDefault(),\r\n    self: e => e.target !== e.currentTarget,\r\n    ctrl: e => !e.ctrlKey,\r\n    shift: e => !e.shiftKey,\r\n    alt: e => !e.altKey,\r\n    meta: e => !e.metaKey,\r\n    left: e => 'button' in e && e.button !== 0,\r\n    middle: e => 'button' in e && e.button !== 1,\r\n    right: e => 'button' in e && e.button !== 2,\r\n    exact: (e, modifiers) => systemModifiers.some(m => e[`${m}Key`] && !modifiers.includes(m))\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withModifiers = (fn, modifiers) => {\r\n    return (event, ...args) => {\r\n        for (let i = 0; i < modifiers.length; i++) {\r\n            const guard = modifierGuards[modifiers[i]];\r\n            if (guard && guard(event, modifiers))\r\n                return;\r\n        }\r\n        return fn(event, ...args);\r\n    };\r\n};\r\n// Kept for 2.x compat.\r\n// Note: IE11 compat for `spacebar` and `del` is removed for now.\r\nconst keyNames = {\r\n    esc: 'escape',\r\n    space: ' ',\r\n    up: 'arrow-up',\r\n    left: 'arrow-left',\r\n    right: 'arrow-right',\r\n    down: 'arrow-down',\r\n    delete: 'backspace'\r\n};\r\n/**\r\n * @private\r\n */\r\nconst withKeys = (fn, modifiers) => {\r\n    return (event) => {\r\n        if (!('key' in event)) {\r\n            return;\r\n        }\r\n        const eventKey = hyphenate(event.key);\r\n        if (modifiers.some(k => k === eventKey || keyNames[k] === eventKey)) {\r\n            return fn(event);\r\n        }\r\n    };\r\n};\n\nconst vShow = {\r\n    beforeMount(el, { value }, { transition }) {\r\n        el._vod = el.style.display === 'none' ? '' : el.style.display;\r\n        if (transition && value) {\r\n            transition.beforeEnter(el);\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    mounted(el, { value }, { transition }) {\r\n        if (transition && value) {\r\n            transition.enter(el);\r\n        }\r\n    },\r\n    updated(el, { value, oldValue }, { transition }) {\r\n        if (!value === !oldValue)\r\n            return;\r\n        if (transition) {\r\n            if (value) {\r\n                transition.beforeEnter(el);\r\n                setDisplay(el, true);\r\n                transition.enter(el);\r\n            }\r\n            else {\r\n                transition.leave(el, () => {\r\n                    setDisplay(el, false);\r\n                });\r\n            }\r\n        }\r\n        else {\r\n            setDisplay(el, value);\r\n        }\r\n    },\r\n    beforeUnmount(el, { value }) {\r\n        setDisplay(el, value);\r\n    }\r\n};\r\nfunction setDisplay(el, value) {\r\n    el.style.display = value ? el._vod : 'none';\r\n}\n\nconst rendererOptions = extend({ patchProp, forcePatchProp }, nodeOps);\r\n// lazy create the renderer - this makes core renderer logic tree-shakable\r\n// in case the user only imports reactivity utilities from Vue.\r\nlet renderer;\r\nlet enabledHydration = false;\r\nfunction ensureRenderer() {\r\n    return renderer || (renderer = createRenderer(rendererOptions));\r\n}\r\nfunction ensureHydrationRenderer() {\r\n    renderer = enabledHydration\r\n        ? renderer\r\n        : createHydrationRenderer(rendererOptions);\r\n    enabledHydration = true;\r\n    return renderer;\r\n}\r\n// use explicit type casts here to avoid import() calls in rolled-up d.ts\r\nconst render = ((...args) => {\r\n    ensureRenderer().render(...args);\r\n});\r\nconst hydrate = ((...args) => {\r\n    ensureHydrationRenderer().hydrate(...args);\r\n});\r\nconst createApp = ((...args) => {\r\n    const app = ensureRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (!container)\r\n            return;\r\n        const component = app._component;\r\n        if (!isFunction(component) && !component.render && !component.template) {\r\n            // __UNSAFE__\r\n            // Reason: potential execution of JS expressions in in-DOM template.\r\n            // The user must make sure the in-DOM template is trusted. If it's\r\n            // rendered by the server, the template should not contain any user data.\r\n            component.template = container.innerHTML;\r\n        }\r\n        // clear content before mounting\r\n        container.innerHTML = '';\r\n        const proxy = mount(container, false, container instanceof SVGElement);\r\n        if (container instanceof Element) {\r\n            container.removeAttribute('v-cloak');\r\n            container.setAttribute('data-v-app', '');\r\n        }\r\n        return proxy;\r\n    };\r\n    return app;\r\n});\r\nconst createSSRApp = ((...args) => {\r\n    const app = ensureHydrationRenderer().createApp(...args);\r\n    if ((process.env.NODE_ENV !== 'production')) {\r\n        injectNativeTagCheck(app);\r\n        injectCompilerOptionsCheck(app);\r\n    }\r\n    const { mount } = app;\r\n    app.mount = (containerOrSelector) => {\r\n        const container = normalizeContainer(containerOrSelector);\r\n        if (container) {\r\n            return mount(container, true, container instanceof SVGElement);\r\n        }\r\n    };\r\n    return app;\r\n});\r\nfunction injectNativeTagCheck(app) {\r\n    // Inject `isNativeTag`\r\n    // this is used for component name validation (dev only)\r\n    Object.defineProperty(app.config, 'isNativeTag', {\r\n        value: (tag) => isHTMLTag(tag) || isSVGTag(tag),\r\n        writable: false\r\n    });\r\n}\r\n// dev only\r\nfunction injectCompilerOptionsCheck(app) {\r\n    if (isRuntimeOnly()) {\r\n        const isCustomElement = app.config.isCustomElement;\r\n        Object.defineProperty(app.config, 'isCustomElement', {\r\n            get() {\r\n                return isCustomElement;\r\n            },\r\n            set() {\r\n                warn(`The \\`isCustomElement\\` config option is deprecated. Use ` +\r\n                    `\\`compilerOptions.isCustomElement\\` instead.`);\r\n            }\r\n        });\r\n        const compilerOptions = app.config.compilerOptions;\r\n        const msg = `The \\`compilerOptions\\` config option is only respected when using ` +\r\n            `a build of Vue.js that includes the runtime compiler (aka \"full build\"). ` +\r\n            `Since you are using the runtime-only build, \\`compilerOptions\\` ` +\r\n            `must be passed to \\`@vue/compiler-dom\\` in the build setup instead.\\n` +\r\n            `- For vue-loader: pass it via vue-loader's \\`compilerOptions\\` loader option.\\n` +\r\n            `- For vue-cli: see https://cli.vuejs.org/guide/webpack.html#modifying-options-of-a-loader\\n` +\r\n            `- For vite: pass it via @vitejs/plugin-vue options. See https://github.com/vitejs/vite/tree/main/packages/plugin-vue#example-for-passing-options-to-vuecompiler-dom`;\r\n        Object.defineProperty(app.config, 'compilerOptions', {\r\n            get() {\r\n                warn(msg);\r\n                return compilerOptions;\r\n            },\r\n            set() {\r\n                warn(msg);\r\n            }\r\n        });\r\n    }\r\n}\r\nfunction normalizeContainer(container) {\r\n    if (isString(container)) {\r\n        const res = document.querySelector(container);\r\n        if ((process.env.NODE_ENV !== 'production') && !res) {\r\n            warn(`Failed to mount app: mount target selector \"${container}\" returned null.`);\r\n        }\r\n        return res;\r\n    }\r\n    if ((process.env.NODE_ENV !== 'production') &&\r\n        container instanceof window.ShadowRoot &&\r\n        container.mode === 'closed') {\r\n        warn(`mounting on a ShadowRoot with \\`{mode: \"closed\"}\\` may lead to unpredictable bugs`);\r\n    }\r\n    return container;\r\n}\n\nexport { Transition, TransitionGroup, createApp, createSSRApp, hydrate, render, useCssModule, useCssVars, vModelCheckbox, vModelDynamic, vModelRadio, vModelSelect, vModelText, vShow, withKeys, withModifiers };\n","'use strict';\n\n/**\n * A `Cancel` is an object that is thrown when an operation is canceled.\n *\n * @class\n * @param {string=} message The message.\n */\nfunction Cancel(message) {\n  this.message = message;\n}\n\nCancel.prototype.toString = function toString() {\n  return 'Cancel' + (this.message ? ': ' + this.message : '');\n};\n\nCancel.prototype.__CANCEL__ = true;\n\nmodule.exports = Cancel;\n","'use strict';\n\nvar utils = require('./../utils');\n\nmodule.exports = (\n  utils.isStandardBrowserEnv() ?\n\n  // Standard browser envs support document.cookie\n    (function standardBrowserEnv() {\n      return {\n        write: function write(name, value, expires, path, domain, secure) {\n          var cookie = [];\n          cookie.push(name + '=' + encodeURIComponent(value));\n\n          if (utils.isNumber(expires)) {\n            cookie.push('expires=' + new Date(expires).toGMTString());\n          }\n\n          if (utils.isString(path)) {\n            cookie.push('path=' + path);\n          }\n\n          if (utils.isString(domain)) {\n            cookie.push('domain=' + domain);\n          }\n\n          if (secure === true) {\n            cookie.push('secure');\n          }\n\n          document.cookie = cookie.join('; ');\n        },\n\n        read: function read(name) {\n          var match = document.cookie.match(new RegExp('(^|;\\\\s*)(' + name + ')=([^;]*)'));\n          return (match ? decodeURIComponent(match[3]) : null);\n        },\n\n        remove: function remove(name) {\n          this.write(name, '', Date.now() - 86400000);\n        }\n      };\n    })() :\n\n  // Non standard browser env (web workers, react-native) lack needed support.\n    (function nonStandardBrowserEnv() {\n      return {\n        write: function write() {},\n        read: function read() { return null; },\n        remove: function remove() {}\n      };\n    })()\n);\n","'use strict';\n\nvar isAbsoluteURL = require('../helpers/isAbsoluteURL');\nvar combineURLs = require('../helpers/combineURLs');\n\n/**\n * Creates a new URL by combining the baseURL with the requestedURL,\n * only when the requestedURL is not already an absolute URL.\n * If the requestURL is absolute, this function returns the requestedURL untouched.\n *\n * @param {string} baseURL The base URL\n * @param {string} requestedURL Absolute or relative URL to combine\n * @returns {string} The combined full path\n */\nmodule.exports = function buildFullPath(baseURL, requestedURL) {\n  if (baseURL && !isAbsoluteURL(requestedURL)) {\n    return combineURLs(baseURL, requestedURL);\n  }\n  return requestedURL;\n};\n","'use strict';\n\nvar Cancel = require('./Cancel');\n\n/**\n * A `CancelToken` is an object that can be used to request cancellation of an operation.\n *\n * @class\n * @param {Function} executor The executor function.\n */\nfunction CancelToken(executor) {\n  if (typeof executor !== 'function') {\n    throw new TypeError('executor must be a function.');\n  }\n\n  var resolvePromise;\n  this.promise = new Promise(function promiseExecutor(resolve) {\n    resolvePromise = resolve;\n  });\n\n  var token = this;\n  executor(function cancel(message) {\n    if (token.reason) {\n      // Cancellation has already been requested\n      return;\n    }\n\n    token.reason = new Cancel(message);\n    resolvePromise(token.reason);\n  });\n}\n\n/**\n * Throws a `Cancel` if cancellation has been requested.\n */\nCancelToken.prototype.throwIfRequested = function throwIfRequested() {\n  if (this.reason) {\n    throw this.reason;\n  }\n};\n\n/**\n * Returns an object that contains a new `CancelToken` and a function that, when called,\n * cancels the `CancelToken`.\n */\nCancelToken.source = function source() {\n  var cancel;\n  var token = new CancelToken(function executor(c) {\n    cancel = c;\n  });\n  return {\n    token: token,\n    cancel: cancel\n  };\n};\n\nmodule.exports = CancelToken;\n","/**\r\n * Make a map and return a function for checking if a key\r\n * is in that map.\r\n * IMPORTANT: all calls of this function must be prefixed with\r\n * \\/\\*#\\_\\_PURE\\_\\_\\*\\/\r\n * So that rollup can tree-shake them if necessary.\r\n */\r\nfunction makeMap(str, expectsLowerCase) {\r\n    const map = Object.create(null);\r\n    const list = str.split(',');\r\n    for (let i = 0; i < list.length; i++) {\r\n        map[list[i]] = true;\r\n    }\r\n    return expectsLowerCase ? val => !!map[val.toLowerCase()] : val => !!map[val];\r\n}\n\n/**\r\n * dev only flag -> name mapping\r\n */\r\nconst PatchFlagNames = {\r\n    [1 /* TEXT */]: `TEXT`,\r\n    [2 /* CLASS */]: `CLASS`,\r\n    [4 /* STYLE */]: `STYLE`,\r\n    [8 /* PROPS */]: `PROPS`,\r\n    [16 /* FULL_PROPS */]: `FULL_PROPS`,\r\n    [32 /* HYDRATE_EVENTS */]: `HYDRATE_EVENTS`,\r\n    [64 /* STABLE_FRAGMENT */]: `STABLE_FRAGMENT`,\r\n    [128 /* KEYED_FRAGMENT */]: `KEYED_FRAGMENT`,\r\n    [256 /* UNKEYED_FRAGMENT */]: `UNKEYED_FRAGMENT`,\r\n    [512 /* NEED_PATCH */]: `NEED_PATCH`,\r\n    [1024 /* DYNAMIC_SLOTS */]: `DYNAMIC_SLOTS`,\r\n    [2048 /* DEV_ROOT_FRAGMENT */]: `DEV_ROOT_FRAGMENT`,\r\n    [-1 /* HOISTED */]: `HOISTED`,\r\n    [-2 /* BAIL */]: `BAIL`\r\n};\n\n/**\r\n * Dev only\r\n */\r\nconst slotFlagsText = {\r\n    [1 /* STABLE */]: 'STABLE',\r\n    [2 /* DYNAMIC */]: 'DYNAMIC',\r\n    [3 /* FORWARDED */]: 'FORWARDED'\r\n};\n\nconst GLOBALS_WHITE_LISTED = 'Infinity,undefined,NaN,isFinite,isNaN,parseFloat,parseInt,decodeURI,' +\r\n    'decodeURIComponent,encodeURI,encodeURIComponent,Math,Number,Date,Array,' +\r\n    'Object,Boolean,String,RegExp,Map,Set,JSON,Intl,BigInt';\r\nconst isGloballyWhitelisted = /*#__PURE__*/ makeMap(GLOBALS_WHITE_LISTED);\n\nconst range = 2;\r\nfunction generateCodeFrame(source, start = 0, end = source.length) {\r\n    const lines = source.split(/\\r?\\n/);\r\n    let count = 0;\r\n    const res = [];\r\n    for (let i = 0; i < lines.length; i++) {\r\n        count += lines[i].length + 1;\r\n        if (count >= start) {\r\n            for (let j = i - range; j <= i + range || end > count; j++) {\r\n                if (j < 0 || j >= lines.length)\r\n                    continue;\r\n                const line = j + 1;\r\n                res.push(`${line}${' '.repeat(Math.max(3 - String(line).length, 0))}|  ${lines[j]}`);\r\n                const lineLength = lines[j].length;\r\n                if (j === i) {\r\n                    // push underline\r\n                    const pad = start - (count - lineLength) + 1;\r\n                    const length = Math.max(1, end > count ? lineLength - pad : end - start);\r\n                    res.push(`   |  ` + ' '.repeat(pad) + '^'.repeat(length));\r\n                }\r\n                else if (j > i) {\r\n                    if (end > count) {\r\n                        const length = Math.max(Math.min(end - count, lineLength), 1);\r\n                        res.push(`   |  ` + '^'.repeat(length));\r\n                    }\r\n                    count += lineLength + 1;\r\n                }\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    return res.join('\\n');\r\n}\n\n/**\r\n * On the client we only need to offer special cases for boolean attributes that\r\n * have different names from their corresponding dom properties:\r\n * - itemscope -> N/A\r\n * - allowfullscreen -> allowFullscreen\r\n * - formnovalidate -> formNoValidate\r\n * - ismap -> isMap\r\n * - nomodule -> noModule\r\n * - novalidate -> noValidate\r\n * - readonly -> readOnly\r\n */\r\nconst specialBooleanAttrs = `itemscope,allowfullscreen,formnovalidate,ismap,nomodule,novalidate,readonly`;\r\nconst isSpecialBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs);\r\n/**\r\n * The full list is needed during SSR to produce the correct initial markup.\r\n */\r\nconst isBooleanAttr = /*#__PURE__*/ makeMap(specialBooleanAttrs +\r\n    `,async,autofocus,autoplay,controls,default,defer,disabled,hidden,` +\r\n    `loop,open,required,reversed,scoped,seamless,` +\r\n    `checked,muted,multiple,selected`);\r\nconst unsafeAttrCharRE = /[>/=\"'\\u0009\\u000a\\u000c\\u0020]/;\r\nconst attrValidationCache = {};\r\nfunction isSSRSafeAttrName(name) {\r\n    if (attrValidationCache.hasOwnProperty(name)) {\r\n        return attrValidationCache[name];\r\n    }\r\n    const isUnsafe = unsafeAttrCharRE.test(name);\r\n    if (isUnsafe) {\r\n        console.error(`unsafe attribute name: ${name}`);\r\n    }\r\n    return (attrValidationCache[name] = !isUnsafe);\r\n}\r\nconst propsToAttrMap = {\r\n    acceptCharset: 'accept-charset',\r\n    className: 'class',\r\n    htmlFor: 'for',\r\n    httpEquiv: 'http-equiv'\r\n};\r\n/**\r\n * CSS properties that accept plain numbers\r\n */\r\nconst isNoUnitNumericStyleProp = /*#__PURE__*/ makeMap(`animation-iteration-count,border-image-outset,border-image-slice,` +\r\n    `border-image-width,box-flex,box-flex-group,box-ordinal-group,column-count,` +\r\n    `columns,flex,flex-grow,flex-positive,flex-shrink,flex-negative,flex-order,` +\r\n    `grid-row,grid-row-end,grid-row-span,grid-row-start,grid-column,` +\r\n    `grid-column-end,grid-column-span,grid-column-start,font-weight,line-clamp,` +\r\n    `line-height,opacity,order,orphans,tab-size,widows,z-index,zoom,` +\r\n    // SVG\r\n    `fill-opacity,flood-opacity,stop-opacity,stroke-dasharray,stroke-dashoffset,` +\r\n    `stroke-miterlimit,stroke-opacity,stroke-width`);\r\n/**\r\n * Known attributes, this is used for stringification of runtime static nodes\r\n * so that we don't stringify bindings that cannot be set from HTML.\r\n * Don't also forget to allow `data-*` and `aria-*`!\r\n * Generated from https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes\r\n */\r\nconst isKnownAttr = /*#__PURE__*/ makeMap(`accept,accept-charset,accesskey,action,align,allow,alt,async,` +\r\n    `autocapitalize,autocomplete,autofocus,autoplay,background,bgcolor,` +\r\n    `border,buffered,capture,challenge,charset,checked,cite,class,code,` +\r\n    `codebase,color,cols,colspan,content,contenteditable,contextmenu,controls,` +\r\n    `coords,crossorigin,csp,data,datetime,decoding,default,defer,dir,dirname,` +\r\n    `disabled,download,draggable,dropzone,enctype,enterkeyhint,for,form,` +\r\n    `formaction,formenctype,formmethod,formnovalidate,formtarget,headers,` +\r\n    `height,hidden,high,href,hreflang,http-equiv,icon,id,importance,integrity,` +\r\n    `ismap,itemprop,keytype,kind,label,lang,language,loading,list,loop,low,` +\r\n    `manifest,max,maxlength,minlength,media,min,multiple,muted,name,novalidate,` +\r\n    `open,optimum,pattern,ping,placeholder,poster,preload,radiogroup,readonly,` +\r\n    `referrerpolicy,rel,required,reversed,rows,rowspan,sandbox,scope,scoped,` +\r\n    `selected,shape,size,sizes,slot,span,spellcheck,src,srcdoc,srclang,srcset,` +\r\n    `start,step,style,summary,tabindex,target,title,translate,type,usemap,` +\r\n    `value,width,wrap`);\n\nfunction normalizeStyle(value) {\r\n    if (isArray(value)) {\r\n        const res = {};\r\n        for (let i = 0; i < value.length; i++) {\r\n            const item = value[i];\r\n            const normalized = normalizeStyle(isString(item) ? parseStringStyle(item) : item);\r\n            if (normalized) {\r\n                for (const key in normalized) {\r\n                    res[key] = normalized[key];\r\n                }\r\n            }\r\n        }\r\n        return res;\r\n    }\r\n    else if (isObject(value)) {\r\n        return value;\r\n    }\r\n}\r\nconst listDelimiterRE = /;(?![^(]*\\))/g;\r\nconst propertyDelimiterRE = /:(.+)/;\r\nfunction parseStringStyle(cssText) {\r\n    const ret = {};\r\n    cssText.split(listDelimiterRE).forEach(item => {\r\n        if (item) {\r\n            const tmp = item.split(propertyDelimiterRE);\r\n            tmp.length > 1 && (ret[tmp[0].trim()] = tmp[1].trim());\r\n        }\r\n    });\r\n    return ret;\r\n}\r\nfunction stringifyStyle(styles) {\r\n    let ret = '';\r\n    if (!styles) {\r\n        return ret;\r\n    }\r\n    for (const key in styles) {\r\n        const value = styles[key];\r\n        const normalizedKey = key.startsWith(`--`) ? key : hyphenate(key);\r\n        if (isString(value) ||\r\n            (typeof value === 'number' && isNoUnitNumericStyleProp(normalizedKey))) {\r\n            // only render valid values\r\n            ret += `${normalizedKey}:${value};`;\r\n        }\r\n    }\r\n    return ret;\r\n}\r\nfunction normalizeClass(value) {\r\n    let res = '';\r\n    if (isString(value)) {\r\n        res = value;\r\n    }\r\n    else if (isArray(value)) {\r\n        for (let i = 0; i < value.length; i++) {\r\n            const normalized = normalizeClass(value[i]);\r\n            if (normalized) {\r\n                res += normalized + ' ';\r\n            }\r\n        }\r\n    }\r\n    else if (isObject(value)) {\r\n        for (const name in value) {\r\n            if (value[name]) {\r\n                res += name + ' ';\r\n            }\r\n        }\r\n    }\r\n    return res.trim();\r\n}\n\n// These tag configs are shared between compiler-dom and runtime-dom, so they\r\n// https://developer.mozilla.org/en-US/docs/Web/HTML/Element\r\nconst HTML_TAGS = 'html,body,base,head,link,meta,style,title,address,article,aside,footer,' +\r\n    'header,h1,h2,h3,h4,h5,h6,hgroup,nav,section,div,dd,dl,dt,figcaption,' +\r\n    'figure,picture,hr,img,li,main,ol,p,pre,ul,a,b,abbr,bdi,bdo,br,cite,code,' +\r\n    'data,dfn,em,i,kbd,mark,q,rp,rt,rtc,ruby,s,samp,small,span,strong,sub,sup,' +\r\n    'time,u,var,wbr,area,audio,map,track,video,embed,object,param,source,' +\r\n    'canvas,script,noscript,del,ins,caption,col,colgroup,table,thead,tbody,td,' +\r\n    'th,tr,button,datalist,fieldset,form,input,label,legend,meter,optgroup,' +\r\n    'option,output,progress,select,textarea,details,dialog,menu,' +\r\n    'summary,template,blockquote,iframe,tfoot';\r\n// https://developer.mozilla.org/en-US/docs/Web/SVG/Element\r\nconst SVG_TAGS = 'svg,animate,animateMotion,animateTransform,circle,clipPath,color-profile,' +\r\n    'defs,desc,discard,ellipse,feBlend,feColorMatrix,feComponentTransfer,' +\r\n    'feComposite,feConvolveMatrix,feDiffuseLighting,feDisplacementMap,' +\r\n    'feDistanceLight,feDropShadow,feFlood,feFuncA,feFuncB,feFuncG,feFuncR,' +\r\n    'feGaussianBlur,feImage,feMerge,feMergeNode,feMorphology,feOffset,' +\r\n    'fePointLight,feSpecularLighting,feSpotLight,feTile,feTurbulence,filter,' +\r\n    'foreignObject,g,hatch,hatchpath,image,line,linearGradient,marker,mask,' +\r\n    'mesh,meshgradient,meshpatch,meshrow,metadata,mpath,path,pattern,' +\r\n    'polygon,polyline,radialGradient,rect,set,solidcolor,stop,switch,symbol,' +\r\n    'text,textPath,title,tspan,unknown,use,view';\r\nconst VOID_TAGS = 'area,base,br,col,embed,hr,img,input,link,meta,param,source,track,wbr';\r\nconst isHTMLTag = /*#__PURE__*/ makeMap(HTML_TAGS);\r\nconst isSVGTag = /*#__PURE__*/ makeMap(SVG_TAGS);\r\nconst isVoidTag = /*#__PURE__*/ makeMap(VOID_TAGS);\n\nconst escapeRE = /[\"'&<>]/;\r\nfunction escapeHtml(string) {\r\n    const str = '' + string;\r\n    const match = escapeRE.exec(str);\r\n    if (!match) {\r\n        return str;\r\n    }\r\n    let html = '';\r\n    let escaped;\r\n    let index;\r\n    let lastIndex = 0;\r\n    for (index = match.index; index < str.length; index++) {\r\n        switch (str.charCodeAt(index)) {\r\n            case 34: // \"\r\n                escaped = '&quot;';\r\n                break;\r\n            case 38: // &\r\n                escaped = '&amp;';\r\n                break;\r\n            case 39: // '\r\n                escaped = '&#39;';\r\n                break;\r\n            case 60: // <\r\n                escaped = '&lt;';\r\n                break;\r\n            case 62: // >\r\n                escaped = '&gt;';\r\n                break;\r\n            default:\r\n                continue;\r\n        }\r\n        if (lastIndex !== index) {\r\n            html += str.substring(lastIndex, index);\r\n        }\r\n        lastIndex = index + 1;\r\n        html += escaped;\r\n    }\r\n    return lastIndex !== index ? html + str.substring(lastIndex, index) : html;\r\n}\r\n// https://www.w3.org/TR/html52/syntax.html#comments\r\nconst commentStripRE = /^-?>|<!--|-->|--!>|<!-$/g;\r\nfunction escapeHtmlComment(src) {\r\n    return src.replace(commentStripRE, '');\r\n}\n\nfunction looseCompareArrays(a, b) {\r\n    if (a.length !== b.length)\r\n        return false;\r\n    let equal = true;\r\n    for (let i = 0; equal && i < a.length; i++) {\r\n        equal = looseEqual(a[i], b[i]);\r\n    }\r\n    return equal;\r\n}\r\nfunction looseEqual(a, b) {\r\n    if (a === b)\r\n        return true;\r\n    let aValidType = isDate(a);\r\n    let bValidType = isDate(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? a.getTime() === b.getTime() : false;\r\n    }\r\n    aValidType = isArray(a);\r\n    bValidType = isArray(b);\r\n    if (aValidType || bValidType) {\r\n        return aValidType && bValidType ? looseCompareArrays(a, b) : false;\r\n    }\r\n    aValidType = isObject(a);\r\n    bValidType = isObject(b);\r\n    if (aValidType || bValidType) {\r\n        /* istanbul ignore if: this if will probably never be called */\r\n        if (!aValidType || !bValidType) {\r\n            return false;\r\n        }\r\n        const aKeysCount = Object.keys(a).length;\r\n        const bKeysCount = Object.keys(b).length;\r\n        if (aKeysCount !== bKeysCount) {\r\n            return false;\r\n        }\r\n        for (const key in a) {\r\n            const aHasKey = a.hasOwnProperty(key);\r\n            const bHasKey = b.hasOwnProperty(key);\r\n            if ((aHasKey && !bHasKey) ||\r\n                (!aHasKey && bHasKey) ||\r\n                !looseEqual(a[key], b[key])) {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n    return String(a) === String(b);\r\n}\r\nfunction looseIndexOf(arr, val) {\r\n    return arr.findIndex(item => looseEqual(item, val));\r\n}\n\n/**\r\n * For converting {{ interpolation }} values to displayed strings.\r\n * @private\r\n */\r\nconst toDisplayString = (val) => {\r\n    return val == null\r\n        ? ''\r\n        : isObject(val)\r\n            ? JSON.stringify(val, replacer, 2)\r\n            : String(val);\r\n};\r\nconst replacer = (_key, val) => {\r\n    if (isMap(val)) {\r\n        return {\r\n            [`Map(${val.size})`]: [...val.entries()].reduce((entries, [key, val]) => {\r\n                entries[`${key} =>`] = val;\r\n                return entries;\r\n            }, {})\r\n        };\r\n    }\r\n    else if (isSet(val)) {\r\n        return {\r\n            [`Set(${val.size})`]: [...val.values()]\r\n        };\r\n    }\r\n    else if (isObject(val) && !isArray(val) && !isPlainObject(val)) {\r\n        return String(val);\r\n    }\r\n    return val;\r\n};\n\n/**\r\n * List of @babel/parser plugins that are used for template expression\r\n * transforms and SFC script transforms. By default we enable proposals slated\r\n * for ES2020. This will need to be updated as the spec moves forward.\r\n * Full list at https://babeljs.io/docs/en/next/babel-parser#plugins\r\n */\r\nconst babelParserDefaultPlugins = [\r\n    'bigInt',\r\n    'optionalChaining',\r\n    'nullishCoalescingOperator'\r\n];\r\nconst EMPTY_OBJ = (process.env.NODE_ENV !== 'production')\r\n    ? Object.freeze({})\r\n    : {};\r\nconst EMPTY_ARR = (process.env.NODE_ENV !== 'production') ? Object.freeze([]) : [];\r\nconst NOOP = () => { };\r\n/**\r\n * Always return false.\r\n */\r\nconst NO = () => false;\r\nconst onRE = /^on[^a-z]/;\r\nconst isOn = (key) => onRE.test(key);\r\nconst isModelListener = (key) => key.startsWith('onUpdate:');\r\nconst extend = Object.assign;\r\nconst remove = (arr, el) => {\r\n    const i = arr.indexOf(el);\r\n    if (i > -1) {\r\n        arr.splice(i, 1);\r\n    }\r\n};\r\nconst hasOwnProperty = Object.prototype.hasOwnProperty;\r\nconst hasOwn = (val, key) => hasOwnProperty.call(val, key);\r\nconst isArray = Array.isArray;\r\nconst isMap = (val) => toTypeString(val) === '[object Map]';\r\nconst isSet = (val) => toTypeString(val) === '[object Set]';\r\nconst isDate = (val) => val instanceof Date;\r\nconst isFunction = (val) => typeof val === 'function';\r\nconst isString = (val) => typeof val === 'string';\r\nconst isSymbol = (val) => typeof val === 'symbol';\r\nconst isObject = (val) => val !== null && typeof val === 'object';\r\nconst isPromise = (val) => {\r\n    return isObject(val) && isFunction(val.then) && isFunction(val.catch);\r\n};\r\nconst objectToString = Object.prototype.toString;\r\nconst toTypeString = (value) => objectToString.call(value);\r\nconst toRawType = (value) => {\r\n    // extract \"RawType\" from strings like \"[object RawType]\"\r\n    return toTypeString(value).slice(8, -1);\r\n};\r\nconst isPlainObject = (val) => toTypeString(val) === '[object Object]';\r\nconst isIntegerKey = (key) => isString(key) &&\r\n    key !== 'NaN' &&\r\n    key[0] !== '-' &&\r\n    '' + parseInt(key, 10) === key;\r\nconst isReservedProp = /*#__PURE__*/ makeMap(\r\n// the leading comma is intentional so empty string \"\" is also included\r\n',key,ref,' +\r\n    'onVnodeBeforeMount,onVnodeMounted,' +\r\n    'onVnodeBeforeUpdate,onVnodeUpdated,' +\r\n    'onVnodeBeforeUnmount,onVnodeUnmounted');\r\nconst cacheStringFunction = (fn) => {\r\n    const cache = Object.create(null);\r\n    return ((str) => {\r\n        const hit = cache[str];\r\n        return hit || (cache[str] = fn(str));\r\n    });\r\n};\r\nconst camelizeRE = /-(\\w)/g;\r\n/**\r\n * @private\r\n */\r\nconst camelize = cacheStringFunction((str) => {\r\n    return str.replace(camelizeRE, (_, c) => (c ? c.toUpperCase() : ''));\r\n});\r\nconst hyphenateRE = /\\B([A-Z])/g;\r\n/**\r\n * @private\r\n */\r\nconst hyphenate = cacheStringFunction((str) => str.replace(hyphenateRE, '-$1').toLowerCase());\r\n/**\r\n * @private\r\n */\r\nconst capitalize = cacheStringFunction((str) => str.charAt(0).toUpperCase() + str.slice(1));\r\n/**\r\n * @private\r\n */\r\nconst toHandlerKey = cacheStringFunction((str) => (str ? `on${capitalize(str)}` : ``));\r\n// compare whether a value has changed, accounting for NaN.\r\nconst hasChanged = (value, oldValue) => value !== oldValue && (value === value || oldValue === oldValue);\r\nconst invokeArrayFns = (fns, arg) => {\r\n    for (let i = 0; i < fns.length; i++) {\r\n        fns[i](arg);\r\n    }\r\n};\r\nconst def = (obj, key, value) => {\r\n    Object.defineProperty(obj, key, {\r\n        configurable: true,\r\n        enumerable: false,\r\n        value\r\n    });\r\n};\r\nconst toNumber = (val) => {\r\n    const n = parseFloat(val);\r\n    return isNaN(n) ? val : n;\r\n};\r\nlet _globalThis;\r\nconst getGlobalThis = () => {\r\n    return (_globalThis ||\r\n        (_globalThis =\r\n            typeof globalThis !== 'undefined'\r\n                ? globalThis\r\n                : typeof self !== 'undefined'\r\n                    ? self\r\n                    : typeof window !== 'undefined'\r\n                        ? window\r\n                        : typeof global !== 'undefined'\r\n                            ? global\r\n                            : {}));\r\n};\n\nexport { EMPTY_ARR, EMPTY_OBJ, NO, NOOP, PatchFlagNames, babelParserDefaultPlugins, camelize, capitalize, def, escapeHtml, escapeHtmlComment, extend, generateCodeFrame, getGlobalThis, hasChanged, hasOwn, hyphenate, invokeArrayFns, isArray, isBooleanAttr, isDate, isFunction, isGloballyWhitelisted, isHTMLTag, isIntegerKey, isKnownAttr, isMap, isModelListener, isNoUnitNumericStyleProp, isObject, isOn, isPlainObject, isPromise, isReservedProp, isSSRSafeAttrName, isSVGTag, isSet, isSpecialBooleanAttr, isString, isSymbol, isVoidTag, looseEqual, looseIndexOf, makeMap, normalizeClass, normalizeStyle, objectToString, parseStringStyle, propsToAttrMap, remove, slotFlagsText, stringifyStyle, toDisplayString, toHandlerKey, toNumber, toRawType, toTypeString };\n","export function getDevtoolsGlobalHook() {\n    return getTarget().__VUE_DEVTOOLS_GLOBAL_HOOK__;\n}\nexport function getTarget() {\n    // @ts-ignore\n    return typeof navigator !== 'undefined'\n        ? window\n        : typeof global !== 'undefined'\n            ? global\n            : {};\n}\n","'use strict';\n\nvar utils = require('./../utils');\nvar settle = require('./../core/settle');\nvar cookies = require('./../helpers/cookies');\nvar buildURL = require('./../helpers/buildURL');\nvar buildFullPath = require('../core/buildFullPath');\nvar parseHeaders = require('./../helpers/parseHeaders');\nvar isURLSameOrigin = require('./../helpers/isURLSameOrigin');\nvar createError = require('../core/createError');\n\nmodule.exports = function xhrAdapter(config) {\n  return new Promise(function dispatchXhrRequest(resolve, reject) {\n    var requestData = config.data;\n    var requestHeaders = config.headers;\n\n    if (utils.isFormData(requestData)) {\n      delete requestHeaders['Content-Type']; // Let the browser set it\n    }\n\n    var request = new XMLHttpRequest();\n\n    // HTTP basic authentication\n    if (config.auth) {\n      var username = config.auth.username || '';\n      var password = config.auth.password ? unescape(encodeURIComponent(config.auth.password)) : '';\n      requestHeaders.Authorization = 'Basic ' + btoa(username + ':' + password);\n    }\n\n    var fullPath = buildFullPath(config.baseURL, config.url);\n    request.open(config.method.toUpperCase(), buildURL(fullPath, config.params, config.paramsSerializer), true);\n\n    // Set the request timeout in MS\n    request.timeout = config.timeout;\n\n    // Listen for ready state\n    request.onreadystatechange = function handleLoad() {\n      if (!request || request.readyState !== 4) {\n        return;\n      }\n\n      // The request errored out and we didn't get a response, this will be\n      // handled by onerror instead\n      // With one exception: request that using file: protocol, most browsers\n      // will return status as 0 even though it's a successful request\n      if (request.status === 0 && !(request.responseURL && request.responseURL.indexOf('file:') === 0)) {\n        return;\n      }\n\n      // Prepare the response\n      var responseHeaders = 'getAllResponseHeaders' in request ? parseHeaders(request.getAllResponseHeaders()) : null;\n      var responseData = !config.responseType || config.responseType === 'text' ? request.responseText : request.response;\n      var response = {\n        data: responseData,\n        status: request.status,\n        statusText: request.statusText,\n        headers: responseHeaders,\n        config: config,\n        request: request\n      };\n\n      settle(resolve, reject, response);\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle browser request cancellation (as opposed to a manual cancellation)\n    request.onabort = function handleAbort() {\n      if (!request) {\n        return;\n      }\n\n      reject(createError('Request aborted', config, 'ECONNABORTED', request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle low level network errors\n    request.onerror = function handleError() {\n      // Real errors are hidden from us by the browser\n      // onerror should only fire if it's a network error\n      reject(createError('Network Error', config, null, request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Handle timeout\n    request.ontimeout = function handleTimeout() {\n      var timeoutErrorMessage = 'timeout of ' + config.timeout + 'ms exceeded';\n      if (config.timeoutErrorMessage) {\n        timeoutErrorMessage = config.timeoutErrorMessage;\n      }\n      reject(createError(timeoutErrorMessage, config, 'ECONNABORTED',\n        request));\n\n      // Clean up request\n      request = null;\n    };\n\n    // Add xsrf header\n    // This is only done if running in a standard browser environment.\n    // Specifically not if we're in a web worker, or react-native.\n    if (utils.isStandardBrowserEnv()) {\n      // Add xsrf header\n      var xsrfValue = (config.withCredentials || isURLSameOrigin(fullPath)) && config.xsrfCookieName ?\n        cookies.read(config.xsrfCookieName) :\n        undefined;\n\n      if (xsrfValue) {\n        requestHeaders[config.xsrfHeaderName] = xsrfValue;\n      }\n    }\n\n    // Add headers to the request\n    if ('setRequestHeader' in request) {\n      utils.forEach(requestHeaders, function setRequestHeader(val, key) {\n        if (typeof requestData === 'undefined' && key.toLowerCase() === 'content-type') {\n          // Remove Content-Type if data is undefined\n          delete requestHeaders[key];\n        } else {\n          // Otherwise add header to the request\n          request.setRequestHeader(key, val);\n        }\n      });\n    }\n\n    // Add withCredentials to request if needed\n    if (!utils.isUndefined(config.withCredentials)) {\n      request.withCredentials = !!config.withCredentials;\n    }\n\n    // Add responseType to request if needed\n    if (config.responseType) {\n      try {\n        request.responseType = config.responseType;\n      } catch (e) {\n        // Expected DOMException thrown by browsers not compatible XMLHttpRequest Level 2.\n        // But, this can be suppressed for 'json' type as it can be parsed by default 'transformResponse' function.\n        if (config.responseType !== 'json') {\n          throw e;\n        }\n      }\n    }\n\n    // Handle progress if needed\n    if (typeof config.onDownloadProgress === 'function') {\n      request.addEventListener('progress', config.onDownloadProgress);\n    }\n\n    // Not all browsers support upload events\n    if (typeof config.onUploadProgress === 'function' && request.upload) {\n      request.upload.addEventListener('progress', config.onUploadProgress);\n    }\n\n    if (config.cancelToken) {\n      // Handle cancellation\n      config.cancelToken.promise.then(function onCanceled(cancel) {\n        if (!request) {\n          return;\n        }\n\n        request.abort();\n        reject(cancel);\n        // Clean up request\n        request = null;\n      });\n    }\n\n    if (!requestData) {\n      requestData = null;\n    }\n\n    // Send the request\n    request.send(requestData);\n  });\n};\n","export const HOOK_SETUP = 'devtools-plugin:setup';\n","module.exports = require('./lib/axios');","'use strict';\n\nvar utils = require('./../utils');\n\n// Headers whose duplicates are ignored by node\n// c.f. https://nodejs.org/api/http.html#http_message_headers\nvar ignoreDuplicateOf = [\n  'age', 'authorization', 'content-length', 'content-type', 'etag',\n  'expires', 'from', 'host', 'if-modified-since', 'if-unmodified-since',\n  'last-modified', 'location', 'max-forwards', 'proxy-authorization',\n  'referer', 'retry-after', 'user-agent'\n];\n\n/**\n * Parse headers into an object\n *\n * ```\n * Date: Wed, 27 Aug 2014 08:58:49 GMT\n * Content-Type: application/json\n * Connection: keep-alive\n * Transfer-Encoding: chunked\n * ```\n *\n * @param {String} headers Headers needing to be parsed\n * @returns {Object} Headers parsed into an object\n */\nmodule.exports = function parseHeaders(headers) {\n  var parsed = {};\n  var key;\n  var val;\n  var i;\n\n  if (!headers) { return parsed; }\n\n  utils.forEach(headers.split('\\n'), function parser(line) {\n    i = line.indexOf(':');\n    key = utils.trim(line.substr(0, i)).toLowerCase();\n    val = utils.trim(line.substr(i + 1));\n\n    if (key) {\n      if (parsed[key] && ignoreDuplicateOf.indexOf(key) >= 0) {\n        return;\n      }\n      if (key === 'set-cookie') {\n        parsed[key] = (parsed[key] ? parsed[key] : []).concat([val]);\n      } else {\n        parsed[key] = parsed[key] ? parsed[key] + ', ' + val : val;\n      }\n    }\n  });\n\n  return parsed;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\n/**\n * Transform the data for a request or a response\n *\n * @param {Object|String} data The data to be transformed\n * @param {Array} headers The headers for the request or response\n * @param {Array|Function} fns A single function or Array of functions\n * @returns {*} The resulting transformed data\n */\nmodule.exports = function transformData(data, headers, fns) {\n  /*eslint no-param-reassign:0*/\n  utils.forEach(fns, function transform(fn) {\n    data = fn(data, headers);\n  });\n\n  return data;\n};\n","'use strict';\n\nvar bind = require('./helpers/bind');\n\n/*global toString:true*/\n\n// utils is a library of generic helper functions non-specific to axios\n\nvar toString = Object.prototype.toString;\n\n/**\n * Determine if a value is an Array\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Array, otherwise false\n */\nfunction isArray(val) {\n  return toString.call(val) === '[object Array]';\n}\n\n/**\n * Determine if a value is undefined\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if the value is undefined, otherwise false\n */\nfunction isUndefined(val) {\n  return typeof val === 'undefined';\n}\n\n/**\n * Determine if a value is a Buffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Buffer, otherwise false\n */\nfunction isBuffer(val) {\n  return val !== null && !isUndefined(val) && val.constructor !== null && !isUndefined(val.constructor)\n    && typeof val.constructor.isBuffer === 'function' && val.constructor.isBuffer(val);\n}\n\n/**\n * Determine if a value is an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an ArrayBuffer, otherwise false\n */\nfunction isArrayBuffer(val) {\n  return toString.call(val) === '[object ArrayBuffer]';\n}\n\n/**\n * Determine if a value is a FormData\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an FormData, otherwise false\n */\nfunction isFormData(val) {\n  return (typeof FormData !== 'undefined') && (val instanceof FormData);\n}\n\n/**\n * Determine if a value is a view on an ArrayBuffer\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a view on an ArrayBuffer, otherwise false\n */\nfunction isArrayBufferView(val) {\n  var result;\n  if ((typeof ArrayBuffer !== 'undefined') && (ArrayBuffer.isView)) {\n    result = ArrayBuffer.isView(val);\n  } else {\n    result = (val) && (val.buffer) && (val.buffer instanceof ArrayBuffer);\n  }\n  return result;\n}\n\n/**\n * Determine if a value is a String\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a String, otherwise false\n */\nfunction isString(val) {\n  return typeof val === 'string';\n}\n\n/**\n * Determine if a value is a Number\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Number, otherwise false\n */\nfunction isNumber(val) {\n  return typeof val === 'number';\n}\n\n/**\n * Determine if a value is an Object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is an Object, otherwise false\n */\nfunction isObject(val) {\n  return val !== null && typeof val === 'object';\n}\n\n/**\n * Determine if a value is a plain Object\n *\n * @param {Object} val The value to test\n * @return {boolean} True if value is a plain Object, otherwise false\n */\nfunction isPlainObject(val) {\n  if (toString.call(val) !== '[object Object]') {\n    return false;\n  }\n\n  var prototype = Object.getPrototypeOf(val);\n  return prototype === null || prototype === Object.prototype;\n}\n\n/**\n * Determine if a value is a Date\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Date, otherwise false\n */\nfunction isDate(val) {\n  return toString.call(val) === '[object Date]';\n}\n\n/**\n * Determine if a value is a File\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a File, otherwise false\n */\nfunction isFile(val) {\n  return toString.call(val) === '[object File]';\n}\n\n/**\n * Determine if a value is a Blob\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Blob, otherwise false\n */\nfunction isBlob(val) {\n  return toString.call(val) === '[object Blob]';\n}\n\n/**\n * Determine if a value is a Function\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Function, otherwise false\n */\nfunction isFunction(val) {\n  return toString.call(val) === '[object Function]';\n}\n\n/**\n * Determine if a value is a Stream\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a Stream, otherwise false\n */\nfunction isStream(val) {\n  return isObject(val) && isFunction(val.pipe);\n}\n\n/**\n * Determine if a value is a URLSearchParams object\n *\n * @param {Object} val The value to test\n * @returns {boolean} True if value is a URLSearchParams object, otherwise false\n */\nfunction isURLSearchParams(val) {\n  return typeof URLSearchParams !== 'undefined' && val instanceof URLSearchParams;\n}\n\n/**\n * Trim excess whitespace off the beginning and end of a string\n *\n * @param {String} str The String to trim\n * @returns {String} The String freed of excess whitespace\n */\nfunction trim(str) {\n  return str.replace(/^\\s*/, '').replace(/\\s*$/, '');\n}\n\n/**\n * Determine if we're running in a standard browser environment\n *\n * This allows axios to run in a web worker, and react-native.\n * Both environments support XMLHttpRequest, but not fully standard globals.\n *\n * web workers:\n *  typeof window -> undefined\n *  typeof document -> undefined\n *\n * react-native:\n *  navigator.product -> 'ReactNative'\n * nativescript\n *  navigator.product -> 'NativeScript' or 'NS'\n */\nfunction isStandardBrowserEnv() {\n  if (typeof navigator !== 'undefined' && (navigator.product === 'ReactNative' ||\n                                           navigator.product === 'NativeScript' ||\n                                           navigator.product === 'NS')) {\n    return false;\n  }\n  return (\n    typeof window !== 'undefined' &&\n    typeof document !== 'undefined'\n  );\n}\n\n/**\n * Iterate over an Array or an Object invoking a function for each item.\n *\n * If `obj` is an Array callback will be called passing\n * the value, index, and complete array for each item.\n *\n * If 'obj' is an Object callback will be called passing\n * the value, key, and complete object for each property.\n *\n * @param {Object|Array} obj The object to iterate\n * @param {Function} fn The callback to invoke for each item\n */\nfunction forEach(obj, fn) {\n  // Don't bother if no value provided\n  if (obj === null || typeof obj === 'undefined') {\n    return;\n  }\n\n  // Force an array if not already something iterable\n  if (typeof obj !== 'object') {\n    /*eslint no-param-reassign:0*/\n    obj = [obj];\n  }\n\n  if (isArray(obj)) {\n    // Iterate over array values\n    for (var i = 0, l = obj.length; i < l; i++) {\n      fn.call(null, obj[i], i, obj);\n    }\n  } else {\n    // Iterate over object keys\n    for (var key in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, key)) {\n        fn.call(null, obj[key], key, obj);\n      }\n    }\n  }\n}\n\n/**\n * Accepts varargs expecting each argument to be an object, then\n * immutably merges the properties of each object and returns result.\n *\n * When multiple objects contain the same key the later object in\n * the arguments list will take precedence.\n *\n * Example:\n *\n * ```js\n * var result = merge({foo: 123}, {foo: 456});\n * console.log(result.foo); // outputs 456\n * ```\n *\n * @param {Object} obj1 Object to merge\n * @returns {Object} Result of all merge properties\n */\nfunction merge(/* obj1, obj2, obj3, ... */) {\n  var result = {};\n  function assignValue(val, key) {\n    if (isPlainObject(result[key]) && isPlainObject(val)) {\n      result[key] = merge(result[key], val);\n    } else if (isPlainObject(val)) {\n      result[key] = merge({}, val);\n    } else if (isArray(val)) {\n      result[key] = val.slice();\n    } else {\n      result[key] = val;\n    }\n  }\n\n  for (var i = 0, l = arguments.length; i < l; i++) {\n    forEach(arguments[i], assignValue);\n  }\n  return result;\n}\n\n/**\n * Extends object a by mutably adding to it the properties of object b.\n *\n * @param {Object} a The object to be extended\n * @param {Object} b The object to copy properties from\n * @param {Object} thisArg The object to bind function to\n * @return {Object} The resulting value of object a\n */\nfunction extend(a, b, thisArg) {\n  forEach(b, function assignValue(val, key) {\n    if (thisArg && typeof val === 'function') {\n      a[key] = bind(val, thisArg);\n    } else {\n      a[key] = val;\n    }\n  });\n  return a;\n}\n\n/**\n * Remove byte order marker. This catches EF BB BF (the UTF-8 BOM)\n *\n * @param {string} content with BOM\n * @return {string} content value without BOM\n */\nfunction stripBOM(content) {\n  if (content.charCodeAt(0) === 0xFEFF) {\n    content = content.slice(1);\n  }\n  return content;\n}\n\nmodule.exports = {\n  isArray: isArray,\n  isArrayBuffer: isArrayBuffer,\n  isBuffer: isBuffer,\n  isFormData: isFormData,\n  isArrayBufferView: isArrayBufferView,\n  isString: isString,\n  isNumber: isNumber,\n  isObject: isObject,\n  isPlainObject: isPlainObject,\n  isUndefined: isUndefined,\n  isDate: isDate,\n  isFile: isFile,\n  isBlob: isBlob,\n  isFunction: isFunction,\n  isStream: isStream,\n  isURLSearchParams: isURLSearchParams,\n  isStandardBrowserEnv: isStandardBrowserEnv,\n  forEach: forEach,\n  merge: merge,\n  extend: extend,\n  trim: trim,\n  stripBOM: stripBOM\n};\n","'use strict';\n\nvar utils = require('../utils');\n\nmodule.exports = function normalizeHeaderName(headers, normalizedName) {\n  utils.forEach(headers, function processHeader(value, name) {\n    if (name !== normalizedName && name.toUpperCase() === normalizedName.toUpperCase()) {\n      headers[normalizedName] = value;\n      delete headers[name];\n    }\n  });\n};\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","'use strict';\n\nvar utils = require('./utils');\nvar bind = require('./helpers/bind');\nvar Axios = require('./core/Axios');\nvar mergeConfig = require('./core/mergeConfig');\nvar defaults = require('./defaults');\n\n/**\n * Create an instance of Axios\n *\n * @param {Object} defaultConfig The default config for the instance\n * @return {Axios} A new instance of Axios\n */\nfunction createInstance(defaultConfig) {\n  var context = new Axios(defaultConfig);\n  var instance = bind(Axios.prototype.request, context);\n\n  // Copy axios.prototype to instance\n  utils.extend(instance, Axios.prototype, context);\n\n  // Copy context to instance\n  utils.extend(instance, context);\n\n  return instance;\n}\n\n// Create the default instance to be exported\nvar axios = createInstance(defaults);\n\n// Expose Axios class to allow class inheritance\naxios.Axios = Axios;\n\n// Factory for creating new instances\naxios.create = function create(instanceConfig) {\n  return createInstance(mergeConfig(axios.defaults, instanceConfig));\n};\n\n// Expose Cancel & CancelToken\naxios.Cancel = require('./cancel/Cancel');\naxios.CancelToken = require('./cancel/CancelToken');\naxios.isCancel = require('./cancel/isCancel');\n\n// Expose all/spread\naxios.all = function all(promises) {\n  return Promise.all(promises);\n};\naxios.spread = require('./helpers/spread');\n\n// Expose isAxiosError\naxios.isAxiosError = require('./helpers/isAxiosError');\n\nmodule.exports = axios;\n\n// Allow use of default import syntax in TypeScript\nmodule.exports.default = axios;\n","'use strict';\n\n/**\n * Determines whether the specified URL is absolute\n *\n * @param {string} url The URL to test\n * @returns {boolean} True if the specified URL is absolute, otherwise false\n */\nmodule.exports = function isAbsoluteURL(url) {\n  // A URL is considered absolute if it begins with \"<scheme>://\" or \"//\" (protocol-relative URL).\n  // RFC 3986 defines scheme name as a sequence of characters beginning with a letter and followed\n  // by any combination of letters, digits, plus, period, or hyphen.\n  return /^([a-z][a-z\\d\\+\\-\\.]*:)?\\/\\//i.test(url);\n};\n","// .dirname, .basename, and .extname methods are extracted from Node.js v8.11.1,\n// backported and transplited with Babel, with backwards-compat fixes\n\n// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  if (path.length === 0) return '.';\n  var code = path.charCodeAt(0);\n  var hasRoot = code === 47 /*/*/;\n  var end = -1;\n  var matchedSlash = true;\n  for (var i = path.length - 1; i >= 1; --i) {\n    code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        if (!matchedSlash) {\n          end = i;\n          break;\n        }\n      } else {\n      // We saw the first non-path separator\n      matchedSlash = false;\n    }\n  }\n\n  if (end === -1) return hasRoot ? '/' : '.';\n  if (hasRoot && end === 1) {\n    // return '//';\n    // Backwards-compat fix:\n    return '/';\n  }\n  return path.slice(0, end);\n};\n\nfunction basename(path) {\n  if (typeof path !== 'string') path = path + '';\n\n  var start = 0;\n  var end = -1;\n  var matchedSlash = true;\n  var i;\n\n  for (i = path.length - 1; i >= 0; --i) {\n    if (path.charCodeAt(i) === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          start = i + 1;\n          break;\n        }\n      } else if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // path component\n      matchedSlash = false;\n      end = i + 1;\n    }\n  }\n\n  if (end === -1) return '';\n  return path.slice(start, end);\n}\n\n// Uses a mixed approach for backwards-compatibility, as ext behavior changed\n// in new Node.js versions, so only basename() above is backported here\nexports.basename = function (path, ext) {\n  var f = basename(path);\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\nexports.extname = function (path) {\n  if (typeof path !== 'string') path = path + '';\n  var startDot = -1;\n  var startPart = 0;\n  var end = -1;\n  var matchedSlash = true;\n  // Track the state of characters (if any) we see before our first dot and\n  // after any path separator we find\n  var preDotState = 0;\n  for (var i = path.length - 1; i >= 0; --i) {\n    var code = path.charCodeAt(i);\n    if (code === 47 /*/*/) {\n        // If we reached a path separator that was not part of a set of path\n        // separators at the end of the string, stop now\n        if (!matchedSlash) {\n          startPart = i + 1;\n          break;\n        }\n        continue;\n      }\n    if (end === -1) {\n      // We saw the first non-path separator, mark this as the end of our\n      // extension\n      matchedSlash = false;\n      end = i + 1;\n    }\n    if (code === 46 /*.*/) {\n        // If this is our first dot, mark it as the start of our extension\n        if (startDot === -1)\n          startDot = i;\n        else if (preDotState !== 1)\n          preDotState = 1;\n    } else if (startDot !== -1) {\n      // We saw a non-dot and non-path separator before our dot, so we should\n      // have a good chance at having a non-empty extension\n      preDotState = -1;\n    }\n  }\n\n  if (startDot === -1 || end === -1 ||\n      // We saw a non-dot character immediately before the dot\n      preDotState === 0 ||\n      // The (right-most) trimmed path component is exactly '..'\n      preDotState === 1 && startDot === end - 1 && startDot === startPart + 1) {\n    return '';\n  }\n  return path.slice(startDot, end);\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n","'use strict';\n\n/**\n * Creates a new URL by combining the specified URLs\n *\n * @param {string} baseURL The base URL\n * @param {string} relativeURL The relative URL\n * @returns {string} The combined URL\n */\nmodule.exports = function combineURLs(baseURL, relativeURL) {\n  return relativeURL\n    ? baseURL.replace(/\\/+$/, '') + '/' + relativeURL.replace(/^\\/+/, '')\n    : baseURL;\n};\n","'use strict';\n\nvar utils = require('./../utils');\n\nfunction InterceptorManager() {\n  this.handlers = [];\n}\n\n/**\n * Add a new interceptor to the stack\n *\n * @param {Function} fulfilled The function to handle `then` for a `Promise`\n * @param {Function} rejected The function to handle `reject` for a `Promise`\n *\n * @return {Number} An ID used to remove interceptor later\n */\nInterceptorManager.prototype.use = function use(fulfilled, rejected) {\n  this.handlers.push({\n    fulfilled: fulfilled,\n    rejected: rejected\n  });\n  return this.handlers.length - 1;\n};\n\n/**\n * Remove an interceptor from the stack\n *\n * @param {Number} id The ID that was returned by `use`\n */\nInterceptorManager.prototype.eject = function eject(id) {\n  if (this.handlers[id]) {\n    this.handlers[id] = null;\n  }\n};\n\n/**\n * Iterate over all the registered interceptors\n *\n * This method is particularly useful for skipping over any\n * interceptors that may have become `null` calling `eject`.\n *\n * @param {Function} fn The function to call for each interceptor\n */\nInterceptorManager.prototype.forEach = function forEach(fn) {\n  utils.forEach(this.handlers, function forEachHandler(h) {\n    if (h !== null) {\n      fn(h);\n    }\n  });\n};\n\nmodule.exports = InterceptorManager;\n"],"sourceRoot":""}